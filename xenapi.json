[
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A session",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "User subject-identifier of the sessions to be destroyed",
            "name": "subject_identifier",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Log out all sessions associated to a user subject-identifier, except the session associated with the context calling this function",
        "name": "logout_subject_identifier"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return a list of all the user subject-identifiers of all existing sessions",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "The list of user subject-identifiers of all existing sessions"
        ],
        "description": "Return a list of all the user subject-identifiers of all existing sessions",
        "name": "get_all_subject_identifiers"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Log out of local session.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Log out of local session.",
        "name": "local_logout"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Database dump filename.",
            "name": "filename",
            "type": "string"
          }
        ],
        "result": [
          "session ref",
          "ID of newly created session"
        ],
        "description": "",
        "name": "create_from_db_file"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Username for login.",
            "name": "uname",
            "type": "string"
          },
          {
            "doc": "Password for login.",
            "name": "pwd",
            "type": "string"
          }
        ],
        "result": [
          "session ref",
          "ID of newly created session"
        ],
        "description": "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host.",
        "name": "slave_local_login_with_password"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Old password for account",
            "name": "old_pwd",
            "type": "string"
          },
          {
            "doc": "New password for account",
            "name": "new_pwd",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Change the account password; if your session is authenticated with root priviledges then the old_pwd is validated and the new_pwd is set regardless",
        "name": "change_password"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Log out of a session",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Log out of a session",
        "name": "logout"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to authenticate the user, returning a session reference if successful",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "The credentials given by the user are incorrect, so access has been denied, and you have not been issued a session handle.",
            "name": "SESSION_AUTHENTICATION_FAILED"
          },
          {
            "doc": "You cannot make regular API calls directly on a slave. Please pass API calls via the master host.",
            "name": "HOST_IS_SLAVE"
          }
        ],
        "params": [
          {
            "doc": "Username for login.",
            "name": "uname",
            "type": "string"
          },
          {
            "doc": "Password for login.",
            "name": "pwd",
            "type": "string"
          },
          {
            "doc": "Client API version.",
            "name": "version",
            "type": "string"
          },
          {
            "doc": "Key string for distinguishing different API users sharing the same login name.",
            "name": "originator",
            "type": "string"
          }
        ],
        "result": [
          "session ref",
          "reference of newly created session"
        ],
        "description": "Attempt to authenticate the user, returning a session reference if successful",
        "name": "login_with_password"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given session.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given session.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given session.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the originator field of the given session.",
        "name": "get_originator"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "references the parent session that created this session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "session ref",
          "value of the field"
        ],
        "description": "Get the parent field of the given session.",
        "name": "get_parent"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of tasks created using the current session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "task ref set",
          "value of the field"
        ],
        "description": "Get the tasks field of the given session.",
        "name": "get_tasks"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list with all RBAC permissions for this session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the rbac_permissions field of the given session.",
        "name": "get_rbac_permissions"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the auth_user_name field of the given session.",
        "name": "get_auth_user_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the auth_user_sid field of the given session.",
        "name": "get_auth_user_sid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "time when session was last validated",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the validation_time field of the given session.",
        "name": "get_validation_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "subject ref",
          "value of the field"
        ],
        "description": "Get the subject field of the given session.",
        "name": "get_subject"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true iff this session was created using local superuser credentials",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_local_superuser field of the given session.",
        "name": "get_is_local_superuser"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given session.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if this session relates to a intra-pool login, false otherwise",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the pool field of the given session.",
        "name": "get_pool"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Timestamp for last time session was active",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_active field of the given session.",
        "name": "get_last_active"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Currently connected user",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "user ref",
          "value of the field"
        ],
        "description": "Get the this_user field of the given session.",
        "name": "get_this_user"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Currently connected host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the this_host field of the given session.",
        "name": "get_this_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given session.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A session",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "session ref",
          "reference to the object"
        ],
        "description": "Get a reference to the session instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A session",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "session ref"
          }
        ],
        "result": [
          "session record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given session.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Currently connected host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "Currently connected host",
        "name": "this_host"
      },
      {
        "lifecycle": [
          {
            "description": "Currently connected user",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "user ref",
        "description": "Currently connected user",
        "name": "this_user"
      },
      {
        "lifecycle": [
          {
            "description": "Timestamp for last time session was active",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Timestamp for last time session was active",
        "name": "last_active"
      },
      {
        "lifecycle": [
          {
            "description": "True if this session relates to a intra-pool login, false otherwise",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if this session relates to a intra-pool login, false otherwise",
        "name": "pool"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true iff this session was created using local superuser credentials",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true iff this session was created using local superuser credentials",
        "name": "is_local_superuser"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "subject ref",
        "description": "references the subject instance that created the session. If a session instance has is_local_superuser set, then the value of this field is undefined.",
        "name": "subject"
      },
      {
        "default": "19700101T00:00:00Z",
        "lifecycle": [
          {
            "description": "time when session was last validated",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "time when session was last validated",
        "name": "validation_time"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the subject identifier of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
        "name": "auth_user_sid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the subject name of the user that was externally authenticated. If a session instance has is_local_superuser set, then the value of this field is undefined.",
        "name": "auth_user_name"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list with all RBAC permissions for this session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "list with all RBAC permissions for this session",
        "name": "rbac_permissions"
      },
      {
        "lifecycle": [
          {
            "description": "list of tasks created using the current session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "task ref set",
        "description": "list of tasks created using the current session",
        "name": "tasks"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "references the parent session that created this session",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "session ref",
        "description": "references the parent session that created this session",
        "name": "parent"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a key string provided by a API user to distinguish itself from other users sharing the same login name",
        "name": "originator"
      }
    ],
    "description": "A session",
    "name": "session"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Management of remote authentication services",
        "release": "george",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "A string containing the subject_identifier, unique in the external directory service",
            "name": "subject_identifier",
            "type": "string"
          }
        ],
        "result": [
          "string set",
          "set of subject_identifiers that provides the group membership of subject_identifier passed as argument, it contains, recursively, all groups a subject_identifier is member of."
        ],
        "description": "This calls queries the external directory service to obtain the transitively-closed set of groups that the the subject_identifier is member of.",
        "name": "get_group_membership"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "A string containing the subject_identifier, unique in the external directory service",
            "name": "subject_identifier",
            "type": "string"
          }
        ],
        "result": [
          "(string -> string) map",
          "key-value pairs containing at least a key called subject_name"
        ],
        "description": "This call queries the external directory service to obtain the user information (e.g. username, organization etc) from the specified subject_identifier",
        "name": "get_subject_information_from_identifier"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The human-readable subject_name, such as a username or a groupname",
            "name": "subject_name",
            "type": "string"
          }
        ],
        "result": [
          "string",
          "the subject_identifier obtained from the external directory service"
        ],
        "description": "This call queries the external directory service to obtain the subject_identifier as a string from the human-readable subject_name",
        "name": "get_subject_identifier"
      }
    ],
    "fields": [],
    "description": "Management of remote authentication services",
    "name": "auth"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A user or group that can log in xapi",
        "release": "george",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(subject ref -> subject record) map",
          "records of all objects"
        ],
        "description": "Return a map of subject references to subject records for all subjects known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "subject ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the subjects known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns a list of permission names given a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The subject whose permissions will be retrieved",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "string set",
          "a list of permission names"
        ],
        "description": "This call returns a list of permission names given a subject",
        "name": "get_permissions_name_label"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call removes a role from a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The subject from whom we want to remove the role",
            "name": "self",
            "type": "subject ref"
          },
          {
            "doc": "The unique role reference in the subject's roles field",
            "name": "role",
            "type": "role ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call removes a role from a subject",
        "name": "remove_from_roles"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call adds a new role to a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The subject who we want to add the role to",
            "name": "self",
            "type": "subject ref"
          },
          {
            "doc": "The unique role reference",
            "name": "role",
            "type": "role ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call adds a new role to a subject",
        "name": "add_to_roles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the roles associated with this subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "role ref set",
          "value of the field"
        ],
        "description": "Get the roles field of the given subject.",
        "name": "get_roles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given subject.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the subject identifier, unique in the external directory service",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the subject_identifier field of the given subject.",
        "name": "get_subject_identifier"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given subject.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified subject instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "subject record"
          }
        ],
        "result": [
          "subject ref",
          "reference to the newly created object"
        ],
        "description": "Create a new subject instance, and return its handle.\nThe constructor args are: subject_identifier, other_config (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "subject ref",
          "reference to the object"
        ],
        "description": "Get a reference to the subject instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user or group that can log in xapi",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "subject ref"
          }
        ],
        "result": [
          "subject record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given subject.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "the subject identifier, unique in the external directory service",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the subject identifier, unique in the external directory service",
        "name": "subject_identifier"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "{OpaqueRef:0165f154-ba3e-034e-6b27-5d271af109ba}",
        "lifecycle": [
          {
            "description": "the roles associated with this subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "role ref set",
        "description": "the roles associated with this subject",
        "name": "roles"
      }
    ],
    "description": "A user or group that can log in xapi",
    "name": "subject"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A set of permissions associated with a subject",
        "release": "midnight-ride",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A set of permissions associated with a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(role ref -> role record) map",
          "records of all objects"
        ],
        "description": "Return a map of role references to role records for all roles known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A set of permissions associated with a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "role ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the roles known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns a list of roles given a permission name",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The short friendly name of the role",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "role ref set",
          "a list of references to roles"
        ],
        "description": "This call returns a list of roles given a permission name",
        "name": "get_by_permission_name_label"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns a list of roles given a permission",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "a reference to a permission",
            "name": "permission",
            "type": "role ref"
          }
        ],
        "result": [
          "role ref set",
          "a list of references to roles"
        ],
        "description": "This call returns a list of roles given a permission",
        "name": "get_by_permission"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns a list of permission names given a role",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "a reference to a role",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "string set",
          "a list of permission names"
        ],
        "description": "This call returns a list of permission names given a role",
        "name": "get_permissions_name_label"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns a list of permissions given a role",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "a reference to a role",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "role ref set",
          "a list of permissions"
        ],
        "description": "This call returns a list of permissions given a role",
        "name": "get_permissions"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a list of pointers to other roles or permissions",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "role ref set",
          "value of the field"
        ],
        "description": "Get the subroles field of the given role.",
        "name": "get_subroles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "what this role is for",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given role.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a short user-friendly name for the role",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given role.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given role.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A set of permissions associated with a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "role ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the role instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A set of permissions associated with a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "role ref",
          "reference to the object"
        ],
        "description": "Get a reference to the role instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A set of permissions associated with a subject",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "role ref"
          }
        ],
        "result": [
          "role record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given role.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a short user-friendly name for the role",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a short user-friendly name for the role",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "what this role is for",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "what this role is for",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "a list of pointers to other roles or permissions",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "role ref set",
        "description": "a list of pointers to other roles or permissions",
        "name": "subroles"
      }
    ],
    "description": "A set of permissions associated with a subject",
    "name": "role"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A long-running asynchronous task",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "refers to the operation \"cancel\"",
            "name": "cancel"
          },
          {
            "doc": "refers to the operation \"destroy\"",
            "name": "destroy"
          }
        ],
        "name": "task_allowed_operations"
      },
      {
        "values": [
          {
            "doc": "task is in progress",
            "name": "pending"
          },
          {
            "doc": "task was completed successfully",
            "name": "success"
          },
          {
            "doc": "task has failed",
            "name": "failure"
          },
          {
            "doc": "task is being cancelled",
            "name": "cancelling"
          },
          {
            "doc": "task has been cancelled",
            "name": "cancelled"
          }
        ],
        "name": "task_status_type"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A long-running asynchronous task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(task ref -> task record) map",
          "records of all objects"
        ],
        "description": "Return a map of task references to task records for all tasks known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A long-running asynchronous task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "task ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the tasks known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The task",
            "name": "task",
            "type": "task ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Request that a task be cancelled. Note that a task may fail to be cancelled and may complete or fail normally and note that, even when a task does cancel, it might take an arbitrary amount of time.",
        "name": "cancel"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the task object",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the task object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the task object",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new task object which must be manually destroyed.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "short label for the new task",
            "name": "label",
            "type": "string"
          },
          {
            "doc": "longer description for the new task",
            "name": "description",
            "type": "string"
          }
        ],
        "result": [
          "task ref",
          "The reference of the created task object"
        ],
        "description": "Create a new task object which must be manually destroyed.",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given task.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given task.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given task.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Function call trace for debugging.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the backtrace field of the given task.",
        "name": "get_backtrace"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List pointing to all the substasks.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "task ref set",
          "value of the field"
        ],
        "description": "Get the subtasks field of the given task.",
        "name": "get_subtasks"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Ref pointing to the task this is a substask of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "task ref",
          "value of the field"
        ],
        "description": "Get the subtask_of field of the given task.",
        "name": "get_subtask_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given task.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the error_info field of the given task.",
        "name": "get_error_info"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the result field of the given task.",
        "name": "get_result"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the type field of the given task.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the progress field of the given task.",
        "name": "get_progress"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the host on which the task is running",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the resident_on field of the given task.",
        "name": "get_resident_on"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "current status of the task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "enum task_status_type",
          "value of the field"
        ],
        "description": "Get the status field of the given task.",
        "name": "get_status"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the finished field of the given task.",
        "name": "get_finished"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time task was created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the created field of the given task.",
        "name": "get_created"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "(string -> enum task_allowed_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given task.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "enum task_allowed_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given task.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given task.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given task.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given task.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A long-running asynchronous task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "task ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the task instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A long-running asynchronous task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "task ref",
          "reference to the object"
        ],
        "description": "Get a reference to the task instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A long-running asynchronous task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "task ref"
          }
        ],
        "result": [
          "task record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given task.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum task_allowed_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum task_allowed_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "Time task was created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time task was created",
        "name": "created"
      },
      {
        "lifecycle": [
          {
            "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time task finished (i.e. succeeded or failed). If task-status is pending, then the value of this field has no meaning",
        "name": "finished"
      },
      {
        "lifecycle": [
          {
            "description": "current status of the task",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum task_status_type",
        "description": "current status of the task",
        "name": "status"
      },
      {
        "lifecycle": [
          {
            "description": "the host on which the task is running",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "the host on which the task is running",
        "name": "resident_on"
      },
      {
        "lifecycle": [
          {
            "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "This field contains the estimated fraction of the task which is complete. This field should not be used to determine whether the task is complete - for this the status field of the task should be used.",
        "name": "progress"
      },
      {
        "lifecycle": [
          {
            "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "if the task has completed successfully, this field contains the type of the encoded result (i.e. name of the class whose reference is in the result field). Undefined otherwise.",
        "name": "type"
      },
      {
        "lifecycle": [
          {
            "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "if the task has completed successfully, this field contains the result value (either Void or an object reference). Undefined otherwise.",
        "name": "result"
      },
      {
        "lifecycle": [
          {
            "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "if the task has failed, this field contains the set of associated error strings. Undefined otherwise.",
        "name": "error_info"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Ref pointing to the task this is a substask of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "task ref",
        "description": "Ref pointing to the task this is a substask of.",
        "name": "subtask_of"
      },
      {
        "lifecycle": [
          {
            "description": "List pointing to all the substasks.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "task ref set",
        "description": "List pointing to all the substasks.",
        "name": "subtasks"
      },
      {
        "default": "\"()\"",
        "lifecycle": [
          {
            "description": "Function call trace for debugging.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Function call trace for debugging.",
        "name": "backtrace"
      }
    ],
    "description": "A long-running asynchronous task",
    "name": "task"
  },
  {
    "tag": "",
    "lifecycle": [],
    "enums": [
      {
        "values": [
          {
            "doc": "An object has been created",
            "name": "add"
          },
          {
            "doc": "An object has been deleted",
            "name": "del"
          },
          {
            "doc": "An object has been modified",
            "name": "mod"
          }
        ],
        "name": "event_operation"
      }
    ],
    "messages": [
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Injects an artificial event on the given object and return the corresponding ID",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "class of the object",
            "name": "class",
            "type": "string"
          },
          {
            "doc": "A reference to the object that will be changed.",
            "name": "ref",
            "type": "string"
          }
        ],
        "result": [
          "string",
          "the event ID"
        ],
        "description": "Injects an artificial event on the given object and return the corresponding ID",
        "name": "inject"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return the ID of the next event to be generated by the system",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "int",
          "the event ID"
        ],
        "description": "Return the ID of the next event to be generated by the system",
        "name": "get_current_id"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "This session is not registered to receive events.  You must call event.register before event.next.  The session handle you are using is echoed.",
            "name": "SESSION_NOT_REGISTERED"
          },
          {
            "doc": "Some events have been lost from the queue and cannot be retrieved.",
            "name": "EVENTS_LOST"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "register for events for the indicated classes",
            "name": "classes",
            "type": "string set"
          },
          {
            "doc": "A token representing the point from which to generate database events. The empty string represents the beginning.",
            "name": "token",
            "type": "string"
          },
          {
            "doc": "Return after this many seconds if no events match",
            "name": "timeout",
            "type": "float"
          }
        ],
        "result": [
          "event record set",
          "the batch of events"
        ],
        "description": "Blocking call which returns a new token and a (possibly empty) batch of events. The returned token can be used in subsequent calls to this function.",
        "name": "from"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method. ",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "This session is not registered to receive events.  You must call event.register before event.next.  The session handle you are using is echoed.",
            "name": "SESSION_NOT_REGISTERED"
          },
          {
            "doc": "Some events have been lost from the queue and cannot be retrieved.",
            "name": "EVENTS_LOST"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "event record set",
          "the batch of events"
        ],
        "description": "Blocking call which returns a (possibly empty) batch of events. This method is only recommended for legacy use. New development should use event.from which supercedes this method. ",
        "name": "next"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Unregisters this session with the event system",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "remove this session's registration for the indicated classes",
            "name": "classes",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Unregisters this session with the event system",
        "name": "unregister"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Registers this session with the event system.  Specifying * as the desired class will register for all classes.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "register for events for the indicated classes",
            "name": "classes",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Registers this session with the event system.  Specifying * as the desired class will register for all classes.",
        "name": "register"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "An ID, monotonically increasing, and local to the current session",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "An ID, monotonically increasing, and local to the current session",
        "name": "id"
      },
      {
        "lifecycle": [
          {
            "description": "The time at which the event occurred",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "The time at which the event occurred",
        "name": "timestamp"
      },
      {
        "lifecycle": [
          {
            "description": "The name of the class of the object that changed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The name of the class of the object that changed",
        "name": "class"
      },
      {
        "lifecycle": [
          {
            "description": "The operation that was performed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum event_operation",
        "description": "The operation that was performed",
        "name": "operation"
      },
      {
        "lifecycle": [
          {
            "description": "A reference to the object that changed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "A reference to the object that changed",
        "name": "ref"
      },
      {
        "lifecycle": [
          {
            "description": "The uuid of the object that changed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The uuid of the object that changed",
        "name": "obj_uuid"
      }
    ],
    "description": "Asynchronous event registration and handling",
    "name": "event"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Pool-wide information",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Indicates this pool is in the process of enabling HA",
            "name": "ha_enable"
          },
          {
            "doc": "Indicates this pool is in the process of disabling HA",
            "name": "ha_disable"
          }
        ],
        "name": "pool_allowed_operations"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide information",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(pool ref -> pool record) map",
          "records of all objects"
        ],
        "description": "Return a map of pool references to pool records for all pools known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide information",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "pool ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the pools known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets ssl_legacy false on each host.",
            "release": "dundee",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "(ignored)",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets ssl_legacy true on each host: see Host.ssl_legacy",
        "name": "disable_ssl_legacy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets ssl_legacy true on each host.",
            "release": "dundee",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "(ignored)",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets ssl_legacy true on each host: see Host.ssl_legacy",
        "name": "enable_ssl_legacy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Apply an edition to all hosts in the pool",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the pool",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "The requested edition",
            "name": "edition",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Apply an edition to all hosts in the pool",
        "name": "apply_edition"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call returns the license state for the pool",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the pool",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "The pool's license state"
        ],
        "description": "This call returns the license state for the pool",
        "name": "get_license_state"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call disables pool-wide local storage caching",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the pool",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call disables pool-wide local storage caching",
        "name": "disable_local_storage_caching"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call attempts to enable pool-wide local storage caching",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the pool",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call attempts to enable pool-wide local storage caching",
        "name": "enable_local_storage_caching"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call tests if a location is valid",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Reference to the pool",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Location config settings to test",
            "name": "config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "string",
          "An XMLRPC result"
        ],
        "description": "This call tests if a location is valid",
        "name": "test_archive_target"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the IP address of the vswitch controller.",
            "release": "midnight-ride",
            "transition": "published"
          },
          {
            "description": "Allow to be set to the empty string (no controller is used).",
            "release": "cowley",
            "transition": "extended"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "IP address of the vswitch controller.",
            "name": "address",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the IP address of the vswitch controller.",
        "name": "set_vswitch_controller"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Disable the redo log if in use, unless HA is enabled.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Disable the redo log if in use, unless HA is enabled.",
        "name": "disable_redo_log"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Enable the redo log on the given SR and start using it, unless HA is enabled.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "SR to hold the redo log.",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Enable the redo log on the given SR and start using it, unless HA is enabled.",
        "name": "enable_redo_log"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sync SSL certificates from master to slaves.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sync SSL certificates from master to slaves.",
        "name": "certificate_sync"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "List all installed SSL certificate revocation lists.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "All installed CRLs"
        ],
        "description": "List all installed SSL certificate revocation lists.",
        "name": "crl_list"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Remove an SSL certificate revocation list.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The CRL name",
            "name": "name",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove an SSL certificate revocation list.",
        "name": "crl_uninstall"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Install an SSL certificate revocation list, pool-wide.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "A name to give the CRL",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The CRL",
            "name": "cert",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Install an SSL certificate revocation list, pool-wide.",
        "name": "crl_install"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "List all installed SSL certificates.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "All installed certificates"
        ],
        "description": "List all installed SSL certificates.",
        "name": "certificate_list"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Remove an SSL certificate.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The certificate name",
            "name": "name",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove an SSL certificate.",
        "name": "certificate_uninstall"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Install an SSL certificate pool-wide.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "A name to give the certificate",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The certificate",
            "name": "cert",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Install an SSL certificate pool-wide.",
        "name": "certificate_install"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "",
            "name": "host",
            "type": "string"
          },
          {
            "doc": "",
            "name": "port",
            "type": "int"
          },
          {
            "doc": "",
            "name": "body",
            "type": "string"
          }
        ],
        "result": [
          "string",
          "The response"
        ],
        "description": "Send the given body to the given host and port, using HTTPS, and print the response.  This is used for debugging the SSL layer.",
        "name": "send_test_post"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Retrieves vm migrate recommendations for the pool from the workload balancing server",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VM ref -> string set) map",
          "The list of vm migration recommendations"
        ],
        "description": "Retrieves vm migrate recommendations for the pool from the workload balancing server",
        "name": "retrieve_wlb_recommendations"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Retrieves the pool optimization criteria from the workload balancing server",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "The configuration used in optimizing this pool"
        ],
        "description": "Retrieves the pool optimization criteria from the workload balancing server",
        "name": "retrieve_wlb_configuration"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the pool optimization criteria for the workload balancing server",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The configuration to use in optimizing this pool",
            "name": "config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the pool optimization criteria for the workload balancing server",
        "name": "send_wlb_configuration"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Permanently deconfigures workload balancing monitoring on this pool",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Permanently deconfigures workload balancing monitoring on this pool",
        "name": "deconfigure_wlb"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Initializes workload balancing monitoring on this pool with the specified wlb server",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The ip address and port to use when accessing the wlb server",
            "name": "wlb_url",
            "type": "string"
          },
          {
            "doc": "The username used to authenticate with the wlb server",
            "name": "wlb_username",
            "type": "string"
          },
          {
            "doc": "The password used to authenticate with the wlb server",
            "name": "wlb_password",
            "type": "string"
          },
          {
            "doc": "The usernamed used by the wlb server to authenticate with the xenserver",
            "name": "xenserver_username",
            "type": "string"
          },
          {
            "doc": "The password used by the wlb server to authenticate with the xenserver",
            "name": "xenserver_password",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Initializes workload balancing monitoring on this pool with the specified wlb server",
        "name": "initialize_wlb"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The pool where to detect non-homogeneous external authentication configuration",
            "name": "pool",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call asynchronously detects if the external authentication configuration in any slave is different from that in the master and raises appropriate alerts",
        "name": "detect_nonhomogeneous_external_auth"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call disables external authentication on all the hosts of the pool",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The pool whose external authentication should be disabled",
            "name": "pool",
            "type": "pool ref"
          },
          {
            "doc": "Optional parameters as a list of key-values containing the configuration data",
            "name": "config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call disables external authentication on all the hosts of the pool",
        "name": "disable_external_auth"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call enables external authentication on all the hosts of the pool",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The pool whose external authentication should be enabled",
            "name": "pool",
            "type": "pool ref"
          },
          {
            "doc": "A list of key-values containing the configuration data",
            "name": "config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The name of the service",
            "name": "service_name",
            "type": "string"
          },
          {
            "doc": "The type of authentication (e.g. AD for Active Directory)",
            "name": "auth_type",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call enables external authentication on all the hosts of the pool",
        "name": "enable_external_auth"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The pool",
            "name": "pool",
            "type": "pool ref"
          },
          {
            "doc": "The name associated with the blob",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The mime type for the data. Empty string translates to application\/octet-stream",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference of the blob, needed for populating its data"
        ],
        "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
        "name": "create_new_blob"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the maximum number of host failures to consider in the HA VM restart planner",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The pool",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New number of host failures to consider",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the maximum number of host failures to consider in the HA VM restart planner",
        "name": "set_ha_host_failures_to_tolerate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return a VM failover plan assuming a given subset of hosts fail",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The set of hosts to assume have failed",
            "name": "failed_hosts",
            "type": "host ref set"
          },
          {
            "doc": "The set of VMs to restart",
            "name": "failed_vms",
            "type": "VM ref set"
          }
        ],
        "result": [
          "(VM ref -> (string -> string) map) map",
          "VM failover plan: a map of VM to host to restart the host on"
        ],
        "description": "Return a VM failover plan assuming a given subset of hosts fail",
        "name": "ha_compute_vm_failover_plan"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Map of protected VM reference to restart priority",
            "name": "configuration",
            "type": "(VM ref -> string) map"
          }
        ],
        "result": [
          "int",
          "maximum value for ha_host_failures_to_tolerate given provided configuration"
        ],
        "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs",
        "name": "ha_compute_hypothetical_max_host_failures_to_tolerate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "int",
          "maximum value for ha_host_failures_to_tolerate given current configuration"
        ],
        "description": "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs",
        "name": "ha_compute_max_host_failures_to_tolerate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns true if a VM failover plan exists for up to 'n' host failures",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The number of host failures to plan for",
            "name": "n",
            "type": "int"
          }
        ],
        "result": [
          "bool",
          "true if a failover plan exists for the supplied number of host failures"
        ],
        "description": "Returns true if a VM failover plan exists for up to 'n' host failures",
        "name": "ha_failover_plan_exists"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked",
            "release": "orlando-update-1",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The number of seconds to block the restart thread for",
            "name": "seconds",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "When this call returns the VM restart logic will not run for the requested number of seconds. If the argument is zero then the restart thread is immediately unblocked",
        "name": "ha_prevent_restarts_for"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Perform an orderly handover of the role of master to the referenced host.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host who should become the new master",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Perform an orderly handover of the role of master to the referenced host.",
        "name": "designate_new_master"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Forcibly synchronise the database now",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Forcibly synchronise the database now",
        "name": "sync_database"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Turn off High Availability mode",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Turn off High Availability mode",
        "name": "disable_ha"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Turn on High Availability mode",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Set of SRs to use for storage heartbeating",
            "name": "heartbeat_srs",
            "type": "SR ref set"
          },
          {
            "doc": "Detailed HA configuration to apply",
            "name": "configuration",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Turn on High Availability mode",
        "name": "enable_ha"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a pool-wide VLAN by taking the PIF.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave.",
            "name": "VLAN_TAG_INVALID"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "physical interface on any particular host, that identifies the PIF on which to create the (pool-wide) VLAN interface",
            "name": "pif",
            "type": "PIF ref"
          },
          {
            "doc": "network to which this interface should be connected",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "VLAN tag for the new interface",
            "name": "VLAN",
            "type": "int"
          }
        ],
        "result": [
          "PIF ref set",
          "The references of the created PIF objects"
        ],
        "description": "Create a pool-wide VLAN by taking the PIF.",
        "name": "create_VLAN_from_PIF"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create PIFs, mapping a network to the same physical interface\/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave.",
            "name": "VLAN_TAG_INVALID"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "physical interface on which to create the VLAN interface",
            "name": "device",
            "type": "string"
          },
          {
            "doc": "network to which this interface should be connected",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "VLAN tag for the new interface",
            "name": "VLAN",
            "type": "int"
          }
        ],
        "result": [
          "PIF ref set",
          "The references of the created PIF objects"
        ],
        "description": "Create PIFs, mapping a network to the same physical interface\/VLAN on each host. This call is deprecated: use Pool.create_VLAN_from_PIF instead.",
        "name": "create_VLAN"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host ref set",
          "list of hosts whose master address were successfully reset"
        ],
        "description": "Instruct a pool master, M, to try and contact its slaves and, if slaves are in emergency mode, reset their master address to M.",
        "name": "recover_slaves"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct a slave already in a pool that the master has changed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The hostname of the master",
            "name": "master_address",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Instruct a slave already in a pool that the master has changed",
        "name": "emergency_reset_master"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct host that's currently a slave to transition to being master",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Instruct host that's currently a slave to transition to being master",
        "name": "emergency_transition_to_master"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct a pool master to eject a host from the pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to eject",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Instruct a pool master to eject a host from the pool",
        "name": "eject"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct host to join a new pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The hostname of the master of the pool to join",
            "name": "master_address",
            "type": "string"
          },
          {
            "doc": "The username of the master (for initial authentication)",
            "name": "master_username",
            "type": "string"
          },
          {
            "doc": "The password for the master (for initial authentication)",
            "name": "master_password",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Instruct host to join a new pool",
        "name": "join_force"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Instruct host to join a new pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The host joining the pool cannot contain any shared storage.",
            "name": "JOINING_HOST_CANNOT_CONTAIN_SHARED_SRS"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The hostname of the master of the pool to join",
            "name": "master_address",
            "type": "string"
          },
          {
            "doc": "The username of the master (for initial authentication)",
            "name": "master_username",
            "type": "string"
          },
          {
            "doc": "The password for the master (for initial authentication)",
            "name": "master_password",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Instruct host to join a new pool",
        "name": "join"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if communication with the WLB server should enforce SSL certificate verification.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the wlb_verify_cert field of the given pool.",
        "name": "set_wlb_verify_cert"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if workload balancing is enabled on the pool, false otherwise",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the wlb_enabled field of the given pool.",
        "name": "set_wlb_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Configuration for the automatic health check feature",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the health_check_config field of the given pool.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_health_check_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Configuration for the automatic health check feature",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the health_check_config field of the given pool.",
        "name": "add_to_health_check_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Configuration for the automatic health check feature",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the health_check_config field of the given pool.",
        "name": "set_health_check_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "gui-specific configuration for pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the gui_config field of the given pool.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_gui_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "gui-specific configuration for pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the gui_config field of the given pool.",
        "name": "add_to_gui_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "gui-specific configuration for pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the gui_config field of the given pool.",
        "name": "set_gui_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given pool.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given pool.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given pool.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the ha_allow_overcommit field of the given pool.",
        "name": "set_ha_allow_overcommit"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given pool.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given pool.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given pool.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the crash_dump_SR field of the given pool.",
        "name": "set_crash_dump_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the suspend_image_SR field of the given pool.",
        "name": "set_suspend_image_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Default SR for VDIs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the default_SR field of the given pool.",
        "name": "set_default_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name_description field of the given pool.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Short name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name_label field of the given pool.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> enum pool_allowed_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given pool.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "enum pool_allowed_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given pool.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The HA cluster stack that is currently in use. Only valid when HA is enabled.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the ha_cluster_stack field of the given pool.",
        "name": "get_ha_cluster_stack"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The set of currently known metadata VDIs for this pool",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "VDI ref set",
          "value of the field"
        ],
        "description": "Get the metadata_VDIs field of the given pool.",
        "name": "get_metadata_VDIs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide restrictions currently in effect",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the restrictions field of the given pool.",
        "name": "get_restrictions"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "address of the vswitch controller",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vswitch_controller field of the given pool.",
        "name": "get_vswitch_controller"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "indicates the VDI to use for the redo-log other than when HA is enabled",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the redo_log_vdi field of the given pool.",
        "name": "get_redo_log_vdi"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true a redo-log is to be used other than when HA is enabled, false otherwise",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the redo_log_enabled field of the given pool.",
        "name": "get_redo_log_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if communication with the WLB server should enforce SSL certificate verification.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the wlb_verify_cert field of the given pool.",
        "name": "get_wlb_verify_cert"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if workload balancing is enabled on the pool, false otherwise",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the wlb_enabled field of the given pool.",
        "name": "get_wlb_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Username for accessing the workload balancing host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the wlb_username field of the given pool.",
        "name": "get_wlb_username"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Url for the configured workload balancing host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the wlb_url field of the given pool.",
        "name": "get_wlb_url"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Configuration for the automatic health check feature",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the health_check_config field of the given pool.",
        "name": "get_health_check_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "gui-specific configuration for pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the gui_config field of the given pool.",
        "name": "get_gui_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given pool.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Binary blobs associated with this pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> blob ref) map",
          "value of the field"
        ],
        "description": "Get the blobs field of the given pool.",
        "name": "get_blobs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the ha_overcommitted field of the given pool.",
        "name": "get_ha_overcommitted"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the ha_allow_overcommit field of the given pool.",
        "name": "get_ha_allow_overcommit"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the ha_plan_exists_for field of the given pool.",
        "name": "get_ha_plan_exists_for"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the ha_host_failures_to_tolerate field of the given pool.",
        "name": "get_ha_host_failures_to_tolerate"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HA statefile VDIs in use",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the ha_statefiles field of the given pool.",
        "name": "get_ha_statefiles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The current HA configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the ha_configuration field of the given pool.",
        "name": "get_ha_configuration"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if HA is enabled on the pool, false otherwise",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the ha_enabled field of the given pool.",
        "name": "get_ha_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given pool.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the crash_dump_SR field of the given pool.",
        "name": "get_crash_dump_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the suspend_image_SR field of the given pool.",
        "name": "get_suspend_image_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Default SR for VDIs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the default_SR field of the given pool.",
        "name": "get_default_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The host that is pool master",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the master field of the given pool.",
        "name": "get_master"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name_description field of the given pool.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Short name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name_label field of the given pool.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given pool.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide information",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "pool ref",
          "reference to the object"
        ],
        "description": "Get a reference to the pool instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide information",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool ref"
          }
        ],
        "result": [
          "pool record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given pool.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Short name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "Short name",
        "name": "name_label"
      },
      {
        "lifecycle": [
          {
            "description": "Description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "Description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "The host that is pool master",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "The host that is pool master",
        "name": "master"
      },
      {
        "lifecycle": [
          {
            "description": "Default SR for VDIs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "Default SR for VDIs",
        "name": "default_SR"
      },
      {
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "The SR in which VDIs for suspend images are created",
        "name": "suspend_image_SR"
      },
      {
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "The SR in which VDIs for crash dumps are created",
        "name": "crash_dump_SR"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if HA is enabled on the pool, false otherwise",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if HA is enabled on the pool, false otherwise",
        "name": "ha_enabled"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The current HA configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "The current HA configuration",
        "name": "ha_configuration"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "HA statefile VDIs in use",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "HA statefile VDIs in use",
        "name": "ha_statefiles"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Number of host failures to tolerate before the Pool is declared to be overcommitted",
        "name": "ha_host_failures_to_tolerate"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs.",
        "name": "ha_plan_exists_for"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "If set to false then operations which would cause the Pool to become overcommitted will be blocked.",
        "name": "ha_allow_overcommit"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures",
        "name": "ha_overcommitted"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Binary blobs associated with this pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> blob ref) map",
        "description": "Binary blobs associated with this pool",
        "name": "blobs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "gui-specific configuration for pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "gui-specific configuration for pool",
        "name": "gui_config"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Configuration for the automatic health check feature",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Configuration for the automatic health check feature",
        "name": "health_check_config"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "Url for the configured workload balancing host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Url for the configured workload balancing host",
        "name": "wlb_url"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "Username for accessing the workload balancing host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Username for accessing the workload balancing host",
        "name": "wlb_username"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if workload balancing is enabled on the pool, false otherwise",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "true if workload balancing is enabled on the pool, false otherwise",
        "name": "wlb_enabled"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if communication with the WLB server should enforce SSL certificate verification.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "true if communication with the WLB server should enforce SSL certificate verification.",
        "name": "wlb_verify_cert"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true a redo-log is to be used other than when HA is enabled, false otherwise",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true a redo-log is to be used other than when HA is enabled, false otherwise",
        "name": "redo_log_enabled"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "indicates the VDI to use for the redo-log other than when HA is enabled",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "indicates the VDI to use for the redo-log other than when HA is enabled",
        "name": "redo_log_vdi"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "address of the vswitch controller",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "address of the vswitch controller",
        "name": "vswitch_controller"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Pool-wide restrictions currently in effect",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Pool-wide restrictions currently in effect",
        "name": "restrictions"
      },
      {
        "lifecycle": [
          {
            "description": "The set of currently known metadata VDIs for this pool",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref set",
        "description": "The set of currently known metadata VDIs for this pool",
        "name": "metadata_VDIs"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "The HA cluster stack that is currently in use. Only valid when HA is enabled.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The HA cluster stack that is currently in use. Only valid when HA is enabled.",
        "name": "ha_cluster_stack"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum pool_allowed_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum pool_allowed_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      }
    ],
    "description": "Pool-wide information",
    "name": "pool"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Pool-wide patches",
        "release": "miami",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "This patch requires HVM guests to be restarted once applied.",
            "name": "restartHVM"
          },
          {
            "doc": "This patch requires PV guests to be restarted once applied.",
            "name": "restartPV"
          },
          {
            "doc": "This patch requires the host to be restarted once applied.",
            "name": "restartHost"
          },
          {
            "doc": "This patch requires XAPI to be restarted once applied.",
            "name": "restartXAPI"
          }
        ],
        "name": "after_apply_guidance"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide patches",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(pool_patch ref -> pool_patch record) map",
          "records of all objects"
        ],
        "description": "Return a map of pool_patch references to pool_patch records for all pool_patchs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide patches",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "pool_patch ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the pool_patchs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes the patch's files from the specified host",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to clean up",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "The host on which to clean the patch",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes the patch's files from the specified host",
        "name": "clean_on_host"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to destroy",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches.",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes the patch's files from all hosts in the pool, but does not remove the database entries",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to clean up",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes the patch's files from all hosts in the pool, but does not remove the database entries",
        "name": "pool_clean"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes the patch's files from the server",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to clean up",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes the patch's files from the server",
        "name": "clean"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Execute the precheck stage of the selected patch on a host and return its output",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch whose prechecks will be run",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "The host to run the prechecks on",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "the output of the patch prechecks"
        ],
        "description": "Execute the precheck stage of the selected patch on a host and return its output",
        "name": "precheck"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to apply",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output",
        "name": "pool_apply"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Apply the selected patch to a host and return its output",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to apply",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "The host to apply the patch too",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "the output of the patch application process"
        ],
        "description": "Apply the selected patch to a host and return its output",
        "name": "apply"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given pool_patch.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given pool_patch.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given pool_patch.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given pool_patch.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "What the client should do after this patch has been applied.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "enum after_apply_guidance set",
          "value of the field"
        ],
        "description": "Get the after_apply_guidance field of the given pool_patch.",
        "name": "get_after_apply_guidance"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "This hosts this patch is applied to.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "host_patch ref set",
          "value of the field"
        ],
        "description": "Get the host_patches field of the given pool_patch.",
        "name": "get_host_patches"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "This patch should be applied across the entire pool",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the pool_applied field of the given pool_patch.",
        "name": "get_pool_applied"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Size of the patch",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the size field of the given pool_patch.",
        "name": "get_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Patch version number",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the version field of the given pool_patch.",
        "name": "get_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given pool_patch.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given pool_patch.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given pool_patch.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide patches",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "pool_patch ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the pool_patch instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide patches",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "pool_patch ref",
          "reference to the object"
        ],
        "description": "Get a reference to the pool_patch instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool-wide patches",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "pool_patch ref"
          }
        ],
        "result": [
          "pool_patch record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given pool_patch.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "Patch version number",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Patch version number",
        "name": "version"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Size of the patch",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Size of the patch",
        "name": "size"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "This patch should be applied across the entire pool",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "This patch should be applied across the entire pool",
        "name": "pool_applied"
      },
      {
        "lifecycle": [
          {
            "description": "This hosts this patch is applied to.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host_patch ref set",
        "description": "This hosts this patch is applied to.",
        "name": "host_patches"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "What the client should do after this patch has been applied.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum after_apply_guidance set",
        "description": "What the client should do after this patch has been applied.",
        "name": "after_apply_guidance"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "Pool-wide patches",
    "name": "pool_patch"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A virtual machine (or 'guest').",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "VM is offline and not using any resources",
            "name": "Halted"
          },
          {
            "doc": "All resources have been allocated but the VM itself is paused and its vCPUs are not running",
            "name": "Paused"
          },
          {
            "doc": "Running",
            "name": "Running"
          },
          {
            "doc": "VM state has been saved to disk and it is nolonger running. Note that disks remain in-use while the VM is suspended.",
            "name": "Suspended"
          }
        ],
        "name": "vm_power_state"
      },
      {
        "values": [
          {
            "doc": "destroy the VM state",
            "name": "destroy"
          },
          {
            "doc": "restart the VM",
            "name": "restart"
          }
        ],
        "name": "on_normal_exit"
      },
      {
        "values": [
          {
            "doc": "destroy the VM state",
            "name": "destroy"
          },
          {
            "doc": "record a coredump and then destroy the VM state",
            "name": "coredump_and_destroy"
          },
          {
            "doc": "restart the VM",
            "name": "restart"
          },
          {
            "doc": "record a coredump and then restart the VM",
            "name": "coredump_and_restart"
          },
          {
            "doc": "leave the crashed VM paused",
            "name": "preserve"
          },
          {
            "doc": "rename the crashed VM and start a new copy",
            "name": "rename_restart"
          }
        ],
        "name": "on_crash_behaviour"
      },
      {
        "values": [
          {
            "doc": "refers to the operation \"snapshot\"",
            "name": "snapshot"
          },
          {
            "doc": "refers to the operation \"clone\"",
            "name": "clone"
          },
          {
            "doc": "refers to the operation \"copy\"",
            "name": "copy"
          },
          {
            "doc": "refers to the operation \"create_template\"",
            "name": "create_template"
          },
          {
            "doc": "refers to the operation \"revert\"",
            "name": "revert"
          },
          {
            "doc": "refers to the operation \"checkpoint\"",
            "name": "checkpoint"
          },
          {
            "doc": "refers to the operation \"snapshot_with_quiesce\"",
            "name": "snapshot_with_quiesce"
          },
          {
            "doc": "refers to the operation \"provision\"",
            "name": "provision"
          },
          {
            "doc": "refers to the operation \"start\"",
            "name": "start"
          },
          {
            "doc": "refers to the operation \"start_on\"",
            "name": "start_on"
          },
          {
            "doc": "refers to the operation \"pause\"",
            "name": "pause"
          },
          {
            "doc": "refers to the operation \"unpause\"",
            "name": "unpause"
          },
          {
            "doc": "refers to the operation \"clean_shutdown\"",
            "name": "clean_shutdown"
          },
          {
            "doc": "refers to the operation \"clean_reboot\"",
            "name": "clean_reboot"
          },
          {
            "doc": "refers to the operation \"hard_shutdown\"",
            "name": "hard_shutdown"
          },
          {
            "doc": "refers to the operation \"power_state_reset\"",
            "name": "power_state_reset"
          },
          {
            "doc": "refers to the operation \"hard_reboot\"",
            "name": "hard_reboot"
          },
          {
            "doc": "refers to the operation \"suspend\"",
            "name": "suspend"
          },
          {
            "doc": "refers to the operation \"csvm\"",
            "name": "csvm"
          },
          {
            "doc": "refers to the operation \"resume\"",
            "name": "resume"
          },
          {
            "doc": "refers to the operation \"resume_on\"",
            "name": "resume_on"
          },
          {
            "doc": "refers to the operation \"pool_migrate\"",
            "name": "pool_migrate"
          },
          {
            "doc": "refers to the operation \"migrate_send\"",
            "name": "migrate_send"
          },
          {
            "doc": "refers to the operation \"get_boot_record\"",
            "name": "get_boot_record"
          },
          {
            "doc": "refers to the operation \"send_sysrq\"",
            "name": "send_sysrq"
          },
          {
            "doc": "refers to the operation \"send_trigger\"",
            "name": "send_trigger"
          },
          {
            "doc": "refers to the operation \"query_services\"",
            "name": "query_services"
          },
          {
            "doc": "refers to the operation \"shutdown\"",
            "name": "shutdown"
          },
          {
            "doc": "refers to the operation \"call_plugin\"",
            "name": "call_plugin"
          },
          {
            "doc": "Changing the memory settings",
            "name": "changing_memory_live"
          },
          {
            "doc": "Waiting for the memory settings to change",
            "name": "awaiting_memory_live"
          },
          {
            "doc": "Changing the memory dynamic range",
            "name": "changing_dynamic_range"
          },
          {
            "doc": "Changing the memory static range",
            "name": "changing_static_range"
          },
          {
            "doc": "Changing the memory limits",
            "name": "changing_memory_limits"
          },
          {
            "doc": "Changing the shadow memory for a halted VM.",
            "name": "changing_shadow_memory"
          },
          {
            "doc": "Changing the shadow memory for a running VM.",
            "name": "changing_shadow_memory_live"
          },
          {
            "doc": "Changing VCPU settings for a halted VM.",
            "name": "changing_VCPUs"
          },
          {
            "doc": "Changing VCPU settings for a running VM.",
            "name": "changing_VCPUs_live"
          },
          {
            "doc": "",
            "name": "assert_operation_valid"
          },
          {
            "doc": "Add, remove, query or list data sources",
            "name": "data_source_op"
          },
          {
            "doc": "",
            "name": "update_allowed_operations"
          },
          {
            "doc": "Turning this VM into a template",
            "name": "make_into_template"
          },
          {
            "doc": "importing a VM from a network stream",
            "name": "import"
          },
          {
            "doc": "exporting a VM to a network stream",
            "name": "export"
          },
          {
            "doc": "exporting VM metadata to a network stream",
            "name": "metadata_export"
          },
          {
            "doc": "Reverting the VM to a previous snapshotted state",
            "name": "reverting"
          },
          {
            "doc": "refers to the act of uninstalling the VM",
            "name": "destroy"
          }
        ],
        "name": "vm_operations"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VM ref -> VM record) map",
          "records of all objects"
        ],
        "description": "Return a map of VM references to VM records for all VMs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VM ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VMs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "New function call",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "windows-vm",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to xenprep",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start the 'xenprep' process on the VM; the process will remove any tools and drivers for XenServer and then set auto update drivers true.",
        "name": "xenprep_start"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Import an XVA from a URI",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The URL of the XVA file",
            "name": "url",
            "type": "string"
          },
          {
            "doc": "The destination SR for the disks",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "Perform a full restore",
            "name": "full_restore",
            "type": "bool"
          },
          {
            "doc": "Force the import",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "VM ref set",
          "Imported VM reference"
        ],
        "description": "Import an XVA from a URI",
        "name": "import"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Check if PV auto update can be set on Windows vm",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "windows-vm",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vm to check if auto update drivers can be set",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "True if the Windows Update feature is enabled on the VM; false otherwise",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Check if PV auto update can be set on Windows vm",
        "name": "assert_can_set_auto_update_drivers"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Enable or disable PV auto update on Windows vm",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "windows-vm",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vm to set auto update drivers",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "True if the Windows Update feature is enabled on the VM; false otherwise",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Enable or disable PV auto update on Windows vm",
        "name": "set_auto_update_drivers"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Call a XenAPI plugin on this vm",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vm",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the plugin",
            "name": "plugin",
            "type": "string"
          },
          {
            "doc": "The name of the function within the plugin",
            "name": "fn",
            "type": "string"
          },
          {
            "doc": "Arguments for the function",
            "name": "args",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "string",
          "Result from the plugin"
        ],
        "description": "Call a XenAPI plugin on this vm",
        "name": "call_plugin"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Query the system services advertised by this VM and register them. This can only be applied to a system domain.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "map of service type to name"
        ],
        "description": "Query the system services advertised by this VM and register them. This can only be applied to a system domain.",
        "name": "query_services"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Assign this VM to an appliance.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to assign to an appliance.",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The appliance to which this VM should be assigned.",
            "name": "value",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Assign this VM to an appliance.",
        "name": "set_appliance"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Import using a conversion service.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Type of the conversion",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "Admin username on the host",
            "name": "username",
            "type": "string"
          },
          {
            "doc": "Password on the host",
            "name": "password",
            "type": "string"
          },
          {
            "doc": "The destination SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "Remote configuration options",
            "name": "remote_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Import using a conversion service.",
        "name": "import_convert"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Recover the VM",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to recover",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The session to which the VM is to be recovered.",
            "name": "session_to",
            "type": "session ref"
          },
          {
            "doc": "Whether the VM should replace newer versions of itself.",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Recover the VM",
        "name": "recover"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "List all the SR's that are required for the VM to be recovered",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM for which the SRs have to be recovered",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The session to which the SRs of the VM have to be recovered.",
            "name": "session_to",
            "type": "session ref"
          }
        ],
        "result": [
          "SR ref set",
          "refs for SRs required to recover the VM"
        ],
        "description": "List all the SR's that are required for the VM to be recovered",
        "name": "get_SRs_required_for_recovery"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Assert whether all SRs required to recover this VM are available.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "This operation is not allowed as the VM is part of an appliance.",
            "name": "VM_IS_PART_OF_AN_APPLIANCE"
          },
          {
            "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR.",
            "name": "VM_REQUIRES_SR"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to recover",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The session to which the VM is to be recovered.",
            "name": "session_to",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Assert whether all SRs required to recover this VM are available.",
        "name": "assert_can_be_recovered"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set this VM's suspend VDI, which must be indentical to its current one",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The suspend VDI uuid",
            "name": "value",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set this VM's suspend VDI, which must be indentical to its current one",
        "name": "set_suspend_VDI"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set this VM's boot order",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "This VM's boot order",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set this VM's boot order",
        "name": "set_order"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set this VM's shutdown delay in seconds",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "This VM's shutdown delay in seconds",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set this VM's shutdown delay in seconds",
        "name": "set_shutdown_delay"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set this VM's start delay in seconds",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "This VM's start delay in seconds",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set this VM's start delay in seconds",
        "name": "set_start_delay"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the protection_policy field",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The value",
            "name": "value",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the protection_policy field",
        "name": "set_protection_policy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Copy the BIOS strings from the given host to this VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to modify",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The host to copy the BIOS strings from",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Copy the BIOS strings from the given host to this VM",
        "name": "copy_bios_strings"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "(host ref -> string set) map",
          "The potential hosts and their corresponding recommendations or errors"
        ],
        "description": "Returns mapping of hosts to ratings, indicating the suitability of starting the VM at that location according to wlb. Rating is replaced with an error if the VM cannot boot there.",
        "name": "retrieve_wlb_recommendations"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host",
        "name": "assert_agile"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a named binary blob of data that is associated with this VM",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name associated with the blob",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The mime type for the data. Empty string translates to application\/octet-stream",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference of the blob, needed for populating its data"
        ],
        "description": "Create a placeholder for a named binary blob of data that is associated with this VM",
        "name": "create_new_blob"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns an error if the VM could not boot on this host for some reason",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "Not enough host memory is available to perform this operation",
            "name": "HOST_NOT_ENOUGH_FREE_MEMORY"
          },
          {
            "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR.",
            "name": "VM_REQUIRES_SR"
          },
          {
            "doc": "This VM operation cannot be performed on an older-versioned host during an upgrade.",
            "name": "VM_HOST_INCOMPATIBLE_VERSION"
          },
          {
            "doc": "You attempted to run a VM on a host that cannot provide the VM's required Virtual Hardware Platform version.",
            "name": "VM_HOST_INCOMPATIBLE_VIRTUAL_HARDWARE_PLATFORM_VERSION"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Returns an error if the VM could not boot on this host for some reason",
        "name": "assert_can_boot_here"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return the list of hosts on which this VM may run.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "host ref set",
          "The possible hosts"
        ],
        "description": "Return the list of hosts on which this VM may run.",
        "name": "get_possible_hosts"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns a list of the allowed values that a VIF device field can take",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to query",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "string set",
          "The allowed values"
        ],
        "description": "Returns a list of the allowed values that a VIF device field can take",
        "name": "get_allowed_VIF_devices"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns a list of the allowed values that a VBD device field can take",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to query",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "string set",
          "The allowed values"
        ],
        "description": "Returns a list of the allowed values that a VBD device field can take",
        "name": "get_allowed_VBD_devices"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Recomputes the list of acceptable operations",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Recomputes the list of acceptable operations",
        "name": "update_allowed_operations"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "proposed operation",
            "name": "op",
            "type": "enum vm_operations"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Check to see whether this operation is acceptable in the current state of the system, raising an error if the operation is invalid for some reason",
        "name": "assert_operation_valid"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Forget the recorded statistics related to the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The data source whose archives are to be forgotten",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Forget the recorded statistics related to the specified data source",
        "name": "forget_data_source_archives"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Query the latest value of the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The data source to query",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "float",
          "The latest value, averaged over the last 5 seconds"
        ],
        "description": "Query the latest value of the specified data source",
        "name": "query_data_source"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Start recording the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The data source to record",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start recording the specified data source",
        "name": "record_data_source"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to interrogate",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "data_source record set",
          "A set of data sources"
        ],
        "description": "",
        "name": "get_data_sources"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM whose boot-time state to return",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM record",
          "A record describing the VM"
        ],
        "description": "Returns a record describing the VM's dynamic state, initialised when the VM boots and updated to reflect runtime configuration changes e.g. CPU hotplug",
        "name": "get_boot_record"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Assert whether a VM can be migrated to the specified destination.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The result of a VM.migrate_receive call.",
            "name": "dest",
            "type": "(string -> string) map"
          },
          {
            "doc": "Live migration",
            "name": "live",
            "type": "bool"
          },
          {
            "doc": "Map of source VDI to destination SR",
            "name": "vdi_map",
            "type": "(VDI ref -> SR ref) map"
          },
          {
            "doc": "Map of source VIF to destination network",
            "name": "vif_map",
            "type": "(VIF ref -> network ref) map"
          },
          {
            "doc": "Other parameters",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Assert whether a VM can be migrated to the specified destination.",
        "name": "assert_can_migrate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Migrate the VM to another host.  This can only be called when the specified VM is in the Running state.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The result of a Host.migrate_receive call.",
            "name": "dest",
            "type": "(string -> string) map"
          },
          {
            "doc": "Live migration",
            "name": "live",
            "type": "bool"
          },
          {
            "doc": "Map of source VDI to destination SR",
            "name": "vdi_map",
            "type": "(VDI ref -> SR ref) map"
          },
          {
            "doc": "Map of source VIF to destination network",
            "name": "vif_map",
            "type": "(VIF ref -> network ref) map"
          },
          {
            "doc": "Other parameters",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM in the destination pool"
        ],
        "description": "Migrate the VM to another host.  This can only be called when the specified VM is in the Running state.",
        "name": "migrate_send"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Total amount of physical RAM to fit within",
            "name": "total",
            "type": "int"
          },
          {
            "doc": "If false the limit is calculated with the guest's current exact configuration. Otherwise a more approximate calculation is performed",
            "name": "approximate",
            "type": "bool"
          }
        ],
        "result": [
          "int",
          "The maximum possible static-max"
        ],
        "description": "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used",
        "name": "maximise_memory"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The trigger to send",
            "name": "trigger",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Send the named trigger to this VM.  This can only be called when the specified VM is in the Running state.",
        "name": "send_trigger"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The key to send",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Send the given key as a sysrq to this VM.  The key is specified as a single character (a String of length 1).  This can only be called when the specified VM is in the Running state.",
        "name": "send_sysrq"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the number of startup VCPUs for a halted VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new maximum number of VCPUs",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the number of startup VCPUs for a halted VM",
        "name": "set_VCPUs_at_startup"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the maximum number of VCPUs for a halted VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new maximum number of VCPUs",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the maximum number of VCPUs for a halted VM",
        "name": "set_VCPUs_max"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the shadow memory multiplier on a running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new shadow memory multiplier to set",
            "name": "multiplier",
            "type": "float"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the shadow memory multiplier on a running VM",
        "name": "set_shadow_multiplier_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the shadow memory multiplier on a halted VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new shadow memory multiplier to set",
            "name": "value",
            "type": "float"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the shadow memory multiplier on a halted VM",
        "name": "set_HVM_shadow_multiplier"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done",
            "release": "midnight-ride",
            "transition": "published"
          },
          {
            "description": "",
            "release": "tampa",
            "transition": "deprecated"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "true if the VM is currently 'co-operative'; false otherwise"
        ],
        "description": "Return true if the VM is currently 'co-operative' i.e. is expected to reach a balloon target and actually has done",
        "name": "get_cooperative"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Wait for a running VM to reach its current memory target",
            "release": "orlando",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Wait for a running VM to reach its current memory target",
        "name": "wait_memory_target_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the memory target for a running VM",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The target in bytes",
            "name": "target",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the memory target for a running VM",
        "name": "set_memory_target_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the memory limits of this VM.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new value of memory_static_min.",
            "name": "static_min",
            "type": "int"
          },
          {
            "doc": "The new value of memory_static_max.",
            "name": "static_max",
            "type": "int"
          },
          {
            "doc": "The new value of memory_dynamic_min.",
            "name": "dynamic_min",
            "type": "int"
          },
          {
            "doc": "The new value of memory_dynamic_max.",
            "name": "dynamic_max",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the memory limits of this VM.",
        "name": "set_memory_limits"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new minimum value",
            "name": "min",
            "type": "int"
          },
          {
            "doc": "The new maximum value",
            "name": "max",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the static (ie boot-time) range of virtual memory that the VM is allowed to use.",
        "name": "set_memory_static_range"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the memory_static_min field",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to modify",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new value of memory_static_min",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the memory_static_min field",
        "name": "set_memory_static_min"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the memory_static_max field",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "This operation cannot be performed because it would invalidate VM failover planning such that the system would be unable to guarantee to restart protected VMs after a Host failure.",
            "name": "HA_OPERATION_WOULD_BREAK_FAILOVER_PLAN"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to modify",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new value of memory_static_max",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the memory_static_max field",
        "name": "set_memory_static_max"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the minimum and maximum amounts of physical memory the VM is allowed to use.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new minimum value",
            "name": "min",
            "type": "int"
          },
          {
            "doc": "The new maximum value",
            "name": "max",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the minimum and maximum amounts of physical memory the VM is allowed to use.",
        "name": "set_memory_dynamic_range"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the memory_dynamic_min field",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to modify",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new value of memory_dynamic_min",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the memory_dynamic_min field",
        "name": "set_memory_dynamic_min"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the memory_dynamic_max field",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to modify",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The new value of memory_dynamic_max",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the memory_dynamic_max field",
        "name": "set_memory_dynamic_max"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Computes the virtualization memory overhead of a VM.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM for which to compute the memory overhead",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "the virtualization memory overhead of the VM."
        ],
        "description": "Computes the virtualization memory overhead of a VM.",
        "name": "compute_memory_overhead"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the ha_always_run",
            "release": "orlando",
            "transition": "published"
          },
          {
            "description": "",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The value",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the ha_always_run",
        "name": "set_ha_always_run"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the ha_restart_priority field",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The value",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the ha_restart_priority field",
        "name": "set_ha_restart_priority"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The key",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "The value",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to VM.VCPUs_params, and apply that value on the running VM",
        "name": "add_to_VCPUs_params_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the number of VCPUs for a running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "The number of VCPUs",
            "name": "nvcpu",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the number of VCPUs for a running VM",
        "name": "set_VCPUs_number_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Migrate a VM to another Host.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "An error occurred during the migration process.",
            "name": "VM_MIGRATE_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to migrate",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The target host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "Extra configuration operations",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Migrate a VM to another Host.",
        "name": "pool_migrate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to resume",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The Host on which to resume the VM",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "Resume VM in paused state if set to true.",
            "name": "start_paused",
            "type": "bool"
          },
          {
            "doc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Awaken the specified VM and resume it on a particular Host.  This can only be called when the specified VM is in the Suspended state.",
        "name": "resume_on"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to resume",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "Resume VM in paused state if set to true.",
            "name": "start_paused",
            "type": "bool"
          },
          {
            "doc": "Attempt to force the VM to resume. If this flag is false then the VM may fail pre-resume safety checks (e.g. if the CPU the VM was running on looks substantially different to the current one)",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Awaken the specified VM and resume it.  This can only be called when the specified VM is in the Suspended state.",
        "name": "resume"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to suspend",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Suspend the specified VM to disk.  This can only be called when the specified VM is in the Running state.",
        "name": "suspend"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to reboot",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Stop executing the specified VM without attempting a clean shutdown and immediately restart the VM.",
        "name": "hard_reboot"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to reset",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reset the power-state of the VM to halted in the database only. (Used to recover from slave failures in pooling scenarios by resetting the power-states of VMs running on dead slaves to halted.) This is a potentially dangerous operation; use with care.",
        "name": "power_state_reset"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Stop executing the specified VM without attempting a clean shutdown.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to destroy",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Stop executing the specified VM without attempting a clean shutdown.",
        "name": "hard_shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to shutdown",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempt to cleanly shutdown the specified VM (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
        "name": "clean_reboot"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it.",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to shutdown",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempts to first clean shutdown a VM and if it should fail then perform a hard shutdown on it.",
        "name": "shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to shutdown",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempt to cleanly shutdown the specified VM. (Note: this may not be supported---e.g. if a guest agent is not installed). This can only be called when the specified VM is in the Running state.",
        "name": "clean_shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Resume the specified VM. This can only be called when the specified VM is in the Paused state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to unpause",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Resume the specified VM. This can only be called when the specified VM is in the Paused state.",
        "name": "unpause"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Pause the specified VM. This can only be called when the specified VM is in the Running state.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to pause",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Pause the specified VM. This can only be called when the specified VM is in the Running state.",
        "name": "pause"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The bootloader returned an error",
            "name": "BOOTLOADER_FAILED"
          },
          {
            "doc": "The requested bootloader is unknown",
            "name": "UNKNOWN_BOOTLOADER"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to start",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The Host on which to start the VM",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "Instantiate VM in paused state if set to true.",
            "name": "start_paused",
            "type": "bool"
          },
          {
            "doc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start the specified VM on a particular host.  This function can only be called with the VM is in the Halted State.",
        "name": "start_on"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Start the specified VM.  This function can only be called with the VM is in the Halted State.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "HVM is required for this operation",
            "name": "VM_HVM_REQUIRED"
          },
          {
            "doc": "The operation attempted is not valid for a template VM",
            "name": "VM_IS_TEMPLATE"
          },
          {
            "doc": "Another operation involving the object is currently in progress",
            "name": "OTHER_OPERATION_IN_PROGRESS"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The bootloader returned an error",
            "name": "BOOTLOADER_FAILED"
          },
          {
            "doc": "The requested bootloader is unknown",
            "name": "UNKNOWN_BOOTLOADER"
          },
          {
            "doc": "There were no hosts available to complete the specified operation.",
            "name": "NO_HOSTS_AVAILABLE"
          },
          {
            "doc": "This operation is not allowed under your license.  Please contact your support representative.",
            "name": "LICENCE_RESTRICTION"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to start",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "Instantiate VM in paused state if set to true.",
            "name": "start_paused",
            "type": "bool"
          },
          {
            "doc": "Attempt to force the VM to start. If this flag is false then the VM may fail pre-boot safety checks (e.g. if the CPU the VM last booted on looks substantially different to the current one)",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start the specified VM.  This function can only be called with the VM is in the Halted State.",
        "name": "start"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be provisioned",
            "name": "vm",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Inspects the disk configuration contained within the VM's other_config, creates VDIs and VBDs and then executes any applicable post-install script.",
        "name": "provision"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "An error occured while saving the memory image of the specified virtual machine",
            "name": "VM_CHECKPOINT_SUSPEND_FAILED"
          },
          {
            "doc": "An error occured while restoring the memory image of the specified virtual machine",
            "name": "VM_CHECKPOINT_RESUME_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be checkpointed",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the checkpointed VM",
            "name": "new_name",
            "type": "string"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM."
        ],
        "description": "Checkpoints the specified VM, making a new VM. Checkpoint automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write) and saves the memory image as well.",
        "name": "checkpoint"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reverts the specified VM to a previous state.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "An error occured while reverting the specified virtual machine to the specified snapshot",
            "name": "VM_REVERT_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The snapshotted state that we revert to",
            "name": "snapshot",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reverts the specified VM to a previous state.",
        "name": "revert"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Copies a VM to an SR. There must be a host that can see both the source and destination SRs simultaneously",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "The copy can now be performed between any two SRs.",
            "release": "cowley",
            "transition": "extended"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be copied",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the copied VM",
            "name": "new_name",
            "type": "string"
          },
          {
            "doc": "An SR to copy all the VM's disks into (if an invalid reference then it uses the existing SRs)",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM."
        ],
        "description": "Copied the specified VM, making a new VM. Unlike clone, copy does not exploits the capabilities of the underlying storage repository in which the VM's disk images are stored. Instead, copy guarantees that the disk images of the newly created VM will be 'full disks' - i.e. not part of a CoW chain.  This function can only be called when the VM is in the Halted State.",
        "name": "copy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be cloned",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the cloned VM",
            "name": "new_name",
            "type": "string"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM."
        ],
        "description": "Clones the specified VM, making a new VM. Clone automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).   This function can only be called when the VM is in the Halted State.",
        "name": "clone"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          },
          {
            "doc": "The quiesced-snapshot operation failed for an unexpected reason",
            "name": "VM_SNAPSHOT_WITH_QUIESCE_FAILED"
          },
          {
            "doc": "The VSS plug-in has timed out",
            "name": "VM_SNAPSHOT_WITH_QUIESCE_TIMEOUT"
          },
          {
            "doc": "The VSS plug-in cannot be contacted",
            "name": "VM_SNAPSHOT_WITH_QUIESCE_PLUGIN_DEOS_NOT_RESPOND"
          },
          {
            "doc": "The VSS plug-in is not installed on this virtual machine",
            "name": "VM_SNAPSHOT_WITH_QUIESCE_NOT_SUPPORTED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be snapshotted",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the snapshotted VM",
            "name": "new_name",
            "type": "string"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM."
        ],
        "description": "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
        "name": "snapshot_with_quiesce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [
          {
            "doc": "You attempted an operation on a VM that was not in an appropriate power state at the time; for example, you attempted to start a VM that was already running.  The parameters returned are the VM's handle, and the expected and actual VM state at the time of the call.",
            "name": "VM_BAD_POWER_STATE"
          },
          {
            "doc": "The SR is full. Requested new size exceeds the maximum size",
            "name": "SR_FULL"
          },
          {
            "doc": "You attempted an operation that was not allowed.",
            "name": "OPERATION_NOT_ALLOWED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM to be snapshotted",
            "name": "vm",
            "type": "VM ref"
          },
          {
            "doc": "The name of the snapshotted VM",
            "name": "new_name",
            "type": "string"
          }
        ],
        "result": [
          "VM ref",
          "The reference of the newly created VM."
        ],
        "description": "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write).",
        "name": "snapshot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The host virtual hardware platform version the VM can run on",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the hardware_platform_version field of the given VM.",
        "name": "set_hardware_platform_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR on which a suspend image is stored",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the suspend_SR field of the given VM.",
        "name": "set_suspend_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List of operations which have been explicitly blocked and an error code",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "enum vm_operations"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the blocked_operations field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_blocked_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List of operations which have been explicitly blocked and an error code",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "enum vm_operations"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the blocked_operations field of the given VM.",
        "name": "add_to_blocked_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List of operations which have been explicitly blocked and an error code",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(enum vm_operations -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the blocked_operations field of the given VM.",
        "name": "set_blocked_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given VM.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given VM.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given VM.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the xenstore_data field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the xenstore_data field of the given VM.",
        "name": "add_to_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the xenstore_data field of the given VM.",
        "name": "set_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "An XML specification of recommended values and ranges for properties of this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the recommendations field of the given VM.",
        "name": "set_recommendations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VM.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VM.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "PCI bus path for pass-through devices",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Field was never used",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PCI_bus field of the given VM.",
        "name": "set_PCI_bus"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "platform-specific configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the platform field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_platform"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "platform-specific configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the platform field of the given VM.",
        "name": "add_to_platform"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "platform-specific configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the platform field of the given VM.",
        "name": "set_platform"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the HVM\/boot_params field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_HVM_boot_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the HVM\/boot_params field of the given VM.",
        "name": "add_to_HVM_boot_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the HVM\/boot_params field of the given VM.",
        "name": "set_HVM_boot_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the HVM\/boot_policy field of the given VM.",
        "name": "set_HVM_boot_policy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "to make Zurich guests boot",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/legacy_args field of the given VM.",
        "name": "set_PV_legacy_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "miscellaneous arguments for the bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/bootloader_args field of the given VM.",
        "name": "set_PV_bootloader_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "kernel command-line arguments",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/args field of the given VM.",
        "name": "set_PV_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "path to the initrd",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/ramdisk field of the given VM.",
        "name": "set_PV_ramdisk"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "path to the kernel",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/kernel field of the given VM.",
        "name": "set_PV_kernel"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "name of or path to bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the PV\/bootloader field of the given VM.",
        "name": "set_PV_bootloader"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take if the guest crashes",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum on_crash_behaviour"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the actions\/after_crash field of the given VM.",
        "name": "set_actions_after_crash"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take after the guest has rebooted itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum on_normal_exit"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the actions\/after_reboot field of the given VM.",
        "name": "set_actions_after_reboot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take after the guest has shutdown itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum on_normal_exit"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the actions\/after_shutdown field of the given VM.",
        "name": "set_actions_after_shutdown"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "configuration parameters for the selected VCPU policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the VCPUs\/params field of the given VM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "configuration parameters for the selected VCPU policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the VCPUs\/params field of the given VM.",
        "name": "add_to_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "configuration parameters for the selected VCPU policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the VCPUs\/params field of the given VM.",
        "name": "set_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the affinity field of the given VM.",
        "name": "set_affinity"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the is_a_template field of the given VM.",
        "name": "set_is_a_template"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a user version number for this machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the user_version field of the given VM.",
        "name": "set_user_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given VM.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given VM.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the Windows Update feature is enabled on the VM; false otherwise",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the auto_update_drivers field of the given VM.",
        "name": "get_auto_update_drivers"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The host virtual hardware platform version the VM can run on",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the hardware_platform_version field of the given VM.",
        "name": "get_hardware_platform_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Generation ID of the VM",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the generation_id field of the given VM.",
        "name": "get_generation_id"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The number of times this VM has been recovered",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the version field of the given VM.",
        "name": "get_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR on which a suspend image is stored",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the suspend_SR field of the given VM.",
        "name": "get_suspend_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "PCI ref set",
          "value of the field"
        ],
        "description": "Get the attached_PCIs field of the given VM.",
        "name": "get_attached_PCIs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VGPU ref set",
          "value of the field"
        ],
        "description": "Get the VGPUs field of the given VM.",
        "name": "get_VGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The point in the startup or shutdown sequence at which this VM will be started",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the order field of the given VM.",
        "name": "get_order"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the shutdown_delay field of the given VM.",
        "name": "get_shutdown_delay"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the start_delay field of the given VM.",
        "name": "get_start_delay"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the appliance to which this VM belongs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM_appliance ref",
          "value of the field"
        ],
        "description": "Get the appliance field of the given VM.",
        "name": "get_appliance"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_snapshot_from_vmpp field of the given VM.",
        "name": "get_is_snapshot_from_vmpp"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VMPP ref",
          "value of the field"
        ],
        "description": "Get the protection_policy field of the given VM.",
        "name": "get_protection_policy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "BIOS strings",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the bios_strings field of the given VM.",
        "name": "get_bios_strings"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List pointing to all the children of this VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM ref set",
          "value of the field"
        ],
        "description": "Get the children field of the given VM.",
        "name": "get_children"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Ref pointing to the parent of this VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the parent field of the given VM.",
        "name": "get_parent"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Encoded information about the VM's metadata this is a snapshot of",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the snapshot_metadata field of the given VM.",
        "name": "get_snapshot_metadata"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Human-readable information concerning this snapshot",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the snapshot_info field of the given VM.",
        "name": "get_snapshot_info"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List of operations which have been explicitly blocked and an error code",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(enum vm_operations -> string) map",
          "value of the field"
        ],
        "description": "Get the blocked_operations field of the given VM.",
        "name": "get_blocked_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given VM.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Binary blobs associated with this VM",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> blob ref) map",
          "value of the field"
        ],
        "description": "Get the blobs field of the given VM.",
        "name": "get_blobs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Transportable ID of the snapshot VM",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the transportable_snapshot_id field of the given VM.",
        "name": "get_transportable_snapshot_id"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Date\/time when this snapshot was created.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the snapshot_time field of the given VM.",
        "name": "get_snapshot_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List pointing to all the VM snapshots.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM ref set",
          "value of the field"
        ],
        "description": "Get the snapshots field of the given VM.",
        "name": "get_snapshots"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Ref pointing to the VM this snapshot is of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the snapshot_of field of the given VM.",
        "name": "get_snapshot_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_a_snapshot field of the given VM.",
        "name": "get_is_a_snapshot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the ha_restart_priority field of the given VM.",
        "name": "get_ha_restart_priority"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "if true then the system will attempt to keep the VM running as much as possible.",
            "release": "orlando",
            "transition": "published"
          },
          {
            "description": "",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the ha_always_run field of the given VM.",
        "name": "get_ha_always_run"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the xenstore_data field of the given VM.",
        "name": "get_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "An XML specification of recommended values and ranges for properties of this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the recommendations field of the given VM.",
        "name": "get_recommendations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the last_booted_record field of the given VM.",
        "name": "get_last_booted_record"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with the running guest",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM_guest_metrics ref",
          "value of the field"
        ],
        "description": "Get the guest_metrics field of the given VM.",
        "name": "get_guest_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM_metrics ref",
          "value of the field"
        ],
        "description": "Get the metrics field of the given VM.",
        "name": "get_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this is a control domain (domain 0 or a driver domain)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_control_domain field of the given VM.",
        "name": "get_is_control_domain"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "describes the CPU flags on which the VM was last booted",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the last_boot_CPU_flags field of the given VM.",
        "name": "get_last_boot_CPU_flags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Domain architecture (if available, null string otherwise)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the domarch field of the given VM.",
        "name": "get_domarch"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "domain ID (if available, -1 otherwise)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the domid field of the given VM.",
        "name": "get_domid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VM.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "PCI bus path for pass-through devices",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Field was never used",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PCI_bus field of the given VM.",
        "name": "get_PCI_bus"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "platform-specific configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the platform field of the given VM.",
        "name": "get_platform"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "multiplier applied to the amount of shadow that will be made available to the guest",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the HVM\/shadow_multiplier field of the given VM.",
        "name": "get_HVM_shadow_multiplier"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the HVM\/boot_params field of the given VM.",
        "name": "get_HVM_boot_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "HVM boot policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the HVM\/boot_policy field of the given VM.",
        "name": "get_HVM_boot_policy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "to make Zurich guests boot",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/legacy_args field of the given VM.",
        "name": "get_PV_legacy_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "miscellaneous arguments for the bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/bootloader_args field of the given VM.",
        "name": "get_PV_bootloader_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "kernel command-line arguments",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/args field of the given VM.",
        "name": "get_PV_args"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "path to the initrd",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/ramdisk field of the given VM.",
        "name": "get_PV_ramdisk"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "path to the kernel",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/kernel field of the given VM.",
        "name": "get_PV_kernel"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "name of or path to bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the PV\/bootloader field of the given VM.",
        "name": "get_PV_bootloader"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual TPMs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VTPM ref set",
          "value of the field"
        ],
        "description": "Get the VTPMs field of the given VM.",
        "name": "get_VTPMs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "crash dumps associated with this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "crashdump ref set",
          "value of the field"
        ],
        "description": "Get the crash_dumps field of the given VM.",
        "name": "get_crash_dumps"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual block devices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VBD ref set",
          "value of the field"
        ],
        "description": "Get the VBDs field of the given VM.",
        "name": "get_VBDs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual network interfaces",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VIF ref set",
          "value of the field"
        ],
        "description": "Get the VIFs field of the given VM.",
        "name": "get_VIFs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual console devices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "console ref set",
          "value of the field"
        ],
        "description": "Get the consoles field of the given VM.",
        "name": "get_consoles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take if the guest crashes",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "enum on_crash_behaviour",
          "value of the field"
        ],
        "description": "Get the actions\/after_crash field of the given VM.",
        "name": "get_actions_after_crash"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take after the guest has rebooted itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "enum on_normal_exit",
          "value of the field"
        ],
        "description": "Get the actions\/after_reboot field of the given VM.",
        "name": "get_actions_after_reboot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "action to take after the guest has shutdown itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "enum on_normal_exit",
          "value of the field"
        ],
        "description": "Get the actions\/after_shutdown field of the given VM.",
        "name": "get_actions_after_shutdown"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Boot number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the VCPUs\/at_startup field of the given VM.",
        "name": "get_VCPUs_at_startup"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Max number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the VCPUs\/max field of the given VM.",
        "name": "get_VCPUs_max"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "configuration parameters for the selected VCPU policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the VCPUs\/params field of the given VM.",
        "name": "get_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/static_min field of the given VM.",
        "name": "get_memory_static_min"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Dynamic minimum (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/dynamic_min field of the given VM.",
        "name": "get_memory_dynamic_min"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Dynamic maximum (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/dynamic_max field of the given VM.",
        "name": "get_memory_dynamic_max"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/static_max field of the given VM.",
        "name": "get_memory_static_max"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM.",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/target field of the given VM.",
        "name": "get_memory_target"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Virtualization memory overhead (bytes).",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/overhead field of the given VM.",
        "name": "get_memory_overhead"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the affinity field of the given VM.",
        "name": "get_affinity"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the host the VM is currently resident on",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the resident_on field of the given VM.",
        "name": "get_resident_on"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the suspend_VDI field of the given VM.",
        "name": "get_suspend_VDI"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_a_template field of the given VM.",
        "name": "get_is_a_template"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a user version number for this machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the user_version field of the given VM.",
        "name": "get_user_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given VM.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given VM.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Current power state of the machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "enum vm_power_state",
          "value of the field"
        ],
        "description": "Get the power_state field of the given VM.",
        "name": "get_power_state"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "(string -> enum vm_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given VM.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "enum vm_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given VM.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VM.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "VM ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the VM instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VM.  The VM is completely removed from the system.  This function can only be called when the VM is in the Halted State.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VM record"
          }
        ],
        "result": [
          "VM ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VM instance, and return its handle.\nThe constructor args are: name_label, name_description, user_version*, is_a_template*, affinity*, memory_target, memory_static_max*, memory_dynamic_max*, memory_dynamic_min*, memory_static_min*, VCPUs_params*, VCPUs_max*, VCPUs_at_startup*, actions_after_shutdown*, actions_after_reboot*, actions_after_crash*, PV_bootloader*, PV_kernel*, PV_ramdisk*, PV_args*, PV_bootloader_args*, PV_legacy_args*, HVM_boot_policy*, HVM_boot_params*, HVM_shadow_multiplier, platform*, PCI_bus*, other_config*, recommendations*, xenstore_data, ha_always_run, ha_restart_priority, tags, blocked_operations, protection_policy, is_snapshot_from_vmpp, appliance, start_delay, shutdown_delay, order, suspend_SR, version, generation_id, hardware_platform_version (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VM ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VM instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual machine (or 'guest').",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM ref"
          }
        ],
        "result": [
          "VM record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VM.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vm_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum vm_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "Current power state of the machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vm_power_state",
        "description": "Current power state of the machine",
        "name": "power_state"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "a user version number for this machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "int",
        "description": "a user version number for this machine",
        "name": "user_version"
      },
      {
        "lifecycle": [
          {
            "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "true if this is a template. Template VMs can never be started, they are used only for cloning other VMs",
        "name": "is_a_template"
      },
      {
        "lifecycle": [
          {
            "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "The VDI that a suspend image is stored on. (Only has meaning if VM is currently suspended)",
        "name": "suspend_VDI"
      },
      {
        "lifecycle": [
          {
            "description": "the host the VM is currently resident on",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "the host the VM is currently resident on",
        "name": "resident_on"
      },
      {
        "lifecycle": [
          {
            "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "host ref",
        "description": "a host which the VM has some affinity for (or NULL). This is used as a hint to the start call when it decides where to run the VM. Implementations are free to ignore this field.",
        "name": "affinity"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Virtualization memory overhead (bytes).",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Virtualization memory overhead (bytes).",
        "name": "memory_overhead"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM.",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Dynamically-set memory target (bytes). The value of this field indicates the current target for memory available to this VM.",
        "name": "memory_target"
      },
      {
        "lifecycle": [
          {
            "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Statically-set (i.e. absolute) maximum (bytes). The value of this field at VM start time acts as a hard limit of the amount of memory a guest can use. New values only take effect on reboot.",
        "name": "memory_static_max"
      },
      {
        "lifecycle": [
          {
            "description": "Dynamic maximum (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Dynamic maximum (bytes)",
        "name": "memory_dynamic_max"
      },
      {
        "lifecycle": [
          {
            "description": "Dynamic minimum (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Dynamic minimum (bytes)",
        "name": "memory_dynamic_min"
      },
      {
        "lifecycle": [
          {
            "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Statically-set (i.e. absolute) mininum (bytes). The value of this field indicates the least amount of memory this VM can boot with without crashing.",
        "name": "memory_static_min"
      },
      {
        "lifecycle": [
          {
            "description": "configuration parameters for the selected VCPU policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "configuration parameters for the selected VCPU policy",
        "name": "VCPUs_params"
      },
      {
        "lifecycle": [
          {
            "description": "Max number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Max number of VCPUs",
        "name": "VCPUs_max"
      },
      {
        "lifecycle": [
          {
            "description": "Boot number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Boot number of VCPUs",
        "name": "VCPUs_at_startup"
      },
      {
        "lifecycle": [
          {
            "description": "action to take after the guest has shutdown itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum on_normal_exit",
        "description": "action to take after the guest has shutdown itself",
        "name": "actions_after_shutdown"
      },
      {
        "lifecycle": [
          {
            "description": "action to take after the guest has rebooted itself",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum on_normal_exit",
        "description": "action to take after the guest has rebooted itself",
        "name": "actions_after_reboot"
      },
      {
        "lifecycle": [
          {
            "description": "action to take if the guest crashes",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum on_crash_behaviour",
        "description": "action to take if the guest crashes",
        "name": "actions_after_crash"
      },
      {
        "lifecycle": [
          {
            "description": "virtual console devices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "console ref set",
        "description": "virtual console devices",
        "name": "consoles"
      },
      {
        "lifecycle": [
          {
            "description": "virtual network interfaces",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "qualifier": "read only",
        "type": "VIF ref set",
        "description": "virtual network interfaces",
        "name": "VIFs"
      },
      {
        "lifecycle": [
          {
            "description": "virtual block devices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VBD ref set",
        "description": "virtual block devices",
        "name": "VBDs"
      },
      {
        "lifecycle": [
          {
            "description": "crash dumps associated with this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "crashdump ref set",
        "description": "crash dumps associated with this VM",
        "name": "crash_dumps"
      },
      {
        "lifecycle": [
          {
            "description": "virtual TPMs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VTPM ref set",
        "description": "virtual TPMs",
        "name": "VTPMs"
      },
      {
        "lifecycle": [
          {
            "description": "name of or path to bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "name of or path to bootloader",
        "name": "PV_bootloader"
      },
      {
        "lifecycle": [
          {
            "description": "path to the kernel",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "path to the kernel",
        "name": "PV_kernel"
      },
      {
        "lifecycle": [
          {
            "description": "path to the initrd",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "path to the initrd",
        "name": "PV_ramdisk"
      },
      {
        "lifecycle": [
          {
            "description": "kernel command-line arguments",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "kernel command-line arguments",
        "name": "PV_args"
      },
      {
        "lifecycle": [
          {
            "description": "miscellaneous arguments for the bootloader",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "miscellaneous arguments for the bootloader",
        "name": "PV_bootloader_args"
      },
      {
        "lifecycle": [
          {
            "description": "to make Zurich guests boot",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "to make Zurich guests boot",
        "name": "PV_legacy_args"
      },
      {
        "lifecycle": [
          {
            "description": "HVM boot policy",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "HVM boot policy",
        "name": "HVM_boot_policy"
      },
      {
        "lifecycle": [
          {
            "description": "HVM boot params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "HVM boot params",
        "name": "HVM_boot_params"
      },
      {
        "default": "1.",
        "lifecycle": [
          {
            "description": "multiplier applied to the amount of shadow that will be made available to the guest",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "multiplier applied to the amount of shadow that will be made available to the guest",
        "name": "HVM_shadow_multiplier"
      },
      {
        "lifecycle": [
          {
            "description": "platform-specific configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "platform-specific configuration",
        "name": "platform"
      },
      {
        "lifecycle": [
          {
            "description": "PCI bus path for pass-through devices",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Field was never used",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "PCI bus path for pass-through devices",
        "name": "PCI_bus"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "domain ID (if available, -1 otherwise)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "domain ID (if available, -1 otherwise)",
        "name": "domid"
      },
      {
        "lifecycle": [
          {
            "description": "Domain architecture (if available, null string otherwise)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Domain architecture (if available, null string otherwise)",
        "name": "domarch"
      },
      {
        "lifecycle": [
          {
            "description": "describes the CPU flags on which the VM was last booted",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "describes the CPU flags on which the VM was last booted",
        "name": "last_boot_CPU_flags"
      },
      {
        "lifecycle": [
          {
            "description": "true if this is a control domain (domain 0 or a driver domain)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this is a control domain (domain 0 or a driver domain)",
        "name": "is_control_domain"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM_metrics ref",
        "description": "metrics associated with this VM",
        "name": "metrics"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with the running guest",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM_guest_metrics ref",
        "description": "metrics associated with the running guest",
        "name": "guest_metrics"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain",
        "name": "last_booted_record"
      },
      {
        "lifecycle": [
          {
            "description": "An XML specification of recommended values and ranges for properties of this VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "An XML specification of recommended values and ranges for properties of this VM",
        "name": "recommendations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created.",
        "name": "xenstore_data"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "if true then the system will attempt to keep the VM running as much as possible.",
            "release": "orlando",
            "transition": "published"
          },
          {
            "description": "",
            "release": "boston",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "if true then the system will attempt to keep the VM running as much as possible.",
        "name": "ha_always_run"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\"",
        "name": "ha_restart_priority"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs",
        "name": "is_a_snapshot"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Ref pointing to the VM this snapshot is of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "Ref pointing to the VM this snapshot is of.",
        "name": "snapshot_of"
      },
      {
        "lifecycle": [
          {
            "description": "List pointing to all the VM snapshots.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref set",
        "description": "List pointing to all the VM snapshots.",
        "name": "snapshots"
      },
      {
        "default": "19700101T00:00:00Z",
        "lifecycle": [
          {
            "description": "Date\/time when this snapshot was created.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Date\/time when this snapshot was created.",
        "name": "snapshot_time"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "Transportable ID of the snapshot VM",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Transportable ID of the snapshot VM",
        "name": "transportable_snapshot_id"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Binary blobs associated with this VM",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> blob ref) map",
        "description": "Binary blobs associated with this VM",
        "name": "blobs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "List of operations which have been explicitly blocked and an error code",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(enum vm_operations -> string) map",
        "description": "List of operations which have been explicitly blocked and an error code",
        "name": "blocked_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Human-readable information concerning this snapshot",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Human-readable information concerning this snapshot",
        "name": "snapshot_info"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "Encoded information about the VM's metadata this is a snapshot of",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Encoded information about the VM's metadata this is a snapshot of",
        "name": "snapshot_metadata"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Ref pointing to the parent of this VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "Ref pointing to the parent of this VM",
        "name": "parent"
      },
      {
        "lifecycle": [
          {
            "description": "List pointing to all the children of this VM",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref set",
        "description": "List pointing to all the children of this VM",
        "name": "children"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "BIOS strings",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "BIOS strings",
        "name": "bios_strings"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VMPP ref",
        "description": "Ref pointing to a protection policy for this VM",
        "name": "protection_policy"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this snapshot was created by the protection policy",
        "name": "is_snapshot_from_vmpp"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "the appliance to which this VM belongs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM_appliance ref",
        "description": "the appliance to which this VM belongs",
        "name": "appliance"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "The delay to wait before proceeding to the next order in the startup sequence (seconds)",
        "name": "start_delay"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "The delay to wait before proceeding to the next order in the shutdown sequence (seconds)",
        "name": "shutdown_delay"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "The point in the startup or shutdown sequence at which this VM will be started",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "The point in the startup or shutdown sequence at which this VM will be started",
        "name": "order"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU ref set",
        "description": "Virtual GPUs",
        "name": "VGPUs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PCI ref set",
        "description": "Currently passed-through PCI devices",
        "name": "attached_PCIs"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "The SR on which a suspend image is stored",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "The SR on which a suspend image is stored",
        "name": "suspend_SR"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "The number of times this VM has been recovered",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "The number of times this VM has been recovered",
        "name": "version"
      },
      {
        "default": "\"0:0\"",
        "lifecycle": [
          {
            "description": "Generation ID of the VM",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Generation ID of the VM",
        "name": "generation_id"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "The host virtual hardware platform version the VM can run on",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "int",
        "description": "The host virtual hardware platform version the VM can run on",
        "name": "hardware_platform_version"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "True if the Windows Update feature is enabled on the VM; false otherwise",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "windows-vm",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the Windows Update feature is enabled on the VM; false otherwise",
        "name": "auto_update_drivers"
      }
    ],
    "description": "A virtual machine (or 'guest').",
    "name": "VM"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "The metrics associated with a VM",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VM_metrics ref -> VM_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of VM_metrics references to VM_metrics records for all VM_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VM_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VM_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VM_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VM_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VM_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VM_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given VM_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which the VM was installed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the install_time field of the given VM_metrics.",
        "name": "get_install_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this VM was last booted",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the start_time field of the given VM_metrics.",
        "name": "get_start_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The state of the guest, eg blocked, dying etc",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the state field of the given VM_metrics.",
        "name": "get_state"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "CPU flags (blocked,online,running)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "(int -> string set) map",
          "value of the field"
        ],
        "description": "Get the VCPUs\/flags field of the given VM_metrics.",
        "name": "get_VCPUs_flags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The live equivalent to VM.VCPUs_params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the VCPUs\/params field of the given VM_metrics.",
        "name": "get_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VCPU to PCPU map",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "(int -> int) map",
          "value of the field"
        ],
        "description": "Get the VCPUs\/CPU field of the given VM_metrics.",
        "name": "get_VCPUs_CPU"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Utilisation for all of guest's current VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "(int -> float) map",
          "value of the field"
        ],
        "description": "Get the VCPUs\/utilisation field of the given VM_metrics.",
        "name": "get_VCPUs_utilisation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Current number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the VCPUs\/number field of the given VM_metrics.",
        "name": "get_VCPUs_number"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Guest's actual memory (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/actual field of the given VM_metrics.",
        "name": "get_memory_actual"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VM_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VM_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VM_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_metrics ref"
          }
        ],
        "result": [
          "VM_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VM_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Guest's actual memory (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Guest's actual memory (bytes)",
        "name": "memory_actual"
      },
      {
        "lifecycle": [
          {
            "description": "Current number of VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Current number of VCPUs",
        "name": "VCPUs_number"
      },
      {
        "lifecycle": [
          {
            "description": "Utilisation for all of guest's current VCPUs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(int -> float) map",
        "description": "Utilisation for all of guest's current VCPUs",
        "name": "VCPUs_utilisation"
      },
      {
        "lifecycle": [
          {
            "description": "VCPU to PCPU map",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(int -> int) map",
        "description": "VCPU to PCPU map",
        "name": "VCPUs_CPU"
      },
      {
        "lifecycle": [
          {
            "description": "The live equivalent to VM.VCPUs_params",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "The live equivalent to VM.VCPUs_params",
        "name": "VCPUs_params"
      },
      {
        "lifecycle": [
          {
            "description": "CPU flags (blocked,online,running)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(int -> string set) map",
        "description": "CPU flags (blocked,online,running)",
        "name": "VCPUs_flags"
      },
      {
        "lifecycle": [
          {
            "description": "The state of the guest, eg blocked, dying etc",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "The state of the guest, eg blocked, dying etc",
        "name": "state"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this VM was last booted",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this VM was last booted",
        "name": "start_time"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which the VM was installed",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which the VM was installed",
        "name": "install_time"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The metrics associated with a VM",
    "name": "VM_metrics"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "The metrics reported by the guest (as opposed to inferred from outside)",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics reported by the guest (as opposed to inferred from outside)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VM_guest_metrics ref -> VM_guest_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of VM_guest_metrics references to VM_guest_metrics records for all VM_guest_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics reported by the guest (as opposed to inferred from outside)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VM_guest_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VM_guest_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VM_guest_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VM_guest_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VM_guest_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the guest is sending heartbeat messages via the guest agent",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the live field of the given VM_guest_metrics.",
        "name": "get_live"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VM_guest_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given VM_guest_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "anything else",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other field of the given VM_guest_metrics.",
        "name": "get_other"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "network configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the networks field of the given VM_guest_metrics.",
        "name": "get_networks"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Disk configuration\/free space",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "No data",
            "release": "orlando",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the disks field of the given VM_guest_metrics.",
        "name": "get_disks"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "free\/used\/total",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Disabled in favour of the RRDs, to improve scalability",
            "release": "george",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the memory field of the given VM_guest_metrics.",
        "name": "get_memory"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Storage paths are optimized with backend",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the storage_paths_optimized field of the given VM_guest_metrics.",
        "name": "get_storage_paths_optimized"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Network paths are optimized with backend",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the network_paths_optimized field of the given VM_guest_metrics.",
        "name": "get_network_paths_optimized"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if the PV drivers appear to be up to date",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of network_paths_optimized and storage_paths_optimized, and redefined in terms of them",
            "release": "dundee",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the PV_drivers_up_to_date field of the given VM_guest_metrics.",
        "name": "get_PV_drivers_up_to_date"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "version of the PV drivers",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the PV_drivers_version field of the given VM_guest_metrics.",
        "name": "get_PV_drivers_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "version of the OS",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the os_version field of the given VM_guest_metrics.",
        "name": "get_os_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VM_guest_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics reported by the guest (as opposed to inferred from outside)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VM_guest_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VM_guest_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics reported by the guest (as opposed to inferred from outside)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_guest_metrics ref"
          }
        ],
        "result": [
          "VM_guest_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VM_guest_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "version of the OS",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "version of the OS",
        "name": "os_version"
      },
      {
        "lifecycle": [
          {
            "description": "version of the PV drivers",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "version of the PV drivers",
        "name": "PV_drivers_version"
      },
      {
        "lifecycle": [
          {
            "description": "true if the PV drivers appear to be up to date",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of network_paths_optimized and storage_paths_optimized, and redefined in terms of them",
            "release": "dundee",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Logical AND of network_paths_optimized and storage_paths_optimized",
        "name": "PV_drivers_up_to_date"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "Network paths are optimized with backend",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the network paths are optimized with PV driver",
        "name": "network_paths_optimized"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "Storage paths are optimized with backend",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the storage paths are optimized with PV driver",
        "name": "storage_paths_optimized"
      },
      {
        "lifecycle": [
          {
            "description": "free\/used\/total",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Disabled in favour of the RRDs, to improve scalability",
            "release": "george",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "This field exists but has no data. Use the memory and memory_internal_free RRD data-sources instead.",
        "name": "memory"
      },
      {
        "lifecycle": [
          {
            "description": "Disk configuration\/free space",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "No data",
            "release": "orlando",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "This field exists but has no data.",
        "name": "disks"
      },
      {
        "lifecycle": [
          {
            "description": "network configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "network configuration",
        "name": "networks"
      },
      {
        "lifecycle": [
          {
            "description": "anything else",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "anything else",
        "name": "other"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "True if the guest is sending heartbeat messages via the guest agent",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the guest is sending heartbeat messages via the guest agent",
        "name": "live"
      }
    ],
    "description": "The metrics reported by the guest (as opposed to inferred from outside)",
    "name": "VM_guest_metrics"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "cowley",
        "transition": "published"
      },
      {
        "description": "The VMPR feature was removed",
        "release": "clearwater",
        "transition": "removed"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "The backup is a snapshot",
            "name": "snapshot"
          },
          {
            "doc": "The backup is a checkpoint",
            "name": "checkpoint"
          }
        ],
        "name": "vmpp_backup_type"
      },
      {
        "values": [
          {
            "doc": "Hourly backups",
            "name": "hourly"
          },
          {
            "doc": "Daily backups",
            "name": "daily"
          },
          {
            "doc": "Weekly backups",
            "name": "weekly"
          }
        ],
        "name": "vmpp_backup_frequency"
      },
      {
        "values": [
          {
            "doc": "Never archive",
            "name": "never"
          },
          {
            "doc": "Archive after backup",
            "name": "always_after_backup"
          },
          {
            "doc": "Daily archives",
            "name": "daily"
          },
          {
            "doc": "Weekly backups",
            "name": "weekly"
          }
        ],
        "name": "vmpp_archive_frequency"
      },
      {
        "values": [
          {
            "doc": "No target config",
            "name": "none"
          },
          {
            "doc": "CIFS target config",
            "name": "cifs"
          },
          {
            "doc": "NFS target config",
            "name": "nfs"
          }
        ],
        "name": "vmpp_archive_target_type"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VMPP ref -> VMPP record) map",
          "records of all objects"
        ],
        "description": "Return a map of VMPP references to VMPP records for all VMPPs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VMPP ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VMPPs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "datetime"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_archive_last_run_time"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "datetime"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_backup_last_run_time"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "remove_from_alarm_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "remove_from_archive_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "remove_from_archive_target_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "remove_from_backup_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "the value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "add_to_alarm_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "the value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "add_to_archive_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "the value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "add_to_archive_target_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "the value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "add_to_backup_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_alarm_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "true if alarm is enabled for this policy",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the is_alarm_enabled field",
        "name": "set_is_alarm_enabled"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_archive_target_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the archive target config type",
            "name": "value",
            "type": "enum vmpp_archive_target_type"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the archive_target_config_type field",
        "name": "set_archive_target_type"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_archive_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the archive frequency",
            "name": "value",
            "type": "enum vmpp_archive_frequency"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the archive_frequency field",
        "name": "set_archive_frequency"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_backup_schedule"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the backup frequency",
            "name": "value",
            "type": "enum vmpp_backup_frequency"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the backup_frequency field",
        "name": "set_backup_frequency"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "the value to set",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_backup_retention_value"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy",
            "name": "vmpp",
            "type": "VMPP ref"
          },
          {
            "doc": "how many hours in the past the oldest record to fetch is",
            "name": "hours_from_now",
            "type": "int"
          }
        ],
        "result": [
          "string set",
          "A list of alerts encoded in xml"
        ],
        "description": "This call fetches a history of alerts for a given protection policy",
        "name": "get_alerts"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The snapshot to archive",
            "name": "snapshot",
            "type": "VM ref"
          }
        ],
        "result": [
          "string",
          "An XMLRPC result"
        ],
        "description": "This call archives the snapshot provided as a parameter",
        "name": "archive_now"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The protection policy to execute",
            "name": "vmpp",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "string",
          "An XMLRPC result"
        ],
        "description": "This call executes the protection policy immediately",
        "name": "protect_now"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum vmpp_backup_type"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the backup_type field of the given VMPP.",
        "name": "set_backup_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the is_policy_enabled field of the given VMPP.",
        "name": "set_is_policy_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given VMPP.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given VMPP.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the recent_alerts field of the given VMPP.",
        "name": "get_recent_alerts"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the alarm_config field of the given VMPP.",
        "name": "get_alarm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_alarm_enabled field of the given VMPP.",
        "name": "get_is_alarm_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "VM ref set",
          "value of the field"
        ],
        "description": "Get the VMs field of the given VMPP.",
        "name": "get_VMs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the archive_last_run_time field of the given VMPP.",
        "name": "get_archive_last_run_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_archive_running field of the given VMPP.",
        "name": "get_is_archive_running"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the archive_schedule field of the given VMPP.",
        "name": "get_archive_schedule"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "enum vmpp_archive_frequency",
          "value of the field"
        ],
        "description": "Get the archive_frequency field of the given VMPP.",
        "name": "get_archive_frequency"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the archive_target_config field of the given VMPP.",
        "name": "get_archive_target_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "enum vmpp_archive_target_type",
          "value of the field"
        ],
        "description": "Get the archive_target_type field of the given VMPP.",
        "name": "get_archive_target_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the backup_last_run_time field of the given VMPP.",
        "name": "get_backup_last_run_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_backup_running field of the given VMPP.",
        "name": "get_is_backup_running"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the backup_schedule field of the given VMPP.",
        "name": "get_backup_schedule"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "enum vmpp_backup_frequency",
          "value of the field"
        ],
        "description": "Get the backup_frequency field of the given VMPP.",
        "name": "get_backup_frequency"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the backup_retention_value field of the given VMPP.",
        "name": "get_backup_retention_value"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "enum vmpp_backup_type",
          "value of the field"
        ],
        "description": "Get the backup_type field of the given VMPP.",
        "name": "get_backup_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_policy_enabled field of the given VMPP.",
        "name": "get_is_policy_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given VMPP.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given VMPP.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VMPP.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "VMPP ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the VMPP instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VMPP instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VMPP record"
          }
        ],
        "result": [
          "VMPP ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VMPP instance, and return its handle.\nThe constructor args are: name_label, name_description, is_policy_enabled, backup_type, backup_retention_value, backup_frequency, backup_schedule, archive_target_type, archive_target_config, archive_frequency, archive_schedule, is_alarm_enabled, alarm_config (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VMPP ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VMPP instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VMPP ref"
          }
        ],
        "result": [
          "VMPP record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VMPP.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "true",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "enable or disable this policy",
        "name": "is_policy_enabled"
      },
      {
        "default": "snapshot",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum vmpp_backup_type",
        "description": "type of the backup sub-policy",
        "name": "backup_type"
      },
      {
        "default": "7",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "maximum number of backups that should be stored at any time",
        "name": "backup_retention_value"
      },
      {
        "default": "daily",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vmpp_backup_frequency",
        "description": "frequency of the backup schedule",
        "name": "backup_frequency"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "schedule of the backup containing 'hour', 'min', 'days'. Date\/time-related information is in XenServer Local Timezone",
        "name": "backup_schedule"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this protection policy's backup is running",
        "name": "is_backup_running"
      },
      {
        "default": "19700101T00:00:00Z",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "time of the last backup",
        "name": "backup_last_run_time"
      },
      {
        "default": "none",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vmpp_archive_target_type",
        "description": "type of the archive target config",
        "name": "archive_target_type"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "configuration for the archive, including its 'location', 'username', 'password'",
        "name": "archive_target_config"
      },
      {
        "default": "never",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vmpp_archive_frequency",
        "description": "frequency of the archive schedule",
        "name": "archive_frequency"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "schedule of the archive containing 'hour', 'min', 'days'. Date\/time-related information is in XenServer Local Timezone",
        "name": "archive_schedule"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this protection policy's archive is running",
        "name": "is_archive_running"
      },
      {
        "default": "19700101T00:00:00Z",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "time of the last archive",
        "name": "archive_last_run_time"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref set",
        "description": "all VMs attached to this protection policy",
        "name": "VMs"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if alarm is enabled for this policy",
        "name": "is_alarm_enabled"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "configuration for the alarm",
        "name": "alarm_config"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "cowley",
            "transition": "published"
          },
          {
            "description": "The VMPR feature was removed",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "recent alerts",
        "name": "recent_alerts"
      }
    ],
    "description": "VM Protection Policy",
    "name": "VMPP"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "VM appliance",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Start",
            "name": "start"
          },
          {
            "doc": "Clean shutdown",
            "name": "clean_shutdown"
          },
          {
            "doc": "Hard shutdown",
            "name": "hard_shutdown"
          },
          {
            "doc": "Shutdown",
            "name": "shutdown"
          }
        ],
        "name": "vm_appliance_operation"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VM_appliance ref -> VM_appliance record) map",
          "records of all objects"
        ],
        "description": "Return a map of VM_appliance references to VM_appliance records for all VM_appliances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VM_appliance ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VM_appliances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Recover the VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR.",
            "name": "VM_REQUIRES_SR"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance to recover",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "The session to which the VM appliance is to be recovered.",
            "name": "session_to",
            "type": "session ref"
          },
          {
            "doc": "Whether the VMs should replace newer versions of themselves.",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Recover the VM appliance",
        "name": "recover"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Get the list of SRs required by the VM appliance to recover.",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance for which the required list of SRs has to be recovered.",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "The session to which the list of SRs have to be recovered .",
            "name": "session_to",
            "type": "session ref"
          }
        ],
        "result": [
          "SR ref set",
          "refs for SRs required to recover the VM"
        ],
        "description": "Get the list of SRs required by the VM appliance to recover.",
        "name": "get_SRs_required_for_recovery"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Assert whether all SRs required to recover this VM appliance are available.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [
          {
            "doc": "You attempted to run a VM on a host which doesn't have access to an SR needed by the VM. The VM has at least one VBD attached to a VDI in the SR.",
            "name": "VM_REQUIRES_SR"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance to recover",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "The session to which the VM appliance is to be recovered.",
            "name": "session_to",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Assert whether all SRs required to recover this VM appliance are available.",
        "name": "assert_can_be_recovered"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation",
            "name": "OPERATION_PARTIALLY_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "For each VM in the appliance, try to shut it down cleanly. If this fails, perform a hard shutdown of the VM.",
        "name": "shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Perform a hard shutdown of all the VMs in the appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation",
            "name": "OPERATION_PARTIALLY_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Perform a hard shutdown of all the VMs in the appliance",
        "name": "hard_shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Perform a clean shutdown of all the VMs in the appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation",
            "name": "OPERATION_PARTIALLY_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Perform a clean shutdown of all the VMs in the appliance",
        "name": "clean_shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Start all VMs in the appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "Some VMs belonging to the appliance threw an exception while carrying out the specified operation",
            "name": "OPERATION_PARTIALLY_FAILED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VM appliance",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "Instantiate all VMs belonging to this appliance in paused state if set to true.",
            "name": "paused",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start all VMs in the appliance",
        "name": "start"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given VM_appliance.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given VM_appliance.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "all VMs in this appliance",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "VM ref set",
          "value of the field"
        ],
        "description": "Get the VMs field of the given VM_appliance.",
        "name": "get_VMs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "(string -> enum vm_appliance_operation) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given VM_appliance.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "enum vm_appliance_operation set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given VM_appliance.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given VM_appliance.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given VM_appliance.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VM_appliance.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "VM_appliance ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the VM_appliance instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VM_appliance instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VM_appliance record"
          }
        ],
        "result": [
          "VM_appliance ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VM_appliance instance, and return its handle.\nThe constructor args are: name_label, name_description (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VM_appliance ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VM_appliance instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM appliance",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VM_appliance ref"
          }
        ],
        "result": [
          "VM_appliance record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VM_appliance.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vm_appliance_operation set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum vm_appliance_operation) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "all VMs in this appliance",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref set",
        "description": "all VMs in this appliance",
        "name": "VMs"
      }
    ],
    "description": "VM appliance",
    "name": "VM_appliance"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "DR task",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "DR task",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(DR_task ref -> DR_task record) map",
          "records of all objects"
        ],
        "description": "Return a map of DR_task references to DR_task records for all DR_tasks known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "DR task",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "DR_task ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the DR_tasks known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The disaster recovery task to destroy",
            "name": "self",
            "type": "DR_task ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the disaster recovery task, detaching and forgetting any SRs introduced which are no longer required",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a disaster recovery task which will query the supplied list of devices",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR driver type of the SRs to introduce",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "The device configuration of the SRs to introduce",
            "name": "device_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The devices to use for disaster recovery",
            "name": "whitelist",
            "type": "string set"
          }
        ],
        "result": [
          "DR_task ref",
          "The reference to the created task"
        ],
        "description": "Create a disaster recovery task which will query the supplied list of devices",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "All SRs introduced by this appliance",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "DR_task ref"
          }
        ],
        "result": [
          "SR ref set",
          "value of the field"
        ],
        "description": "Get the introduced_SRs field of the given DR_task.",
        "name": "get_introduced_SRs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "DR_task ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given DR_task.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "DR task",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "DR_task ref",
          "reference to the object"
        ],
        "description": "Get a reference to the DR_task instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "DR task",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "DR_task ref"
          }
        ],
        "result": [
          "DR_task record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given DR_task.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "All SRs introduced by this appliance",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "SR ref set",
        "description": "All SRs introduced by this appliance",
        "name": "introduced_SRs"
      }
    ],
    "description": "DR task",
    "name": "DR_task"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A physical host",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Indicates this host is able to provision another VM",
            "name": "provision"
          },
          {
            "doc": "Indicates this host is evacuating",
            "name": "evacuate"
          },
          {
            "doc": "Indicates this host is in the process of shutting itself down",
            "name": "shutdown"
          },
          {
            "doc": "Indicates this host is in the process of rebooting",
            "name": "reboot"
          },
          {
            "doc": "Indicates this host is in the process of being powered on",
            "name": "power_on"
          },
          {
            "doc": "This host is starting a VM",
            "name": "vm_start"
          },
          {
            "doc": "This host is resuming a VM",
            "name": "vm_resume"
          },
          {
            "doc": "This host is the migration target of a VM",
            "name": "vm_migrate"
          }
        ],
        "name": "host_allowed_operations"
      },
      {
        "values": [
          {
            "doc": "This host is outputting its console to a physical display device",
            "name": "enabled"
          },
          {
            "doc": "The host will stop outputting its console to a physical display device on next boot",
            "name": "disable_on_reboot"
          },
          {
            "doc": "This host is not outputting its console to a physical display device",
            "name": "disabled"
          },
          {
            "doc": "The host will start outputting its console to a physical display device on next boot",
            "name": "enable_on_reboot"
          }
        ],
        "name": "host_display"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(host ref -> host record) map",
          "records of all objects"
        ],
        "description": "Return a map of host references to host records for all hosts known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the hosts known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "True to allow SSLv3 and ciphersuites as used in old XenServer versions",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Enable\/disable SSLv3 for interoperability with older versions of XenServer",
        "name": "set_ssl_legacy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "enum host_display",
          "This host's physical display usage"
        ],
        "description": "Disable console output to the physical display device next time this host boots",
        "name": "disable_display"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "enum host_display",
          "This host's physical display usage"
        ],
        "description": "Enable console output to the physical display device next time this host boots",
        "name": "enable_display"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to declare is dead",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Declare that a host is dead. This is a dangerous operation, and should only be called if the administrator is absolutely sure the host is definitely dead",
        "name": "declare_dead"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Prepare to receive a VM, returning a token which can be passed to VM.migrate.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The target host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The network through which migration traffic should be received.",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "Extra configuration operations",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "(string -> string) map",
          "A value which should be passed to VM.migrate"
        ],
        "description": "Prepare to receive a VM, returning a token which can be passed to VM.migrate.",
        "name": "migrate_receive"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Disable the use of a local SR for caching purposes",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Disable the use of a local SR for caching purposes",
        "name": "disable_local_storage_caching"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Enable the use of a local SR for caching purposes",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The SR to use as a local cache",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Enable the use of a local SR for caching purposes",
        "name": "enable_local_storage_caching"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Remove the feature mask, such that after a reboot all features of the CPU are enabled.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the feature mask, such that after a reboot all features of the CPU are enabled.",
        "name": "reset_cpu_features"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the CPU features to be used after a reboot, if the given features string is valid.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The features string (32 hexadecimal digits)",
            "name": "features",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the CPU features to be used after a reboot, if the given features string is valid.",
        "name": "set_cpu_features"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the power-on-mode, host, user and password ",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "power-on-mode can be empty,iLO,wake-on-lan, DRAC or other",
            "name": "power_on_mode",
            "type": "string"
          },
          {
            "doc": "Power on config",
            "name": "power_on_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the power-on-mode, host, user and password ",
        "name": "set_power_on_mode"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Refresh the list of installed Supplemental Packs.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to modify",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Refresh the list of installed Supplemental Packs.",
        "name": "refresh_pack_info"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The requested edition",
            "name": "edition",
            "type": "string"
          },
          {
            "doc": "Update the license params even if the apply call fails",
            "name": "force",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Change to another edition, or reactivate the current edition after a license has expired. This may be subject to the successful checkout of an appropriate license.",
        "name": "apply_edition"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Get the installed server SSL certificate.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "The installed server SSL certificate, in PEM form."
        ],
        "description": "Get the installed server SSL certificate.",
        "name": "get_server_certificate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to query",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(VM ref -> string set) map",
          "VMs and the reasons why they would block evacuation, or their target host recommended by the wlb server"
        ],
        "description": "Retrieves recommended host migrations to perform when evacuating the host from the wlb server. If a VM cannot be migrated from the host the reason is listed instead of a recommendation.",
        "name": "retrieve_wlb_evacuate_recommendations"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call disables external authentication on the local host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host whose external authentication should be disabled",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "Optional parameters as a list of key-values containing the configuration data",
            "name": "config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call disables external authentication on the local host",
        "name": "disable_external_auth"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call enables external authentication on a host",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host whose external authentication should be enabled",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "A list of key-values containing the configuration data",
            "name": "config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The name of the service",
            "name": "service_name",
            "type": "string"
          },
          {
            "doc": "The type of authentication (e.g. AD for Active Directory)",
            "name": "auth_type",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call enables external authentication on a host",
        "name": "enable_external_auth"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call queries the host's clock for the current time in the host's local timezone",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host whose clock should be queried",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "datetime",
          "The current local time"
        ],
        "description": "This call queries the host's clock for the current time in the host's local timezone",
        "name": "get_server_localtime"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call queries the host's clock for the current time",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host whose clock should be queried",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "datetime",
          "The current time"
        ],
        "description": "This call queries the host's clock for the current time",
        "name": "get_servertime"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Call a XenAPI plugin on this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The name of the plugin",
            "name": "plugin",
            "type": "string"
          },
          {
            "doc": "The name of the function within the plugin",
            "name": "fn",
            "type": "string"
          },
          {
            "doc": "Arguments for the function",
            "name": "args",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "string",
          "Result from the plugin"
        ],
        "description": "Call a XenAPI plugin on this host",
        "name": "call_plugin"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a named binary blob of data that is associated with this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The name associated with the blob",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The mime type for the data. Empty string translates to application\/octet-stream",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference of the blob, needed for populating its data"
        ],
        "description": "Create a placeholder for a named binary blob of data that is associated with this host",
        "name": "create_new_blob"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This causes the RRDs to be backed up to the master",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Schedule a backup of the RRDs of this host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "Delay in seconds from when the call is received to perform the backup",
            "name": "delay",
            "type": "float"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This causes the RRDs to be backed up to the master",
        "name": "backup_rrds"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to whom the data should be sent",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host",
        "name": "sync_data"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Computes the virtualization memory overhead of a host.",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host for which to compute the memory overhead",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "int",
          "the virtualization memory overhead of the host."
        ],
        "description": "Computes the virtualization memory overhead of a host.",
        "name": "compute_memory_overhead"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Computes the amount of free memory on the host.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to send the request to",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "int",
          "the amount of free memory on the host."
        ],
        "description": "Computes the amount of free memory on the host.",
        "name": "compute_free_memory"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The host name is invalid.",
            "name": "HOST_NAME_INVALID"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host whose host name to set",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The new host name",
            "name": "hostname",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately.",
        "name": "set_hostname_live"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
        "name": "shutdown_agent"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host on which you want to restart the agent",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Restarts the agent after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called.",
        "name": "restart_agent"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to interrogate",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "An XML fragment containing the system status capabilities."
        ],
        "description": "",
        "name": "get_system_status_capabilities"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "networking",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Which host's management interface is required",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "PIF ref",
          "The management interface for the host"
        ],
        "description": "Returns the management interface for the specified host",
        "name": "get_management_interface"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Disable the management network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Disable the management network interface",
        "name": "management_disable"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "name of the interface to use as a management interface",
            "name": "interface",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken.",
        "name": "local_management_reconfigure"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reconfigure the management network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to a PIF object corresponding to the management interface",
            "name": "pif",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reconfigure the management network interface",
        "name": "management_reconfigure"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Re-configure syslog logging",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Tell the host to reread its Host.logging parameters and reconfigure itself accordingly",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Re-configure syslog logging",
        "name": "syslog_reconfigure"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Migrate all VMs off of this host, where possible.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to evacuate",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Migrate all VMs off of this host, where possible.",
        "name": "evacuate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return a set of VMs which are not co-operating with the host's memory control system",
            "release": "midnight-ride",
            "transition": "published"
          },
          {
            "description": "",
            "release": "tampa",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to query",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "VM ref set",
          "VMs which are not co-operating"
        ],
        "description": "Return a set of VMs which are not co-operating with the host's memory control system",
        "name": "get_uncooperative_resident_VMs"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to query",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(VM ref -> string set) map",
          "VMs which block evacuation together with reasons"
        ],
        "description": "Return a set of VMs which prevent the host being evacuated, with per-VM error codes",
        "name": "get_vms_which_prevent_evacuation"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Check this host can be evacuated.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to evacuate",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Check this host can be evacuated.",
        "name": "assert_can_evacuate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Forget the recorded statistics related to the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The data source whose archives are to be forgotten",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Forget the recorded statistics related to the specified data source",
        "name": "forget_data_source_archives"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Query the latest value of the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The data source to query",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "float",
          "The latest value, averaged over the last 5 seconds"
        ],
        "description": "Query the latest value of the specified data source",
        "name": "query_data_source"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Start recording the specified data source",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The data source to record",
            "name": "data_source",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Start recording the specified data source",
        "name": "record_data_source"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to interrogate",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "data_source record set",
          "A set of data sources"
        ],
        "description": "",
        "name": "get_data_sources"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "This call disables HA on the local host. This should only be used with extreme care.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "This call disables HA on the local host. This should only be used with extreme care.",
        "name": "emergency_ha_disable"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to power-on the host (if the capability exists).",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to power on",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempt to power-on the host (if the capability exists).",
        "name": "power_on"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy specified host record in database",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host record to remove",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy specified host record in database",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Apply a new license to a host",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Free licenses no longer handled by xapi",
            "release": "clearwater",
            "transition": "removed"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "There was an error processing your license.  Please contact your support representative.",
            "name": "LICENSE_PROCESSING_ERROR"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to upload the license to",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The contents of the license file, base64 encoded",
            "name": "contents",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Apply a new license to a host",
        "name": "license_apply"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "List all supported methods",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "The name of every supported method."
        ],
        "description": "List all supported methods",
        "name": "list_methods"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Run xen-bugtool --yestoall and upload the output to Citrix support",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host on which to run xen-bugtool",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The URL to upload to",
            "name": "url",
            "type": "string"
          },
          {
            "doc": "Extra configuration operations",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Run xen-bugtool --yestoall and upload the output to Citrix support",
        "name": "bugreport_upload"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Inject the given string as debugging keys into Xen",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The keys to send",
            "name": "keys",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Inject the given string as debugging keys into Xen",
        "name": "send_debug_keys"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Get the host's log file",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to query",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "The contents of the host's primary log file"
        ],
        "description": "Get the host's log file",
        "name": "get_log"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Get the host xen dmesg, and clear the buffer.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to query",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "dmesg string"
        ],
        "description": "Get the host xen dmesg, and clear the buffer.",
        "name": "dmesg_clear"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Get the host xen dmesg.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to query",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "dmesg string"
        ],
        "description": "Get the host xen dmesg.",
        "name": "dmesg"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to reboot",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reboot the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
        "name": "reboot"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to shutdown",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Shutdown the host. (This function can only be called if there are no currently running VMs on the host and it is disabled.)",
        "name": "shutdown"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Puts the host into a state in which new VMs can be started.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to enable",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Puts the host into a state in which new VMs can be started.",
        "name": "enable"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The Host to disable",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Puts the host into a state in which no new VMs can be started. Currently active VMs on the host continue to execute.",
        "name": "disable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "indicates whether the host is configured to output its console to a physical display device",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum host_display"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the display field of the given host.",
        "name": "set_display"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VCPUs params to apply to all resident guests",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the guest_VCPUs_params field of the given host.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_guest_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VCPUs params to apply to all resident guests",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the guest_VCPUs_params field of the given host.",
        "name": "add_to_guest_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VCPUs params to apply to all resident guests",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the guest_VCPUs_params field of the given host.",
        "name": "set_guest_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Contact information of the license server",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the license_server field of the given host.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_license_server"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Contact information of the license server",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the license_server field of the given host.",
        "name": "add_to_license_server"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Contact information of the license server",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the license_server field of the given host.",
        "name": "set_license_server"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given host.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given host.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given host.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The address by which this host can be contacted from any other host in the pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the address field of the given host.",
        "name": "set_address"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The hostname of this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the hostname field of the given host.",
        "name": "set_hostname"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the crash_dump_sr field of the given host.",
        "name": "set_crash_dump_sr"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the suspend_image_sr field of the given host.",
        "name": "set_suspend_image_sr"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "logging configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the logging field of the given host.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_logging"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "logging configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the logging field of the given host.",
        "name": "add_to_logging"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "logging configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the logging field of the given host.",
        "name": "set_logging"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given host.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given host.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given host.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given host.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given host.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The set of versions of the virtual hardware platform that the host can offer to its guests",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "int set",
          "value of the field"
        ],
        "description": "Get the virtual_hardware_platform_versions field of the given host.",
        "name": "get_virtual_hardware_platform_versions"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "indicates whether the host is configured to output its console to a physical display device",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "enum host_display",
          "value of the field"
        ],
        "description": "Get the display field of the given host.",
        "name": "get_display"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VCPUs params to apply to all resident guests",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the guest_VCPUs_params field of the given host.",
        "name": "get_guest_VCPUs_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the ssl_legacy field of the given host.",
        "name": "get_ssl_legacy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "PGPU ref set",
          "value of the field"
        ],
        "description": "Get the PGPUs field of the given host.",
        "name": "get_PGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "PCI ref set",
          "value of the field"
        ],
        "description": "Get the PCIs field of the given host.",
        "name": "get_PCIs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the chipset_info field of the given host.",
        "name": "get_chipset_info"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR that is used as a local cache",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the local_cache_sr field of the given host.",
        "name": "get_local_cache_sr"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The power on config",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the power_on_config field of the given host.",
        "name": "get_power_on_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The power on mode",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the power_on_mode field of the given host.",
        "name": "get_power_on_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "BIOS strings",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the bios_strings field of the given host.",
        "name": "get_bios_strings"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Contact information of the license server",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the license_server field of the given host.",
        "name": "get_license_server"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "XenServer edition",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the edition field of the given host.",
        "name": "get_edition"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "configuration specific to external authentication service",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the external_auth_configuration field of the given host.",
        "name": "get_external_auth_configuration"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "name of external authentication service configured; empty if none configured.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the external_auth_service_name field of the given host.",
        "name": "get_external_auth_service_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "type of external authentication service configured; empty if none configured.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the external_auth_type field of the given host.",
        "name": "get_external_auth_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given host.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Binary blobs associated with this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> blob ref) map",
          "value of the field"
        ],
        "description": "Get the blobs field of the given host.",
        "name": "get_blobs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The set of hosts visible via the network from this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the ha_network_peers field of the given host.",
        "name": "get_ha_network_peers"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The set of statefiles accessible from this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the ha_statefiles field of the given host.",
        "name": "get_ha_statefiles"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "State of the current license",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the license_params field of the given host.",
        "name": "get_license_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "host_metrics ref",
          "value of the field"
        ],
        "description": "Get the metrics field of the given host.",
        "name": "get_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The address by which this host can be contacted from any other host in the pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the address field of the given host.",
        "name": "get_address"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The hostname of this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the hostname field of the given host.",
        "name": "get_hostname"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Details about the physical CPUs on this host",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the cpu_info field of the given host.",
        "name": "get_cpu_info"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical CPUs on this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "host_cpu ref set",
          "value of the field"
        ],
        "description": "Get the host_CPUs field of the given host.",
        "name": "get_host_CPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "physical blockdevices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "PBD ref set",
          "value of the field"
        ],
        "description": "Get the PBDs field of the given host.",
        "name": "get_PBDs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Set of host patches",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "host_patch ref set",
          "value of the field"
        ],
        "description": "Get the patches field of the given host.",
        "name": "get_patches"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Set of host crash dumps",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "host_crashdump ref set",
          "value of the field"
        ],
        "description": "Get the crashdumps field of the given host.",
        "name": "get_crashdumps"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the crash_dump_sr field of the given host.",
        "name": "get_crash_dump_sr"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the suspend_image_sr field of the given host.",
        "name": "get_suspend_image_sr"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "physical network interfaces",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "PIF ref set",
          "value of the field"
        ],
        "description": "Get the PIFs field of the given host.",
        "name": "get_PIFs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "logging configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the logging field of the given host.",
        "name": "get_logging"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of VMs currently resident on host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "VM ref set",
          "value of the field"
        ],
        "description": "Get the resident_VMs field of the given host.",
        "name": "get_resident_VMs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a list of the bootloaders installed on the machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the supported_bootloaders field of the given host.",
        "name": "get_supported_bootloaders"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Scheduler policy currently in force on this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the sched_policy field of the given host.",
        "name": "get_sched_policy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the cpu_configuration field of the given host.",
        "name": "get_cpu_configuration"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Xen capabilities",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the capabilities field of the given host.",
        "name": "get_capabilities"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given host.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "version strings",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the software_version field of the given host.",
        "name": "get_software_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the host is currently enabled",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the enabled field of the given host.",
        "name": "get_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "details of vendor implementation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the API_version\/vendor_implementation field of the given host.",
        "name": "get_API_version_vendor_implementation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "identification of vendor",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the API_version\/vendor field of the given host.",
        "name": "get_API_version_vendor"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "minor version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the API_version\/minor field of the given host.",
        "name": "get_API_version_minor"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "major version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the API_version\/major field of the given host.",
        "name": "get_API_version_major"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "(string -> enum host_allowed_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given host.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "enum host_allowed_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given host.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Virtualization memory overhead (bytes).",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/overhead field of the given host.",
        "name": "get_memory_overhead"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given host.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given host.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given host.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "host ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the host instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "host ref",
          "reference to the object"
        ],
        "description": "Get a reference to the host instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host ref"
          }
        ],
        "result": [
          "host record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given host.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Virtualization memory overhead (bytes).",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Virtualization memory overhead (bytes).",
        "name": "memory_overhead"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum host_allowed_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum host_allowed_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "major version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "major version number",
        "name": "API_version_major"
      },
      {
        "lifecycle": [
          {
            "description": "minor version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "minor version number",
        "name": "API_version_minor"
      },
      {
        "lifecycle": [
          {
            "description": "identification of vendor",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "identification of vendor",
        "name": "API_version_vendor"
      },
      {
        "lifecycle": [
          {
            "description": "details of vendor implementation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "details of vendor implementation",
        "name": "API_version_vendor_implementation"
      },
      {
        "lifecycle": [
          {
            "description": "True if the host is currently enabled",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the host is currently enabled",
        "name": "enabled"
      },
      {
        "lifecycle": [
          {
            "description": "version strings",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "version strings",
        "name": "software_version"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "Xen capabilities",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "Xen capabilities",
        "name": "capabilities"
      },
      {
        "lifecycle": [
          {
            "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "The CPU configuration on this host.  May contain keys such as \"nr_nodes\", \"sockets_per_node\", \"cores_per_socket\", or \"threads_per_core\"",
        "name": "cpu_configuration"
      },
      {
        "lifecycle": [
          {
            "description": "Scheduler policy currently in force on this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Scheduler policy currently in force on this host",
        "name": "sched_policy"
      },
      {
        "lifecycle": [
          {
            "description": "a list of the bootloaders installed on the machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "a list of the bootloaders installed on the machine",
        "name": "supported_bootloaders"
      },
      {
        "lifecycle": [
          {
            "description": "list of VMs currently resident on host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref set",
        "description": "list of VMs currently resident on host",
        "name": "resident_VMs"
      },
      {
        "lifecycle": [
          {
            "description": "logging configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "logging configuration",
        "name": "logging"
      },
      {
        "lifecycle": [
          {
            "description": "physical network interfaces",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "qualifier": "read only",
        "type": "PIF ref set",
        "description": "physical network interfaces",
        "name": "PIFs"
      },
      {
        "lifecycle": [
          {
            "description": "The SR in which VDIs for suspend images are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "The SR in which VDIs for suspend images are created",
        "name": "suspend_image_sr"
      },
      {
        "lifecycle": [
          {
            "description": "The SR in which VDIs for crash dumps are created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "SR ref",
        "description": "The SR in which VDIs for crash dumps are created",
        "name": "crash_dump_sr"
      },
      {
        "lifecycle": [
          {
            "description": "Set of host crash dumps",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host_crashdump ref set",
        "description": "Set of host crash dumps",
        "name": "crashdumps"
      },
      {
        "lifecycle": [
          {
            "description": "Set of host patches",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host_patch ref set",
        "description": "Set of host patches",
        "name": "patches"
      },
      {
        "lifecycle": [
          {
            "description": "physical blockdevices",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PBD ref set",
        "description": "physical blockdevices",
        "name": "PBDs"
      },
      {
        "lifecycle": [
          {
            "description": "The physical CPUs on this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host_cpu ref set",
        "description": "The physical CPUs on this host",
        "name": "host_CPUs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Details about the physical CPUs on this host",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Details about the physical CPUs on this host",
        "name": "cpu_info"
      },
      {
        "lifecycle": [
          {
            "description": "The hostname of this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "qualifier": "read\/write",
        "type": "string",
        "description": "The hostname of this host",
        "name": "hostname"
      },
      {
        "lifecycle": [
          {
            "description": "The address by which this host can be contacted from any other host in the pool",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "networking",
        "qualifier": "read\/write",
        "type": "string",
        "description": "The address by which this host can be contacted from any other host in the pool",
        "name": "address"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with this host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host_metrics ref",
        "description": "metrics associated with this host",
        "name": "metrics"
      },
      {
        "lifecycle": [
          {
            "description": "State of the current license",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "State of the current license",
        "name": "license_params"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The set of statefiles accessible from this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "The set of statefiles accessible from this host",
        "name": "ha_statefiles"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The set of hosts visible via the network from this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "The set of hosts visible via the network from this host",
        "name": "ha_network_peers"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Binary blobs associated with this host",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> blob ref) map",
        "description": "Binary blobs associated with this host",
        "name": "blobs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "type of external authentication service configured; empty if none configured.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "type of external authentication service configured; empty if none configured.",
        "name": "external_auth_type"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "name of external authentication service configured; empty if none configured.",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "name of external authentication service configured; empty if none configured.",
        "name": "external_auth_service_name"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "configuration specific to external authentication service",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "configuration specific to external authentication service",
        "name": "external_auth_configuration"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "XenServer edition",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "XenServer edition",
        "name": "edition"
      },
      {
        "default": "{\"address\" -> \"localhost\", \"port\" -> \"27000\"}",
        "lifecycle": [
          {
            "description": "Contact information of the license server",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Contact information of the license server",
        "name": "license_server"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "BIOS strings",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "BIOS strings",
        "name": "bios_strings"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "The power on mode",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The power on mode",
        "name": "power_on_mode"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The power on config",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "The power on config",
        "name": "power_on_config"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "The SR that is used as a local cache",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "SR ref",
        "description": "The SR that is used as a local cache",
        "name": "local_cache_sr"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Information about chipset features",
        "name": "chipset_info"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PCI ref set",
        "description": "List of PCI devices in the host",
        "name": "PCIs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PGPU ref set",
        "description": "List of physical GPUs in the host",
        "name": "PGPUs"
      },
      {
        "default": "true",
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Allow SSLv3 protocol and ciphersuites as used by older XenServers",
        "name": "ssl_legacy"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "VCPUs params to apply to all resident guests",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "VCPUs params to apply to all resident guests",
        "name": "guest_VCPUs_params"
      },
      {
        "default": "enabled",
        "lifecycle": [
          {
            "description": "indicates whether the host is configured to output its console to a physical display device",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum host_display",
        "description": "indicates whether the host is configured to output its console to a physical display device",
        "name": "display"
      },
      {
        "default": "{0}",
        "lifecycle": [
          {
            "description": "The set of versions of the virtual hardware platform that the host can offer to its guests",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int set",
        "description": "The set of versions of the virtual hardware platform that the host can offer to its guests",
        "name": "virtual_hardware_platform_versions"
      }
    ],
    "description": "A physical host",
    "name": "host"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Represents a host crash dump",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a host crash dump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(host_crashdump ref -> host_crashdump record) map",
          "records of all objects"
        ],
        "description": "Return a map of host_crashdump references to host_crashdump records for all host_crashdumps known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a host crash dump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host_crashdump ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the host_crashdumps known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Upload the specified host crash dump to a specified URL",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host crashdump to upload",
            "name": "self",
            "type": "host_crashdump ref"
          },
          {
            "doc": "The URL to upload to",
            "name": "url",
            "type": "string"
          },
          {
            "doc": "Extra configuration operations",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Upload the specified host crash dump to a specified URL",
        "name": "upload"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy specified host crash dump, removing it from the disk.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host crashdump to destroy",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy specified host crash dump, removing it from the disk.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given host_crashdump.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given host_crashdump.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given host_crashdump.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given host_crashdump.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Size of the crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the size field of the given host_crashdump.",
        "name": "get_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time the crash happened",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the timestamp field of the given host_crashdump.",
        "name": "get_timestamp"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Host the crashdump relates to",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given host_crashdump.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given host_crashdump.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a host crash dump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "host_crashdump ref",
          "reference to the object"
        ],
        "description": "Get a reference to the host_crashdump instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a host crash dump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_crashdump ref"
          }
        ],
        "result": [
          "host_crashdump record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given host_crashdump.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Host the crashdump relates to",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "Host the crashdump relates to",
        "name": "host"
      },
      {
        "lifecycle": [
          {
            "description": "Time the crash happened",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time the crash happened",
        "name": "timestamp"
      },
      {
        "lifecycle": [
          {
            "description": "Size of the crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Size of the crashdump",
        "name": "size"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "Represents a host crash dump",
    "name": "host_crashdump"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Represents a patch stored on a server",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a patch stored on a server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(host_patch ref -> host_patch record) map",
          "records of all objects"
        ],
        "description": "Return a map of host_patch references to host_patch records for all host_patchs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a patch stored on a server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host_patch ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the host_patchs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Apply the selected patch and return its output",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "miami",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to apply",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "string",
          "the output of the patch application process"
        ],
        "description": "Apply the selected patch and return its output",
        "name": "apply"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "miami",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The patch to destroy",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified host patch, removing it from the disk. This does NOT reverse the patch",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given host_patch.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given host_patch.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given host_patch.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given host_patch.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The patch applied",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "pool_patch ref",
          "value of the field"
        ],
        "description": "Get the pool_patch field of the given host_patch.",
        "name": "get_pool_patch"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Size of the patch",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the size field of the given host_patch.",
        "name": "get_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time the patch was applied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the timestamp_applied field of the given host_patch.",
        "name": "get_timestamp_applied"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the patch has been applied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the applied field of the given host_patch.",
        "name": "get_applied"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Host the patch relates to",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given host_patch.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Patch version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the version field of the given host_patch.",
        "name": "get_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given host_patch.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given host_patch.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given host_patch.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a patch stored on a server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "host_patch ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the host_patch instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a patch stored on a server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "host_patch ref",
          "reference to the object"
        ],
        "description": "Get a reference to the host_patch instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Represents a patch stored on a server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_patch ref"
          }
        ],
        "result": [
          "host_patch record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given host_patch.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "Patch version number",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Patch version number",
        "name": "version"
      },
      {
        "lifecycle": [
          {
            "description": "Host the patch relates to",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "Host the patch relates to",
        "name": "host"
      },
      {
        "lifecycle": [
          {
            "description": "True if the patch has been applied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if the patch has been applied",
        "name": "applied"
      },
      {
        "lifecycle": [
          {
            "description": "Time the patch was applied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time the patch was applied",
        "name": "timestamp_applied"
      },
      {
        "lifecycle": [
          {
            "description": "Size of the patch",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Size of the patch",
        "name": "size"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "The patch applied",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "pool_patch ref",
        "description": "The patch applied",
        "name": "pool_patch"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "Represents a patch stored on a server",
    "name": "host_patch"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "The metrics associated with a host",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(host_metrics ref -> host_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of host_metrics references to host_metrics records for all host_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the host_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given host_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given host_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given host_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given host_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given host_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Pool master thinks this host is live",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the live field of the given host_metrics.",
        "name": "get_live"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Free host memory (bytes)",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/free field of the given host_metrics.",
        "name": "get_memory_free"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Total host memory (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the memory\/total field of the given host_metrics.",
        "name": "get_memory_total"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given host_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "host_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the host_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_metrics ref"
          }
        ],
        "result": [
          "host_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given host_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Total host memory (bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Total host memory (bytes)",
        "name": "memory_total"
      },
      {
        "lifecycle": [
          {
            "description": "Free host memory (bytes)",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "memory",
        "qualifier": "read only",
        "type": "int",
        "description": "Free host memory (bytes)",
        "name": "memory_free"
      },
      {
        "lifecycle": [
          {
            "description": "Pool master thinks this host is live",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Pool master thinks this host is live",
        "name": "live"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The metrics associated with a host",
    "name": "host_metrics"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A physical CPU",
        "release": "rio",
        "transition": "published"
      },
      {
        "description": "Deprecated in favour of the Host.cpu_info field",
        "release": "midnight-ride",
        "transition": "deprecated"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical CPU",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of the Host.cpu_info field",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(host_cpu ref -> host_cpu record) map",
          "records of all objects"
        ],
        "description": "Return a map of host_cpu references to host_cpu records for all host_cpus known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical CPU",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of the Host.cpu_info field",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "host_cpu ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the host_cpus known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given host_cpu.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given host_cpu.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given host_cpu.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given host_cpu.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the current CPU utilisation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the utilisation field of the given host_cpu.",
        "name": "get_utilisation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the physical CPU feature bitmap",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the features field of the given host_cpu.",
        "name": "get_features"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the flags of the physical CPU (a decoded version of the features field)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the flags field of the given host_cpu.",
        "name": "get_flags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the stepping of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the stepping field of the given host_cpu.",
        "name": "get_stepping"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the model number of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the model field of the given host_cpu.",
        "name": "get_model"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the family (number) of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the family field of the given host_cpu.",
        "name": "get_family"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the model name of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the modelname field of the given host_cpu.",
        "name": "get_modelname"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the speed of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the speed field of the given host_cpu.",
        "name": "get_speed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the vendor of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor field of the given host_cpu.",
        "name": "get_vendor"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the number of the physical CPU within the host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the number field of the given host_cpu.",
        "name": "get_number"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the host the CPU is in",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given host_cpu.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given host_cpu.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical CPU",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of the Host.cpu_info field",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "host_cpu ref",
          "reference to the object"
        ],
        "description": "Get a reference to the host_cpu instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical CPU",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favour of the Host.cpu_info field",
            "release": "midnight-ride",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "host_cpu ref"
          }
        ],
        "result": [
          "host_cpu record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given host_cpu.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "the host the CPU is in",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "the host the CPU is in",
        "name": "host"
      },
      {
        "lifecycle": [
          {
            "description": "the number of the physical CPU within the host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "the number of the physical CPU within the host",
        "name": "number"
      },
      {
        "lifecycle": [
          {
            "description": "the vendor of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the vendor of the physical CPU",
        "name": "vendor"
      },
      {
        "lifecycle": [
          {
            "description": "the speed of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "the speed of the physical CPU",
        "name": "speed"
      },
      {
        "lifecycle": [
          {
            "description": "the model name of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the model name of the physical CPU",
        "name": "modelname"
      },
      {
        "lifecycle": [
          {
            "description": "the family (number) of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "the family (number) of the physical CPU",
        "name": "family"
      },
      {
        "lifecycle": [
          {
            "description": "the model number of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "the model number of the physical CPU",
        "name": "model"
      },
      {
        "lifecycle": [
          {
            "description": "the stepping of the physical CPU",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the stepping of the physical CPU",
        "name": "stepping"
      },
      {
        "lifecycle": [
          {
            "description": "the flags of the physical CPU (a decoded version of the features field)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the flags of the physical CPU (a decoded version of the features field)",
        "name": "flags"
      },
      {
        "lifecycle": [
          {
            "description": "the physical CPU feature bitmap",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the physical CPU feature bitmap",
        "name": "features"
      },
      {
        "lifecycle": [
          {
            "description": "the current CPU utilisation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "the current CPU utilisation",
        "name": "utilisation"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A physical CPU",
    "name": "host_cpu"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "A virtual network",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Indicates this network is attaching to a VIF or PIF",
            "name": "attaching"
          }
        ],
        "name": "network_operations"
      },
      {
        "values": [
          {
            "doc": "Treat all VIFs on this network with locking_mode = 'default' as if they have locking_mode = 'unlocked'",
            "name": "unlocked"
          },
          {
            "doc": "Treat all VIFs on this network with locking_mode = 'default' as if they have locking_mode = 'disabled'",
            "name": "disabled"
          }
        ],
        "name": "network_default_locking_mode"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(network ref -> network record) map",
          "records of all objects"
        ],
        "description": "Return a map of network references to network records for all networks known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "network ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the networks known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the default locking mode for VIFs attached to this network",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The network",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "The default locking mode for VIFs attached to this network.",
            "name": "value",
            "type": "enum network_default_locking_mode"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the default locking mode for VIFs attached to this network",
        "name": "set_default_locking_mode"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The network",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "The name associated with the blob",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The mime type for the data. Empty string translates to application\/octet-stream",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference of the blob, needed for populating its data"
        ],
        "description": "Create a placeholder for a named binary blob of data that is associated with this pool",
        "name": "create_new_blob"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given network.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given network.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given network.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given network.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given network.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given network.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the MTU field of the given network.",
        "name": "set_MTU"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given network.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given network.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "(VIF ref -> string) map",
          "value of the field"
        ],
        "description": "Get the assigned_ips field of the given network.",
        "name": "get_assigned_ips"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "enum network_default_locking_mode",
          "value of the field"
        ],
        "description": "Get the default_locking_mode field of the given network.",
        "name": "get_default_locking_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given network.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Binary blobs associated with this network",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "(string -> blob ref) map",
          "value of the field"
        ],
        "description": "Get the blobs field of the given network.",
        "name": "get_blobs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "name of the bridge corresponding to this network on the local host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the bridge field of the given network.",
        "name": "get_bridge"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given network.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the MTU field of the given network.",
        "name": "get_MTU"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of connected pifs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "PIF ref set",
          "value of the field"
        ],
        "description": "Get the PIFs field of the given network.",
        "name": "get_PIFs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of connected vifs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "VIF ref set",
          "value of the field"
        ],
        "description": "Get the VIFs field of the given network.",
        "name": "get_VIFs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "(string -> enum network_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given network.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "enum network_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given network.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given network.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given network.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given network.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "network ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the network instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified network instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "network record"
          }
        ],
        "result": [
          "network ref",
          "reference to the newly created object"
        ],
        "description": "Create a new network instance, and return its handle.\nThe constructor args are: name_label, name_description, MTU, other_config*, tags (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "network ref",
          "reference to the object"
        ],
        "description": "Get a reference to the network instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "network ref"
          }
        ],
        "result": [
          "network record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given network.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum network_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum network_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "list of connected vifs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VIF ref set",
        "description": "list of connected vifs",
        "name": "VIFs"
      },
      {
        "lifecycle": [
          {
            "description": "list of connected pifs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref set",
        "description": "list of connected pifs",
        "name": "PIFs"
      },
      {
        "default": "1500",
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "int",
        "description": "MTU in octets",
        "name": "MTU"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "name of the bridge corresponding to this network on the local host",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "name of the bridge corresponding to this network on the local host",
        "name": "bridge"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Binary blobs associated with this network",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> blob ref) map",
        "description": "Binary blobs associated with this network",
        "name": "blobs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "unlocked",
        "lifecycle": [
          {
            "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum network_default_locking_mode",
        "description": "The network will use this value to determine the behaviour of all VIFs where locking_mode = default",
        "name": "default_locking_mode"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(VIF ref -> string) map",
        "description": "The IP addresses assigned to VIFs on networks that have active xapi-managed DHCP",
        "name": "assigned_ips"
      }
    ],
    "description": "A virtual network",
    "name": "network"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "A virtual network interface",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Attempting to attach this VIF to a VM",
            "name": "attach"
          },
          {
            "doc": "Attempting to hotplug this VIF",
            "name": "plug"
          },
          {
            "doc": "Attempting to hot unplug this VIF",
            "name": "unplug"
          }
        ],
        "name": "vif_operations"
      },
      {
        "values": [
          {
            "doc": "No specific configuration set - default network policy applies",
            "name": "network_default"
          },
          {
            "doc": "Only traffic to a specific MAC and a list of IPv4 or IPv6 addresses is permitted",
            "name": "locked"
          },
          {
            "doc": "All traffic is permitted",
            "name": "unlocked"
          },
          {
            "doc": "No traffic is permitted",
            "name": "disabled"
          }
        ],
        "name": "vif_locking_mode"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VIF ref -> VIF record) map",
          "records of all objects"
        ],
        "description": "Return a map of VIF references to VIF records for all VIFs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VIF ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VIFs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes an IPv6 address from this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF from which the IP address will be removed",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP address which will be removed from the VIF",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes an IPv6 address from this VIF",
        "name": "remove_ipv6_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Associates an IPv6 address with this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF which the IP address will be associated with",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP address which will be associated with the VIF",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Associates an IPv6 address with this VIF",
        "name": "add_ipv6_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the IPv6 addresses to which traffic on this VIF can be restricted",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF which the IP addresses will be associated with",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP addresses which will be associated with the VIF",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the IPv6 addresses to which traffic on this VIF can be restricted",
        "name": "set_ipv6_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes an IPv4 address from this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF from which the IP address will be removed",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP address which will be removed from the VIF",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes an IPv4 address from this VIF",
        "name": "remove_ipv4_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Associates an IPv4 address with this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF which the IP address will be associated with",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP address which will be associated with the VIF",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Associates an IPv4 address with this VIF",
        "name": "add_ipv4_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the IPv4 addresses to which traffic on this VIF can be restricted",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF which the IP addresses will be associated with",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The IP addresses which will be associated with the VIF",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the IPv4 addresses to which traffic on this VIF can be restricted",
        "name": "set_ipv4_allowed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the locking mode for this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF whose locking mode will be set",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "The new locking mode for the VIF",
            "name": "value",
            "type": "enum vif_locking_mode"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the locking mode for this VIF",
        "name": "set_locking_mode"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Forcibly unplug the specified VIF",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF to forcibly unplug",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Forcibly unplug the specified VIF",
        "name": "unplug_force"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF to hot-unplug",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Hot-unplug the specified VIF, dynamically unattaching it from the running VM",
        "name": "unplug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Hotplug the specified VIF, dynamically attaching it to the running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VIF to hotplug",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Hotplug the specified VIF, dynamically attaching it to the running VM",
        "name": "plug"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the qos\/algorithm_params field of the given VIF.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the qos\/algorithm_params field of the given VIF.",
        "name": "add_to_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the qos\/algorithm_params field of the given VIF.",
        "name": "set_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the qos\/algorithm_type field of the given VIF.",
        "name": "set_qos_algorithm_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VIF.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VIF.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VIF.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the ipv6_allowed field of the given VIF.",
        "name": "get_ipv6_allowed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the ipv4_allowed field of the given VIF.",
        "name": "get_ipv4_allowed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "current locking mode of the VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "enum vif_locking_mode",
          "value of the field"
        ],
        "description": "Get the locking_mode field of the given VIF.",
        "name": "get_locking_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if the MAC was autogenerated; false indicates it was set manually",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the MAC_autogenerated field of the given VIF.",
        "name": "get_MAC_autogenerated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with this VIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "VIF_metrics ref",
          "value of the field"
        ],
        "description": "Get the metrics field of the given VIF.",
        "name": "get_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "supported QoS algorithms for this VIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the qos\/supported_algorithms field of the given VIF.",
        "name": "get_qos_supported_algorithms"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the qos\/algorithm_params field of the given VIF.",
        "name": "get_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the qos\/algorithm_type field of the given VIF.",
        "name": "get_qos_algorithm_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Device runtime properties",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the runtime_properties field of the given VIF.",
        "name": "get_runtime_properties"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "error\/success information associated with last attach-operation status (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the status_detail field of the given VIF.",
        "name": "get_status_detail"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "error\/success code associated with last attach-operation (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the status_code field of the given VIF.",
        "name": "get_status_code"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "is the device currently attached (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the currently_attached field of the given VIF.",
        "name": "get_currently_attached"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VIF.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the MTU field of the given VIF.",
        "name": "get_MTU"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "ethernet MAC address of virtual interface, as exposed to guest",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the MAC field of the given VIF.",
        "name": "get_MAC"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual machine to which this vif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given VIF.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual network to which this vif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "network ref",
          "value of the field"
        ],
        "description": "Get the network field of the given VIF.",
        "name": "get_network"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "order in which VIF backends are created by xapi",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device field of the given VIF.",
        "name": "get_device"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "(string -> enum vif_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given VIF.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "enum vif_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given VIF.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VIF.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VIF instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VIF record"
          }
        ],
        "result": [
          "VIF ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VIF instance, and return its handle.\nThe constructor args are: device*, network*, VM*, MAC*, MTU*, other_config*, qos_algorithm_type*, qos_algorithm_params*, locking_mode, ipv4_allowed, ipv6_allowed (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VIF ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VIF instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF ref"
          }
        ],
        "result": [
          "VIF record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VIF.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vif_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum vif_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "order in which VIF backends are created by xapi",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "order in which VIF backends are created by xapi",
        "name": "device"
      },
      {
        "lifecycle": [
          {
            "description": "virtual network to which this vif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "network ref",
        "description": "virtual network to which this vif is connected",
        "name": "network"
      },
      {
        "lifecycle": [
          {
            "description": "virtual machine to which this vif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "virtual machine to which this vif is connected",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "ethernet MAC address of virtual interface, as exposed to guest",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "ethernet MAC address of virtual interface, as exposed to guest",
        "name": "MAC"
      },
      {
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "MTU in octets",
        "name": "MTU"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "is the device currently attached (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "is the device currently attached (erased on reboot)",
        "name": "currently_attached"
      },
      {
        "lifecycle": [
          {
            "description": "error\/success code associated with last attach-operation (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "error\/success code associated with last attach-operation (erased on reboot)",
        "name": "status_code"
      },
      {
        "lifecycle": [
          {
            "description": "error\/success information associated with last attach-operation status (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "error\/success information associated with last attach-operation status (erased on reboot)",
        "name": "status_detail"
      },
      {
        "lifecycle": [
          {
            "description": "Device runtime properties",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Device runtime properties",
        "name": "runtime_properties"
      },
      {
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "QoS algorithm to use",
        "name": "qos_algorithm_type"
      },
      {
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "parameters for chosen QoS algorithm",
        "name": "qos_algorithm_params"
      },
      {
        "lifecycle": [
          {
            "description": "supported QoS algorithms for this VIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "supported QoS algorithms for this VIF",
        "name": "qos_supported_algorithms"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with this VIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VIF_metrics ref",
        "description": "metrics associated with this VIF",
        "name": "metrics"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if the MAC was autogenerated; false indicates it was set manually",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if the MAC was autogenerated; false indicates it was set manually",
        "name": "MAC_autogenerated"
      },
      {
        "default": "network_default",
        "lifecycle": [
          {
            "description": "current locking mode of the VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vif_locking_mode",
        "description": "current locking mode of the VIF",
        "name": "locking_mode"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "A list of IPv4 addresses which can be used to filter traffic passing through this VIF",
        "name": "ipv4_allowed"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "A list of IPv6 addresses which can be used to filter traffic passing through this VIF",
        "name": "ipv6_allowed"
      }
    ],
    "description": "A virtual network interface",
    "name": "VIF"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "The metrics associated with a virtual network device",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual network device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VIF_metrics ref -> VIF_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of VIF_metrics references to VIF_metrics records for all VIF_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual network device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VIF_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VIF_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VIF_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VIF_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VIF_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VIF_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given VIF_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/write_kbs field of the given VIF_metrics.",
        "name": "get_io_write_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/read_kbs field of the given VIF_metrics.",
        "name": "get_io_read_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VIF_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual network device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VIF_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VIF_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual network device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VIF_metrics ref"
          }
        ],
        "result": [
          "VIF_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VIF_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Read bandwidth (KiB\/s)",
        "name": "io_read_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Write bandwidth (KiB\/s)",
        "name": "io_write_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The metrics associated with a virtual network device",
    "name": "VIF_metrics"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Do not acquire an IP address",
            "name": "None"
          },
          {
            "doc": "Acquire an IP address by DHCP",
            "name": "DHCP"
          },
          {
            "doc": "Static IP address configuration",
            "name": "Static"
          }
        ],
        "name": "ip_configuration_mode"
      },
      {
        "values": [
          {
            "doc": "Do not acquire an IPv6 address",
            "name": "None"
          },
          {
            "doc": "Acquire an IPv6 address by DHCP",
            "name": "DHCP"
          },
          {
            "doc": "Static IPv6 address configuration",
            "name": "Static"
          },
          {
            "doc": "Router assigned prefix delegation IPv6 allocation",
            "name": "Autoconf"
          }
        ],
        "name": "ipv6_configuration_mode"
      },
      {
        "values": [
          {
            "doc": "Primary address is the IPv4 address",
            "name": "IPv4"
          },
          {
            "doc": "Primary address is the IPv6 address",
            "name": "IPv6"
          }
        ],
        "name": "primary_address_type"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(PIF ref -> PIF record) map",
          "records of all objects"
        ],
        "description": "Return a map of PIF references to PIF records for all PIFs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "PIF ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the PIFs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PIF",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "The property name",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The property value",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of a property of the PIF",
        "name": "set_property"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy a PIF database record.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The ref of the PIF whose database record should be destroyed",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy a PIF database record.",
        "name": "db_forget"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new PIF record in the database only",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "",
            "name": "device",
            "type": "string"
          },
          {
            "doc": "",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "",
            "name": "MAC",
            "type": "string"
          },
          {
            "doc": "",
            "name": "MTU",
            "type": "int"
          },
          {
            "doc": "",
            "name": "VLAN",
            "type": "int"
          },
          {
            "doc": "",
            "name": "physical",
            "type": "bool"
          },
          {
            "doc": "",
            "name": "ip_configuration_mode",
            "type": "enum ip_configuration_mode"
          },
          {
            "doc": "",
            "name": "IP",
            "type": "string"
          },
          {
            "doc": "",
            "name": "netmask",
            "type": "string"
          },
          {
            "doc": "",
            "name": "gateway",
            "type": "string"
          },
          {
            "doc": "",
            "name": "DNS",
            "type": "string"
          },
          {
            "doc": "",
            "name": "bond_slave_of",
            "type": "Bond ref"
          },
          {
            "doc": "",
            "name": "VLAN_master_of",
            "type": "VLAN ref"
          },
          {
            "doc": "",
            "name": "management",
            "type": "bool"
          },
          {
            "doc": "",
            "name": "other_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "",
            "name": "disallow_unplug",
            "type": "bool"
          },
          {
            "doc": "",
            "name": "ipv6_configuration_mode",
            "type": "enum ipv6_configuration_mode"
          },
          {
            "doc": "",
            "name": "IPv6",
            "type": "string set"
          },
          {
            "doc": "",
            "name": "ipv6_gateway",
            "type": "string"
          },
          {
            "doc": "",
            "name": "primary_address_type",
            "type": "enum primary_address_type"
          },
          {
            "doc": "",
            "name": "managed",
            "type": "bool"
          },
          {
            "doc": "",
            "name": "properties",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "PIF ref",
          "The ref of the newly created PIF record."
        ],
        "description": "Create a new PIF record in the database only",
        "name": "db_introduce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to bring up a physical interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The tunnel transport PIF has no IP configuration set.",
            "name": "TRANSPORT_PIF_NOT_CONFIGURED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to plug",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempt to bring up a physical interface",
        "name": "plug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Attempt to bring down a physical interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to unplug",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Attempt to bring down a physical interface",
        "name": "unplug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the PIF object matching a particular network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "Operation cannot proceed while a tunnel exists on this interface.",
            "name": "PIF_TUNNEL_STILL_EXISTS"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PIF object to destroy",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the PIF object matching a particular network interface",
        "name": "forget"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a PIF object matching a particular network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host on which the interface exists",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The MAC address of the interface",
            "name": "MAC",
            "type": "string"
          },
          {
            "doc": "The device name to use for the interface",
            "name": "device",
            "type": "string"
          },
          {
            "doc": "Indicates whether the interface is managed by xapi (defaults to \"true\")",
            "name": "managed",
            "type": "bool"
          }
        ],
        "result": [
          "PIF ref",
          "The reference of the created PIF object"
        ],
        "description": "Create a PIF object matching a particular network interface",
        "name": "introduce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Scan for physical interfaces on a host and create PIF objects to represent them",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host on which to scan",
            "name": "host",
            "type": "host ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Scan for physical interfaces on a host and create PIF objects to represent them",
        "name": "scan"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to reconfigure",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "Whether to prefer IPv4 or IPv6 connections",
            "name": "primary_address_type",
            "type": "enum primary_address_type"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Change the primary address type used by this PIF",
        "name": "set_primary_address_type"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to reconfigure",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "whether to use dynamic\/static\/no-assignment",
            "name": "mode",
            "type": "enum ipv6_configuration_mode"
          },
          {
            "doc": "the new IPv6 address (in <addr>\/<prefix length> format)",
            "name": "IPv6",
            "type": "string"
          },
          {
            "doc": "the new gateway",
            "name": "gateway",
            "type": "string"
          },
          {
            "doc": "the new DNS settings",
            "name": "DNS",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reconfigure the IPv6 address settings for this interface",
        "name": "reconfigure_ipv6"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Reconfigure the IP address settings for this interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to reconfigure",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "whether to use dynamic\/static\/no-assignment",
            "name": "mode",
            "type": "enum ip_configuration_mode"
          },
          {
            "doc": "the new IP address",
            "name": "IP",
            "type": "string"
          },
          {
            "doc": "the new netmask",
            "name": "netmask",
            "type": "string"
          },
          {
            "doc": "the new gateway",
            "name": "gateway",
            "type": "string"
          },
          {
            "doc": "the new DNS settings",
            "name": "DNS",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Reconfigure the IP address settings for this interface",
        "name": "reconfigure_ip"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the PIF object (provided it is a VLAN interface)",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Replaced by VLAN.destroy and Bond.destroy",
            "release": "miami",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "You tried to destroy a PIF, but it represents an aspect of the physical host configuration, and so cannot be destroyed.  The parameter echoes the PIF handle you gave.",
            "name": "PIF_IS_PHYSICAL"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "the PIF object to destroy",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the PIF object (provided it is a VLAN interface). This call is deprecated: use VLAN.destroy or Bond.destroy instead",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a VLAN interface from an existing physical interface",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Replaced by VLAN.create",
            "release": "miami",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "You tried to create a VLAN, but the tag you gave was invalid -- it must be between 0 and 4094.  The parameter echoes the VLAN tag you gave.",
            "name": "VLAN_TAG_INVALID"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "physical interface on which to create the VLAN interface",
            "name": "device",
            "type": "string"
          },
          {
            "doc": "network to which this interface should be connected",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "physical machine to which this PIF is connected",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "VLAN tag for the new interface",
            "name": "VLAN",
            "type": "int"
          }
        ],
        "result": [
          "PIF ref",
          "The reference of the created PIF object"
        ],
        "description": "Create a VLAN interface from an existing physical interface. This call is deprecated: use VLAN.create instead",
        "name": "create_VLAN"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the disallow_unplug field of the given PIF.",
        "name": "set_disallow_unplug"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given PIF.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given PIF.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given PIF.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the capabilities field of the given PIF.",
        "name": "get_capabilities"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the properties field of the given PIF.",
        "name": "get_properties"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the managed field of the given PIF.",
        "name": "get_managed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "enum primary_address_type",
          "value of the field"
        ],
        "description": "Get the primary_address_type field of the given PIF.",
        "name": "get_primary_address_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the ipv6_gateway field of the given PIF.",
        "name": "get_ipv6_gateway"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the IPv6 field of the given PIF.",
        "name": "get_IPv6"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "enum ipv6_configuration_mode",
          "value of the field"
        ],
        "description": "Get the ipv6_configuration_mode field of the given PIF.",
        "name": "get_ipv6_configuration_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates to which tunnel this PIF provides transport",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "tunnel ref set",
          "value of the field"
        ],
        "description": "Get the tunnel_transport_PIF_of field of the given PIF.",
        "name": "get_tunnel_transport_PIF_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates to which tunnel this PIF gives access",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "tunnel ref set",
          "value of the field"
        ],
        "description": "Get the tunnel_access_PIF_of field of the given PIF.",
        "name": "get_tunnel_access_PIF_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the disallow_unplug field of the given PIF.",
        "name": "get_disallow_unplug"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given PIF.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates whether the control software is listening for connections on this interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the management field of the given PIF.",
        "name": "get_management"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates which VLANs this interface transmits tagged traffic to",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "VLAN ref set",
          "value of the field"
        ],
        "description": "Get the VLAN_slave_of field of the given PIF.",
        "name": "get_VLAN_slave_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates wich VLAN this interface receives untagged traffic from",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "VLAN ref",
          "value of the field"
        ],
        "description": "Get the VLAN_master_of field of the given PIF.",
        "name": "get_VLAN_master_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates this PIF represents the results of a bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "Bond ref set",
          "value of the field"
        ],
        "description": "Get the bond_master_of field of the given PIF.",
        "name": "get_bond_master_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Indicates which bond this interface is part of",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "Bond ref",
          "value of the field"
        ],
        "description": "Get the bond_slave_of field of the given PIF.",
        "name": "get_bond_slave_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "IP address of DNS servers to use",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the DNS field of the given PIF.",
        "name": "get_DNS"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "IP gateway",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the gateway field of the given PIF.",
        "name": "get_gateway"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "IP netmask",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the netmask field of the given PIF.",
        "name": "get_netmask"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "IP address",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the IP field of the given PIF.",
        "name": "get_IP"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Sets if and how this interface gets an IP address",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "enum ip_configuration_mode",
          "value of the field"
        ],
        "description": "Get the ip_configuration_mode field of the given PIF.",
        "name": "get_ip_configuration_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this interface is online",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the currently_attached field of the given PIF.",
        "name": "get_currently_attached"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this represents a physical network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the physical field of the given PIF.",
        "name": "get_physical"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with this PIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "PIF_metrics ref",
          "value of the field"
        ],
        "description": "Get the metrics field of the given PIF.",
        "name": "get_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VLAN tag for all traffic passing through this interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the VLAN field of the given PIF.",
        "name": "get_VLAN"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the MTU field of the given PIF.",
        "name": "get_MTU"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "ethernet MAC address of physical interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the MAC field of the given PIF.",
        "name": "get_MAC"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "physical machine to which this pif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given PIF.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "virtual network to which this pif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "network ref",
          "value of the field"
        ],
        "description": "Get the network field of the given PIF.",
        "name": "get_network"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "machine-readable name of the interface (e.g. eth0)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device field of the given PIF.",
        "name": "get_device"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given PIF.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "PIF ref",
          "reference to the object"
        ],
        "description": "Get a reference to the PIF instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF ref"
          }
        ],
        "result": [
          "PIF record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given PIF.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "machine-readable name of the interface (e.g. eth0)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "machine-readable name of the interface (e.g. eth0)",
        "name": "device"
      },
      {
        "lifecycle": [
          {
            "description": "virtual network to which this pif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "network ref",
        "description": "virtual network to which this pif is connected",
        "name": "network"
      },
      {
        "lifecycle": [
          {
            "description": "physical machine to which this pif is connected",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "physical machine to which this pif is connected",
        "name": "host"
      },
      {
        "lifecycle": [
          {
            "description": "ethernet MAC address of physical interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "ethernet MAC address of physical interface",
        "name": "MAC"
      },
      {
        "lifecycle": [
          {
            "description": "MTU in octets",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "MTU in octets",
        "name": "MTU"
      },
      {
        "lifecycle": [
          {
            "description": "VLAN tag for all traffic passing through this interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "VLAN tag for all traffic passing through this interface",
        "name": "VLAN"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with this PIF",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF_metrics ref",
        "description": "metrics associated with this PIF",
        "name": "metrics"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if this represents a physical network interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this represents a physical network interface",
        "name": "physical"
      },
      {
        "default": "true",
        "lifecycle": [
          {
            "description": "true if this interface is online",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this interface is online",
        "name": "currently_attached"
      },
      {
        "default": "None",
        "lifecycle": [
          {
            "description": "Sets if and how this interface gets an IP address",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum ip_configuration_mode",
        "description": "Sets if and how this interface gets an IP address",
        "name": "ip_configuration_mode"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "IP address",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "IP address",
        "name": "IP"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "IP netmask",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "IP netmask",
        "name": "netmask"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "IP gateway",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "IP gateway",
        "name": "gateway"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "IP address of DNS servers to use",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "IP address of DNS servers to use",
        "name": "DNS"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Indicates which bond this interface is part of",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "Bond ref",
        "description": "Indicates which bond this interface is part of",
        "name": "bond_slave_of"
      },
      {
        "lifecycle": [
          {
            "description": "Indicates this PIF represents the results of a bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "Bond ref set",
        "description": "Indicates this PIF represents the results of a bond",
        "name": "bond_master_of"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Indicates wich VLAN this interface receives untagged traffic from",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VLAN ref",
        "description": "Indicates wich VLAN this interface receives untagged traffic from",
        "name": "VLAN_master_of"
      },
      {
        "lifecycle": [
          {
            "description": "Indicates which VLANs this interface transmits tagged traffic to",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VLAN ref set",
        "description": "Indicates which VLANs this interface transmits tagged traffic to",
        "name": "VLAN_slave_of"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "Indicates whether the control software is listening for connections on this interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Indicates whether the control software is listening for connections on this interface",
        "name": "management"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)",
        "name": "disallow_unplug"
      },
      {
        "lifecycle": [
          {
            "description": "Indicates to which tunnel this PIF gives access",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "tunnel ref set",
        "description": "Indicates to which tunnel this PIF gives access",
        "name": "tunnel_access_PIF_of"
      },
      {
        "lifecycle": [
          {
            "description": "Indicates to which tunnel this PIF provides transport",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "tunnel ref set",
        "description": "Indicates to which tunnel this PIF provides transport",
        "name": "tunnel_transport_PIF_of"
      },
      {
        "default": "None",
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum ipv6_configuration_mode",
        "description": "Sets if and how this interface gets an IPv6 address",
        "name": "ipv6_configuration_mode"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "IPv6 address",
        "name": "IPv6"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "IPv6 gateway",
        "name": "ipv6_gateway"
      },
      {
        "default": "IPv4",
        "lifecycle": [
          {
            "description": "",
            "release": "tampa",
            "transition": "prototyped"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum primary_address_type",
        "description": "Which protocol should define the primary address of this interface",
        "name": "primary_address_type"
      },
      {
        "default": "true",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Indicates whether the interface is managed by xapi. If it is not, then xapi will not configure the interface, the commands PIF.plug\/unplug\/reconfigure_ip(v6) can not be used, nor can the interface be bonded or have VLANs based on top through xapi.",
        "name": "managed"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "creedence",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Additional configuration properties for the interface.",
        "name": "properties"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "Additional capabilities on the interface.",
        "name": "capabilities"
      }
    ],
    "description": "A physical network interface (note separate VLANs are represented as several PIFs)",
    "name": "PIF"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "The metrics associated with a physical network interface",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a physical network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(PIF_metrics ref -> PIF_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of PIF_metrics references to PIF_metrics records for all PIF_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a physical network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "PIF_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the PIF_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given PIF_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given PIF_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given PIF_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given PIF_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given PIF_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "PCI bus path of the pif (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the pci_bus_path field of the given PIF_metrics.",
        "name": "get_pci_bus_path"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Full duplex capability of the link (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the duplex field of the given PIF_metrics.",
        "name": "get_duplex"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Speed of the link (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the speed field of the given PIF_metrics.",
        "name": "get_speed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Report device name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device_name field of the given PIF_metrics.",
        "name": "get_device_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Report device ID",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device_id field of the given PIF_metrics.",
        "name": "get_device_id"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Report vendor name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor_name field of the given PIF_metrics.",
        "name": "get_vendor_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Report vendor ID",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor_id field of the given PIF_metrics.",
        "name": "get_vendor_id"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Report if the PIF got a carrier or not",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the carrier field of the given PIF_metrics.",
        "name": "get_carrier"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/write_kbs field of the given PIF_metrics.",
        "name": "get_io_write_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/read_kbs field of the given PIF_metrics.",
        "name": "get_io_read_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given PIF_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a physical network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "PIF_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the PIF_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a physical network interface",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PIF_metrics ref"
          }
        ],
        "result": [
          "PIF_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given PIF_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Read bandwidth (KiB\/s)",
        "name": "io_read_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Write bandwidth (KiB\/s)",
        "name": "io_write_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Report if the PIF got a carrier or not",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Report if the PIF got a carrier or not",
        "name": "carrier"
      },
      {
        "lifecycle": [
          {
            "description": "Report vendor ID",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Report vendor ID",
        "name": "vendor_id"
      },
      {
        "lifecycle": [
          {
            "description": "Report vendor name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Report vendor name",
        "name": "vendor_name"
      },
      {
        "lifecycle": [
          {
            "description": "Report device ID",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Report device ID",
        "name": "device_id"
      },
      {
        "lifecycle": [
          {
            "description": "Report device name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Report device name",
        "name": "device_name"
      },
      {
        "lifecycle": [
          {
            "description": "Speed of the link (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Speed of the link (if available)",
        "name": "speed"
      },
      {
        "lifecycle": [
          {
            "description": "Full duplex capability of the link (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Full duplex capability of the link (if available)",
        "name": "duplex"
      },
      {
        "lifecycle": [
          {
            "description": "PCI bus path of the pif (if available)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "PCI bus path of the pif (if available)",
        "name": "pci_bus_path"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The metrics associated with a physical network interface",
    "name": "PIF_metrics"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "",
        "release": "miami",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Source-level balancing",
            "name": "balance-slb"
          },
          {
            "doc": "Active\/passive bonding: only one NIC is carrying traffic",
            "name": "active-backup"
          },
          {
            "doc": "Link aggregation control protocol",
            "name": "lacp"
          }
        ],
        "name": "bond_mode"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(Bond ref -> Bond record) map",
          "records of all objects"
        ],
        "description": "Return a map of Bond references to Bond records for all Bonds known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "Bond ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the Bonds known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of a property of the bond",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The bond",
            "name": "self",
            "type": "Bond ref"
          },
          {
            "doc": "The property name",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The property value",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of a property of the bond",
        "name": "set_property"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The bond",
            "name": "self",
            "type": "Bond ref"
          },
          {
            "doc": "The new bond mode",
            "name": "value",
            "type": "enum bond_mode"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Change the bond mode",
        "name": "set_mode"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy an interface bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Bond to destroy",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy an interface bond",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create an interface bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "Network to add the bonded PIF to",
            "name": "network",
            "type": "network ref"
          },
          {
            "doc": "PIFs to add to this bond",
            "name": "members",
            "type": "PIF ref set"
          },
          {
            "doc": "The MAC address to use on the bond itself. If this parameter is the empty string then the bond will inherit its MAC address from the primary slave.",
            "name": "MAC",
            "type": "string"
          },
          {
            "doc": "Bonding mode to use for the new bond",
            "name": "mode",
            "type": "enum bond_mode"
          },
          {
            "doc": "Additional configuration parameters specific to the bond mode",
            "name": "properties",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "Bond ref",
          "The reference of the created Bond object"
        ],
        "description": "Create an interface bond",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given Bond.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given Bond.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given Bond.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Number of links up in this bond",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the links_up field of the given Bond.",
        "name": "get_links_up"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration properties specific to the bond mode.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the properties field of the given Bond.",
        "name": "get_properties"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "enum bond_mode",
          "value of the field"
        ],
        "description": "Get the mode field of the given Bond.",
        "name": "get_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the primary_slave field of the given Bond.",
        "name": "get_primary_slave"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given Bond.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The interfaces which are part of this bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "PIF ref set",
          "value of the field"
        ],
        "description": "Get the slaves field of the given Bond.",
        "name": "get_slaves"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The bonded interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the master field of the given Bond.",
        "name": "get_master"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given Bond.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "Bond ref",
          "reference to the object"
        ],
        "description": "Get a reference to the Bond instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "Bond ref"
          }
        ],
        "result": [
          "Bond record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given Bond.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "The bonded interface",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "The bonded interface",
        "name": "master"
      },
      {
        "lifecycle": [
          {
            "description": "The interfaces which are part of this bond",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref set",
        "description": "The interfaces which are part of this bond",
        "name": "slaves"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "The PIF of which the IP configuration and MAC were copied to the bond, and which will receive all configuration\/VLANs\/VIFs on the bond if the bond is destroyed",
        "name": "primary_slave"
      },
      {
        "default": "balance-slb",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum bond_mode",
        "description": "The algorithm used to distribute traffic among the bonded NICs",
        "name": "mode"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Additional configuration properties specific to the bond mode.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Additional configuration properties specific to the bond mode.",
        "name": "properties"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "Number of links up in this bond",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Number of links up in this bond",
        "name": "links_up"
      }
    ],
    "description": "",
    "name": "Bond"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "A VLAN mux\/demux",
        "release": "miami",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VLAN mux\/demux",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VLAN ref -> VLAN record) map",
          "records of all objects"
        ],
        "description": "Return a map of VLAN references to VLAN records for all VLANs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VLAN mux\/demux",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VLAN ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VLANs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy a VLAN mux\/demuxer",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "VLAN mux\/demuxer to destroy",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy a VLAN mux\/demuxer",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a VLAN mux\/demuxer",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "PIF which receives the tagged traffic",
            "name": "tagged_PIF",
            "type": "PIF ref"
          },
          {
            "doc": "VLAN tag to use",
            "name": "tag",
            "type": "int"
          },
          {
            "doc": "Network to receive the untagged traffic",
            "name": "network",
            "type": "network ref"
          }
        ],
        "result": [
          "VLAN ref",
          "The reference of the created VLAN object"
        ],
        "description": "Create a VLAN mux\/demuxer",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VLAN.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VLAN.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VLAN.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VLAN.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VLAN tag in use",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the tag field of the given VLAN.",
        "name": "get_tag"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "interface on which traffic is untagged",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the untagged_PIF field of the given VLAN.",
        "name": "get_untagged_PIF"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "interface on which traffic is tagged",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the tagged_PIF field of the given VLAN.",
        "name": "get_tagged_PIF"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VLAN.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VLAN mux\/demux",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VLAN ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VLAN instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VLAN mux\/demux",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VLAN ref"
          }
        ],
        "result": [
          "VLAN record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VLAN.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "interface on which traffic is tagged",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "interface on which traffic is tagged",
        "name": "tagged_PIF"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "interface on which traffic is untagged",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "interface on which traffic is untagged",
        "name": "untagged_PIF"
      },
      {
        "default": "-1",
        "lifecycle": [
          {
            "description": "VLAN tag in use",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "VLAN tag in use",
        "name": "tag"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A VLAN mux\/demux",
    "name": "VLAN"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A storage manager plugin",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage manager plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(SM ref -> SM record) map",
          "records of all objects"
        ],
        "description": "Return a map of SM references to SM records for all SMs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage manager plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "SM ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the SMs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given SM.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given SM.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given SM.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The storage plugin requires that one of these cluster stacks is configured and running.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the required_cluster_stack field of the given SM.",
        "name": "get_required_cluster_stack"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "filename of the storage driver",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the driver_filename field of the given SM.",
        "name": "get_driver_filename"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given SM.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "capabilities of the SM plugin, with capability version numbers",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "(string -> int) map",
          "value of the field"
        ],
        "description": "Get the features field of the given SM.",
        "name": "get_features"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Use SM.features instead",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the capabilities field of the given SM.",
        "name": "get_capabilities"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "names and descriptions of device config keys",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the configuration field of the given SM.",
        "name": "get_configuration"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Minimum SM API version required on the server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the required_api_version field of the given SM.",
        "name": "get_required_api_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Version of the plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the version field of the given SM.",
        "name": "get_version"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Entity which owns the copyright of this plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the copyright field of the given SM.",
        "name": "get_copyright"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Vendor who created this plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor field of the given SM.",
        "name": "get_vendor"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SR.type",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the type field of the given SM.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given SM.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given SM.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given SM.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage manager plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "SM ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the SM instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage manager plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "SM ref",
          "reference to the object"
        ],
        "description": "Get a reference to the SM instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage manager plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SM ref"
          }
        ],
        "result": [
          "SM record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given SM.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "SR.type",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "SR.type",
        "name": "type"
      },
      {
        "lifecycle": [
          {
            "description": "Vendor who created this plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Vendor who created this plugin",
        "name": "vendor"
      },
      {
        "lifecycle": [
          {
            "description": "Entity which owns the copyright of this plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Entity which owns the copyright of this plugin",
        "name": "copyright"
      },
      {
        "lifecycle": [
          {
            "description": "Version of the plugin",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Version of the plugin",
        "name": "version"
      },
      {
        "lifecycle": [
          {
            "description": "Minimum SM API version required on the server",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Minimum SM API version required on the server",
        "name": "required_api_version"
      },
      {
        "lifecycle": [
          {
            "description": "names and descriptions of device config keys",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "names and descriptions of device config keys",
        "name": "configuration"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Use SM.features instead",
            "release": "clearwater",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "capabilities of the SM plugin",
        "name": "capabilities"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "capabilities of the SM plugin, with capability version numbers",
            "release": "clearwater",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> int) map",
        "description": "capabilities of the SM plugin, with capability version numbers",
        "name": "features"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "filename of the storage driver",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "filename of the storage driver",
        "name": "driver_filename"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "The storage plugin requires that one of these cluster stacks is configured and running.",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "The storage plugin requires that one of these cluster stacks is configured and running.",
        "name": "required_cluster_stack"
      }
    ],
    "description": "A storage manager plugin",
    "name": "SM"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A storage repository",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Scanning backends for new or deleted VDIs",
            "name": "scan"
          },
          {
            "doc": "Destroying the SR",
            "name": "destroy"
          },
          {
            "doc": "Forgetting about SR",
            "name": "forget"
          },
          {
            "doc": "Plugging a PBD into this SR",
            "name": "plug"
          },
          {
            "doc": "Unplugging a PBD from this SR",
            "name": "unplug"
          },
          {
            "doc": "Refresh the fields on the SR",
            "name": "update"
          },
          {
            "doc": "Creating a new VDI",
            "name": "vdi_create"
          },
          {
            "doc": "Introducing a new VDI",
            "name": "vdi_introduce"
          },
          {
            "doc": "Destroying a VDI",
            "name": "vdi_destroy"
          },
          {
            "doc": "Resizing a VDI",
            "name": "vdi_resize"
          },
          {
            "doc": "Cloneing a VDI",
            "name": "vdi_clone"
          },
          {
            "doc": "Snapshotting a VDI",
            "name": "vdi_snapshot"
          },
          {
            "doc": "Creating a PBD for this SR",
            "name": "pbd_create"
          },
          {
            "doc": "Destroying one of this SR's PBDs",
            "name": "pbd_destroy"
          }
        ],
        "name": "storage_operations"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(SR ref -> SR record) map",
          "records of all objects"
        ],
        "description": "Return a map of SR references to SR records for all SRs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "SR ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the SRs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to which metadata should be no longer replicated",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "disable_database_replication"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to which metadata should be replicated",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "enable_database_replication"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to query",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Returns successfully if the given SR supports database replication. Otherwise returns an error to explain why not.",
        "name": "assert_supports_database_replication"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to query",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not",
        "name": "assert_can_host_ha_statefile"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the SR's physical_utilisation field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to modify",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "The new value of the SR's physical utilisation",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the SR's physical_utilisation field",
        "name": "set_physical_utilisation"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the SR's virtual_allocation field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to modify",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "The new value of the SR's virtual_allocation",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the SR's virtual_allocation field",
        "name": "set_virtual_allocation"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the SR's physical_size field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to modify",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "The new value of the SR's physical_size",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the SR's physical_size field",
        "name": "set_physical_size"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a named binary blob of data that is associated with this SR",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "The name associated with the blob",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The mime type for the data. Empty string translates to application\/octet-stream",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference of the blob, needed for populating its data"
        ],
        "description": "Create a placeholder for a named binary blob of data that is associated with this SR",
        "name": "create_new_blob"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the name description of the SR",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "The name description for the SR",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name description of the SR",
        "name": "set_name_description"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the name label of the SR",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "The name label for the SR",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name label of the SR",
        "name": "set_name_label"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the shared flag on the SR",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "True if the SR is shared",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the shared flag on the SR",
        "name": "set_shared"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to create\/make the SR on",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The device config string that will be passed to backend SR driver",
            "name": "device_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The type of the SR; used to specify the SR backend driver to use",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "Storage backend specific configuration options",
            "name": "sm_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "string",
          "An XML fragment containing the scan results.  These are specific to the scan being performed, and the backend."
        ],
        "description": "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config.",
        "name": "probe"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Refreshes the list of VDIs associated with an SR",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to scan",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Refreshes the list of VDIs associated with an SR",
        "name": "scan"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Return a set of all the SR types supported by the system",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "string set",
          "the supported SR types"
        ],
        "description": "Return a set of all the SR types supported by the system",
        "name": "get_supported_types"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Refresh the fields on the SR object",
            "release": "symc",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR whose fields should be refreshed",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Refresh the fields on the SR object",
        "name": "update"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removing specified SR-record from database, without attempting to remove SR from disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The SR is still connected to a host via a PBD. It cannot be destroyed or forgotten.",
            "name": "SR_HAS_PBD"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to destroy",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removing specified SR-record from database, without attempting to remove SR from disk",
        "name": "forget"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The SR is still connected to a host via a PBD. It cannot be destroyed or forgotten.",
            "name": "SR_HAS_PBD"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The SR to destroy",
            "name": "sr",
            "type": "SR ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy specified SR, removing SR-record from database and remove SR from disk. (In order to affect this operation the appropriate device_config is read from the specified SR's PBD on current host)",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new Storage Repository on disk",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Use SR.create instead",
            "release": "miami",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to create\/make the SR on",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The device config string that will be passed to backend SR driver",
            "name": "device_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The physical size of the new storage repository",
            "name": "physical_size",
            "type": "int"
          },
          {
            "doc": "The name of the new storage repository",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "The description of the new storage repository",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "The type of the SR; used to specify the SR backend driver to use",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "The type of the new SRs content, if required (e.g. ISOs)",
            "name": "content_type",
            "type": "string"
          },
          {
            "doc": "Storage backend specific configuration options",
            "name": "sm_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "string",
          "The uuid of the newly created Storage Repository."
        ],
        "description": "Create a new Storage Repository on disk. This call is deprecated: use SR.create instead.",
        "name": "make"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Introduce a new Storage Repository into the managed system",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The uuid assigned to the introduced SR",
            "name": "uuid",
            "type": "string"
          },
          {
            "doc": "The name of the new storage repository",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "The description of the new storage repository",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "The type of the SR; used to specify the SR backend driver to use",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "The type of the new SRs content, if required (e.g. ISOs)",
            "name": "content_type",
            "type": "string"
          },
          {
            "doc": "True if the SR (is capable of) being shared by multiple hosts",
            "name": "shared",
            "type": "bool"
          },
          {
            "doc": "Storage backend specific configuration options",
            "name": "sm_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "SR ref",
          "The reference of the newly introduced Storage Repository."
        ],
        "description": "Introduce a new Storage Repository into the managed system",
        "name": "introduce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The SR could not be connected because the driver was not recognised.",
            "name": "SR_UNKNOWN_DRIVER"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The host to create\/make the SR on",
            "name": "host",
            "type": "host ref"
          },
          {
            "doc": "The device config string that will be passed to backend SR driver",
            "name": "device_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "The physical size of the new storage repository",
            "name": "physical_size",
            "type": "int"
          },
          {
            "doc": "The name of the new storage repository",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "The description of the new storage repository",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "The type of the SR; used to specify the SR backend driver to use",
            "name": "type",
            "type": "string"
          },
          {
            "doc": "The type of the new SRs content, if required (e.g. ISOs)",
            "name": "content_type",
            "type": "string"
          },
          {
            "doc": "True if the SR (is capable of) being shared by multiple hosts",
            "name": "shared",
            "type": "bool"
          },
          {
            "doc": "Storage backend specific configuration options",
            "name": "sm_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "SR ref",
          "The reference of the newly created Storage Repository."
        ],
        "description": "Create a new Storage Repository and introduce it into the managed system, creating both SR record and PBD record to attach it to current host (with specified device_config parameters)",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the sm_config field of the given SR.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the sm_config field of the given SR.",
        "name": "add_to_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the sm_config field of the given SR.",
        "name": "set_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given SR.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given SR.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given SR.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given SR.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given SR.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given SR.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The disaster recovery task which introduced this SR",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "DR_task ref",
          "value of the field"
        ],
        "description": "Get the introduced_by field of the given SR.",
        "name": "get_introduced_by"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if this SR is assigned to be the local cache for its host",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the local_cache_enabled field of the given SR.",
        "name": "get_local_cache_enabled"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Binary blobs associated with this SR",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "(string -> blob ref) map",
          "value of the field"
        ],
        "description": "Get the blobs field of the given SR.",
        "name": "get_blobs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the sm_config field of the given SR.",
        "name": "get_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given SR.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given SR.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this SR is (capable of being) shared between multiple hosts",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the shared field of the given SR.",
        "name": "get_shared"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the type of the SR's content, if required (e.g. ISOs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the content_type field of the given SR.",
        "name": "get_content_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "type of the storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the type field of the given SR.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "total physical size of the repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the physical_size field of the given SR.",
        "name": "get_physical_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the physical_utilisation field of the given SR.",
        "name": "get_physical_utilisation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the virtual_allocation field of the given SR.",
        "name": "get_virtual_allocation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "describes how particular hosts can see this storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "PBD ref set",
          "value of the field"
        ],
        "description": "Get the PBDs field of the given SR.",
        "name": "get_PBDs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "all virtual disks known to this storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "VDI ref set",
          "value of the field"
        ],
        "description": "Get the VDIs field of the given SR.",
        "name": "get_VDIs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "(string -> enum storage_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given SR.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "enum storage_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given SR.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given SR.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given SR.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given SR.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "SR ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the SR instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "SR ref",
          "reference to the object"
        ],
        "description": "Get a reference to the SR instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "SR ref"
          }
        ],
        "result": [
          "SR record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given SR.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum storage_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum storage_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "all virtual disks known to this storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref set",
        "description": "all virtual disks known to this storage repository",
        "name": "VDIs"
      },
      {
        "lifecycle": [
          {
            "description": "describes how particular hosts can see this storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PBD ref set",
        "description": "describes how particular hosts can see this storage repository",
        "name": "PBDs"
      },
      {
        "lifecycle": [
          {
            "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "sum of virtual_sizes of all VDIs in this storage repository (in bytes)",
        "name": "virtual_allocation"
      },
      {
        "lifecycle": [
          {
            "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "physical space currently utilised on this storage repository (in bytes). Note that for sparse disk formats, physical_utilisation may be less than virtual_allocation",
        "name": "physical_utilisation"
      },
      {
        "lifecycle": [
          {
            "description": "total physical size of the repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "total physical size of the repository (in bytes)",
        "name": "physical_size"
      },
      {
        "lifecycle": [
          {
            "description": "type of the storage repository",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "type of the storage repository",
        "name": "type"
      },
      {
        "lifecycle": [
          {
            "description": "the type of the SR's content, if required (e.g. ISOs)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the type of the SR's content, if required (e.g. ISOs)",
        "name": "content_type"
      },
      {
        "lifecycle": [
          {
            "description": "true if this SR is (capable of being) shared between multiple hosts",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this SR is (capable of being) shared between multiple hosts",
        "name": "shared"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "SM dependent data",
        "name": "sm_config"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Binary blobs associated with this SR",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> blob ref) map",
        "description": "Binary blobs associated with this SR",
        "name": "blobs"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "True if this SR is assigned to be the local cache for its host",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "True if this SR is assigned to be the local cache for its host",
        "name": "local_cache_enabled"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "The disaster recovery task which introduced this SR",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "DR_task ref",
        "description": "The disaster recovery task which introduced this SR",
        "name": "introduced_by"
      }
    ],
    "description": "A storage repository",
    "name": "SR"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A virtual disk image",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Scanning backends for new or deleted VDIs",
            "name": "scan"
          },
          {
            "doc": "Cloning the VDI",
            "name": "clone"
          },
          {
            "doc": "Copying the VDI",
            "name": "copy"
          },
          {
            "doc": "Resizing the VDI",
            "name": "resize"
          },
          {
            "doc": "Resizing the VDI which may or may not be online",
            "name": "resize_online"
          },
          {
            "doc": "Snapshotting the VDI",
            "name": "snapshot"
          },
          {
            "doc": "Destroying the VDI",
            "name": "destroy"
          },
          {
            "doc": "Forget about the VDI",
            "name": "forget"
          },
          {
            "doc": "Refreshing the fields of the VDI",
            "name": "update"
          },
          {
            "doc": "Forcibly unlocking the VDI",
            "name": "force_unlock"
          },
          {
            "doc": "Generating static configuration",
            "name": "generate_config"
          },
          {
            "doc": "Operations on this VDI are temporarily blocked",
            "name": "blocked"
          }
        ],
        "name": "vdi_operations"
      },
      {
        "values": [
          {
            "doc": "a disk that may be replaced on upgrade",
            "name": "system"
          },
          {
            "doc": "a disk that is always preserved on upgrade",
            "name": "user"
          },
          {
            "doc": "a disk that may be reformatted on upgrade",
            "name": "ephemeral"
          },
          {
            "doc": "a disk that stores a suspend image",
            "name": "suspend"
          },
          {
            "doc": "a disk that stores VM crashdump information",
            "name": "crashdump"
          },
          {
            "doc": "a disk used for HA storage heartbeating",
            "name": "ha_statefile"
          },
          {
            "doc": "a disk used for HA Pool metadata",
            "name": "metadata"
          },
          {
            "doc": "a disk used for a general metadata redo-log",
            "name": "redo_log"
          },
          {
            "doc": "a disk that stores SR-level RRDs",
            "name": "rrd"
          }
        ],
        "name": "vdi_type"
      },
      {
        "values": [
          {
            "doc": "When a VM containing this VDI is started, the contents of the VDI are reset to the state they were in when this flag was last set.",
            "name": "reset"
          },
          {
            "doc": "Standard behaviour.",
            "name": "persist"
          }
        ],
        "name": "on_boot"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VDI ref -> VDI record) map",
          "records of all objects"
        ],
        "description": "Return a map of VDI references to VDI records for all VDIs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VDI ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VDIs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest.",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to migrate",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "The destination SR",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "Other parameters",
            "name": "options",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "VDI ref",
          "The new reference of the migrated VDI."
        ],
        "description": "Migrate a VDI, which may be attached to a running guest, to a different SR. The destination SR must be visible to the guest.",
        "name": "pool_migrate"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Check the VDI cache for the pool UUID of the database on this VDI.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The metadata VDI to look up in the cache.",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string",
          "The cached pool UUID of the database on the VDI."
        ],
        "description": "Check the VDI cache for the pool UUID of the database on this VDI.",
        "name": "read_database_pool_uuid"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI which contains the database to open",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "session ref",
          "A session which can be used to query the database"
        ],
        "description": "Load the metadata found on the supplied VDI and return a session reference which can be used in XenAPI calls to query its contents.",
        "name": "open_database"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching.",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the allow_caching parameter. This value can only be changed when the VDI is not attached to a running VM. The caching behaviour is only affected by this flag for VHD-based VDIs that have one parent and no child VHDs. Moreover, caching only takes place when the host running the VM containing this VDI has a nominated SR for local caching.",
        "name": "set_allow_caching"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM.",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The value to set",
            "name": "value",
            "type": "enum on_boot"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value of the on_boot parameter. This value can only be changed when the VDI is not attached to a running VM.",
        "name": "set_on_boot"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the name description of the VDI. This can only happen when its SR is currently attached.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The name description for the VDI",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name description of the VDI. This can only happen when its SR is currently attached.",
        "name": "set_name_description"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Set the name label of the VDI. This can only happen when then its SR is currently attached.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The name lable for the VDI",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name label of the VDI. This can only happen when then its SR is currently attached.",
        "name": "set_name_label"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Records the pool whose metadata is contained by this VDI.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The pool whose metadata is contained by this VDI",
            "name": "value",
            "type": "pool ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Records the pool whose metadata is contained by this VDI.",
        "name": "set_metadata_of_pool"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the snapshot time of this VDI.",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The snapshot time of this VDI.",
            "name": "value",
            "type": "datetime"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the snapshot time of this VDI.",
        "name": "set_snapshot_time"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI of which this VDI is a snapshot",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The VDI of which this VDI is a snapshot",
            "name": "value",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI of which this VDI is a snapshot",
        "name": "set_snapshot_of"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets whether this VDI is a snapshot",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value indicating whether this VDI is a snapshot",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets whether this VDI is a snapshot",
        "name": "set_is_a_snapshot"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's physical_utilisation field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's physical utilisation",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's physical_utilisation field",
        "name": "set_physical_utilisation"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's virtual_size field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's virtual size",
            "name": "value",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's virtual_size field",
        "name": "set_virtual_size"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's missing field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's missing field",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's missing field",
        "name": "set_missing"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's read_only field",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's read_only field",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's read_only field",
        "name": "set_read_only"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's sharable field",
            "release": "george",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's sharable field",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's sharable field",
        "name": "set_sharable"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes a VDI record from the database",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to forget about",
            "name": "vdi",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes a VDI record from the database",
        "name": "forget"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the VDI's managed field",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to modify",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "The new value of the VDI's managed field",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the VDI's managed field",
        "name": "set_managed"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Copies a VDI to an SR. There must be a host that can see both the source and destination SRs simultaneously",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "The copy can now be performed between any two SRs.",
            "release": "cowley",
            "transition": "extended"
          },
          {
            "description": "The copy can now be performed into a pre-created VDI. It is now possible to request copying only changed blocks from a base VDI",
            "release": "clearwater-felton",
            "transition": "extended"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "The operation required write access but this VDI is read-only",
            "name": "VDI_READONLY"
          },
          {
            "doc": "The VDI is too small. Please resize it to at least the minimum size.",
            "name": "VDI_TOO_SMALL"
          },
          {
            "doc": "The VDI is not stored using a sparse format. It is not possible to query and manipulate only the changed blocks (or 'block differences' or 'disk deltas') between two VDIs. Please select a VDI which uses a sparse-aware technology such as VHD.",
            "name": "VDI_NOT_SPARSE"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to copy",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "The destination SR (only required if the destination VDI is not specified",
            "name": "sr",
            "type": "SR ref"
          },
          {
            "doc": "The base VDI (only required if copying only changed blocks, by default all blocks will be copied)",
            "name": "base_vdi",
            "type": "VDI ref"
          },
          {
            "doc": "The destination VDI to copy blocks into (if omitted then a destination SR must be provided and a fresh VDI will be created)",
            "name": "into_vdi",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref",
          "The reference of the VDI where the blocks were written."
        ],
        "description": "Copy either a full VDI or the block differences between two VDIs into either a fresh VDI or an existing VDI.",
        "name": "copy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Ask the storage backend to refresh the fields in the VDI object",
            "release": "symc",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "The SR backend does not support the operation (check the SR's allowed operations)",
            "name": "SR_OPERATION_NOT_SUPPORTED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI whose stats (eg size) should be updated",
            "name": "vdi",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Ask the storage backend to refresh the fields in the VDI object",
        "name": "update"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Removes a VDI record from the database",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to forget about",
            "name": "vdi",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Removes a VDI record from the database",
        "name": "db_forget"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new VDI record in the database only",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The uuid of the disk to introduce",
            "name": "uuid",
            "type": "string"
          },
          {
            "doc": "The name of the disk record",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "The description of the disk record",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "The SR that the VDI is in",
            "name": "SR",
            "type": "SR ref"
          },
          {
            "doc": "The type of the VDI",
            "name": "type",
            "type": "enum vdi_type"
          },
          {
            "doc": "true if this disk may be shared",
            "name": "sharable",
            "type": "bool"
          },
          {
            "doc": "true if this disk may ONLY be mounted read-only",
            "name": "read_only",
            "type": "bool"
          },
          {
            "doc": "additional configuration",
            "name": "other_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "location information",
            "name": "location",
            "type": "string"
          },
          {
            "doc": "Data to insert into xenstore",
            "name": "xenstore_data",
            "type": "(string -> string) map"
          },
          {
            "doc": "Storage-specific config",
            "name": "sm_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "Storage-specific config",
            "name": "managed",
            "type": "bool"
          },
          {
            "doc": "Storage-specific config",
            "name": "virtual_size",
            "type": "int"
          },
          {
            "doc": "Storage-specific config",
            "name": "physical_utilisation",
            "type": "int"
          },
          {
            "doc": "Storage-specific config",
            "name": "metadata_of_pool",
            "type": "pool ref"
          },
          {
            "doc": "Storage-specific config",
            "name": "is_a_snapshot",
            "type": "bool"
          },
          {
            "doc": "Storage-specific config",
            "name": "snapshot_time",
            "type": "datetime"
          },
          {
            "doc": "Storage-specific config",
            "name": "snapshot_of",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref",
          "The ref of the newly created VDI record."
        ],
        "description": "Create a new VDI record in the database only",
        "name": "db_introduce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a new VDI record in the database only",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "The SR backend does not support the operation (check the SR's allowed operations)",
            "name": "SR_OPERATION_NOT_SUPPORTED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The uuid of the disk to introduce",
            "name": "uuid",
            "type": "string"
          },
          {
            "doc": "The name of the disk record",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "The description of the disk record",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "The SR that the VDI is in",
            "name": "SR",
            "type": "SR ref"
          },
          {
            "doc": "The type of the VDI",
            "name": "type",
            "type": "enum vdi_type"
          },
          {
            "doc": "true if this disk may be shared",
            "name": "sharable",
            "type": "bool"
          },
          {
            "doc": "true if this disk may ONLY be mounted read-only",
            "name": "read_only",
            "type": "bool"
          },
          {
            "doc": "additional configuration",
            "name": "other_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "location information",
            "name": "location",
            "type": "string"
          },
          {
            "doc": "Data to insert into xenstore",
            "name": "xenstore_data",
            "type": "(string -> string) map"
          },
          {
            "doc": "Storage-specific config",
            "name": "sm_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "Storage-specific config",
            "name": "managed",
            "type": "bool"
          },
          {
            "doc": "Storage-specific config",
            "name": "virtual_size",
            "type": "int"
          },
          {
            "doc": "Storage-specific config",
            "name": "physical_utilisation",
            "type": "int"
          },
          {
            "doc": "Storage-specific config",
            "name": "metadata_of_pool",
            "type": "pool ref"
          },
          {
            "doc": "Storage-specific config",
            "name": "is_a_snapshot",
            "type": "bool"
          },
          {
            "doc": "Storage-specific config",
            "name": "snapshot_time",
            "type": "datetime"
          },
          {
            "doc": "Storage-specific config",
            "name": "snapshot_of",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref",
          "The ref of the newly created VDI record."
        ],
        "description": "Create a new VDI record in the database only",
        "name": "introduce"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Resize the VDI which may or may not be attached to running guests.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to resize",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "The new size of the VDI",
            "name": "size",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Resize the VDI which may or may not be attached to running guests.",
        "name": "resize_online"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Resize the VDI.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to resize",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "The new size of the VDI",
            "name": "size",
            "type": "int"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Resize the VDI.",
        "name": "resize"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to clone",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "Optional parameters that are passed through to the backend driver in order to specify storage-type-specific clone options",
            "name": "driver_params",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "VDI ref",
          "The ID of the newly created VDI."
        ],
        "description": "Take an exact copy of the VDI and return a reference to the new disk. If any driver_params are specified then these are passed through to the storage-specific substrate driver that implements the clone operation. NB the clone lives in the same Storage Repository as its parent.",
        "name": "clone"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VDI to snapshot",
            "name": "vdi",
            "type": "VDI ref"
          },
          {
            "doc": "Optional parameters that can be passed through to backend driver in order to specify storage-type-specific snapshot options",
            "name": "driver_params",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "VDI ref",
          "The ID of the newly created VDI."
        ],
        "description": "Take a read-only snapshot of the VDI, returning a reference to the snapshot. If any driver_params are specified then these are passed through to the storage-specific substrate driver that takes the snapshot. NB the snapshot lives in the same Storage Repository as its parent.",
        "name": "snapshot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Value to remove",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given value from the tags field of the given VDI.  If the value is not in that Set, then do nothing.",
        "name": "remove_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "New value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given value to the tags field of the given VDI.  If the value is already in that Set, then do nothing.",
        "name": "add_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the tags field of the given VDI.",
        "name": "set_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the sm_config field of the given VDI.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the sm_config field of the given VDI.",
        "name": "add_to_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the sm_config field of the given VDI.",
        "name": "set_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the xenstore_data field of the given VDI.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the xenstore_data field of the given VDI.",
        "name": "add_to_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the xenstore_data field of the given VDI.",
        "name": "set_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VDI.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VDI.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VDI.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Whether this VDI contains the latest known accessible metadata for the pool",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the metadata_latest field of the given VDI.",
        "name": "get_metadata_latest"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The pool whose metadata is contained in this VDI",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "pool ref",
          "value of the field"
        ],
        "description": "Get the metadata_of_pool field of the given VDI.",
        "name": "get_metadata_of_pool"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The behaviour of this VDI on a VM boot",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "enum on_boot",
          "value of the field"
        ],
        "description": "Get the on_boot field of the given VDI.",
        "name": "get_on_boot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this VDI is to be cached in the local cache SR",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the allow_caching field of the given VDI.",
        "name": "get_allow_caching"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the tags field of the given VDI.",
        "name": "get_tags"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Date\/time when this snapshot was created.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the snapshot_time field of the given VDI.",
        "name": "get_snapshot_time"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "List pointing to all the VDIs snapshots.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref set",
          "value of the field"
        ],
        "description": "Get the snapshots field of the given VDI.",
        "name": "get_snapshots"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Ref pointing to the VDI this snapshot is of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the snapshot_of field of the given VDI.",
        "name": "get_snapshot_of"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this is a snapshot.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_a_snapshot field of the given VDI.",
        "name": "get_is_a_snapshot"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the sm_config field of the given VDI.",
        "name": "get_sm_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the xenstore_data field of the given VDI.",
        "name": "get_xenstore_data"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "References the parent disk, if this VDI is part of a chain",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the parent field of the given VDI.",
        "name": "get_parent"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if SR scan operation reported this VDI as not present on disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the missing field of the given VDI.",
        "name": "get_missing"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the managed field of the given VDI.",
        "name": "get_managed"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "location information",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the location field of the given VDI.",
        "name": "get_location"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this disk is locked at the storage level",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the storage_lock field of the given VDI.",
        "name": "get_storage_lock"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VDI.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this disk may ONLY be mounted read-only",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the read_only field of the given VDI.",
        "name": "get_read_only"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this disk may be shared",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the sharable field of the given VDI.",
        "name": "get_sharable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "type of the VDI",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "enum vdi_type",
          "value of the field"
        ],
        "description": "Get the type field of the given VDI.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the physical_utilisation field of the given VDI.",
        "name": "get_physical_utilisation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the virtual_size field of the given VDI.",
        "name": "get_virtual_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of crash dumps that refer to this disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "crashdump ref set",
          "value of the field"
        ],
        "description": "Get the crash_dumps field of the given VDI.",
        "name": "get_crash_dumps"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of vbds that refer to this disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VBD ref set",
          "value of the field"
        ],
        "description": "Get the VBDs field of the given VDI.",
        "name": "get_VBDs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "storage repository in which the VDI resides",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the SR field of the given VDI.",
        "name": "get_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "(string -> enum vdi_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given VDI.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "enum vdi_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given VDI.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given VDI.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given VDI.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VDI.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "VDI ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the VDI instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VDI instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VDI record"
          }
        ],
        "result": [
          "VDI ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VDI instance, and return its handle.\nThe constructor args are: name_label, name_description, SR*, virtual_size*, type*, sharable*, read_only*, other_config*, xenstore_data, sm_config, tags (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VDI ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VDI instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual disk image",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VDI ref"
          }
        ],
        "result": [
          "VDI record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VDI.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vdi_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum vdi_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "storage repository in which the VDI resides",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "SR ref",
        "description": "storage repository in which the VDI resides",
        "name": "SR"
      },
      {
        "lifecycle": [
          {
            "description": "list of vbds that refer to this disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VBD ref set",
        "description": "list of vbds that refer to this disk",
        "name": "VBDs"
      },
      {
        "lifecycle": [
          {
            "description": "list of crash dumps that refer to this disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "crashdump ref set",
        "description": "list of crash dumps that refer to this disk",
        "name": "crash_dumps"
      },
      {
        "lifecycle": [
          {
            "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "size of disk as presented to the guest (in bytes). Note that, depending on storage backend type, requested size may not be respected exactly",
        "name": "virtual_size"
      },
      {
        "lifecycle": [
          {
            "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "amount of physical space that the disk image is currently taking up on the storage repository (in bytes)",
        "name": "physical_utilisation"
      },
      {
        "lifecycle": [
          {
            "description": "type of the VDI",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vdi_type",
        "description": "type of the VDI",
        "name": "type"
      },
      {
        "lifecycle": [
          {
            "description": "true if this disk may be shared",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this disk may be shared",
        "name": "sharable"
      },
      {
        "lifecycle": [
          {
            "description": "true if this disk may ONLY be mounted read-only",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this disk may ONLY be mounted read-only",
        "name": "read_only"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "true if this disk is locked at the storage level",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this disk is locked at the storage level",
        "name": "storage_lock"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "location information",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "location information",
        "name": "location"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "",
        "name": "managed"
      },
      {
        "lifecycle": [
          {
            "description": "true if SR scan operation reported this VDI as not present on disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if SR scan operation reported this VDI as not present on disk",
        "name": "missing"
      },
      {
        "lifecycle": [
          {
            "description": "References the parent disk, if this VDI is part of a chain",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "References the parent disk, if this VDI is part of a chain",
        "name": "parent"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach.",
        "name": "xenstore_data"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "SM dependent data",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "SM dependent data",
        "name": "sm_config"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if this is a snapshot.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this is a snapshot.",
        "name": "is_a_snapshot"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "Ref pointing to the VDI this snapshot is of.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "Ref pointing to the VDI this snapshot is of.",
        "name": "snapshot_of"
      },
      {
        "lifecycle": [
          {
            "description": "List pointing to all the VDIs snapshots.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "qualifier": "read only",
        "type": "VDI ref set",
        "description": "List pointing to all the VDIs snapshots.",
        "name": "snapshots"
      },
      {
        "default": "19700101T00:00:00Z",
        "lifecycle": [
          {
            "description": "Date\/time when this snapshot was created.",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "snapshots",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Date\/time when this snapshot was created.",
        "name": "snapshot_time"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "user-specified tags for categorization purposes",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string set",
        "description": "user-specified tags for categorization purposes",
        "name": "tags"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "true if this VDI is to be cached in the local cache SR",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if this VDI is to be cached in the local cache SR",
        "name": "allow_caching"
      },
      {
        "default": "persist",
        "lifecycle": [
          {
            "description": "The behaviour of this VDI on a VM boot",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum on_boot",
        "description": "The behaviour of this VDI on a VM boot",
        "name": "on_boot"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "The pool whose metadata is contained in this VDI",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "pool ref",
        "description": "The pool whose metadata is contained in this VDI",
        "name": "metadata_of_pool"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "Whether this VDI contains the latest known accessible metadata for the pool",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Whether this VDI contains the latest known accessible metadata for the pool",
        "name": "metadata_latest"
      }
    ],
    "description": "A virtual disk image",
    "name": "VDI"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A virtual block device",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Attempting to attach this VBD to a VM",
            "name": "attach"
          },
          {
            "doc": "Attempting to eject the media from this VBD",
            "name": "eject"
          },
          {
            "doc": "Attempting to insert new media into this VBD",
            "name": "insert"
          },
          {
            "doc": "Attempting to hotplug this VBD",
            "name": "plug"
          },
          {
            "doc": "Attempting to hot unplug this VBD",
            "name": "unplug"
          },
          {
            "doc": "Attempting to forcibly unplug this VBD",
            "name": "unplug_force"
          },
          {
            "doc": "Attempting to pause a block device backend",
            "name": "pause"
          },
          {
            "doc": "Attempting to unpause a block device backend",
            "name": "unpause"
          }
        ],
        "name": "vbd_operations"
      },
      {
        "values": [
          {
            "doc": "only read-only access will be allowed",
            "name": "RO"
          },
          {
            "doc": "read-write access will be allowed",
            "name": "RW"
          }
        ],
        "name": "vbd_mode"
      },
      {
        "values": [
          {
            "doc": "VBD will appear to guest as CD",
            "name": "CD"
          },
          {
            "doc": "VBD will appear to guest as disk",
            "name": "Disk"
          },
          {
            "doc": "VBD will appear as a floppy",
            "name": "Floppy"
          }
        ],
        "name": "vbd_type"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VBD ref -> VBD record) map",
          "records of all objects"
        ],
        "description": "Return a map of VBD references to VBD records for all VBDs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VBD ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VBDs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VBD to query",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Throws an error if this VBD could not be attached to this VM if the VM were running. Intended for debugging.",
        "name": "assert_attachable"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Forcibly unplug the specified VBD",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VBD to forcibly unplug",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Forcibly unplug the specified VBD",
        "name": "unplug_force"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [
          {
            "doc": "The VM rejected the attempt to detach the device.",
            "name": "DEVICE_DETACH_REJECTED"
          },
          {
            "doc": "The device is not currently attached",
            "name": "DEVICE_ALREADY_DETACHED"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VBD to hot-unplug",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Hot-unplug the specified VBD, dynamically unattaching it from the running VM",
        "name": "unplug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Hotplug the specified VBD, dynamically attaching it to the running VM",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The VBD to hotplug",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Hotplug the specified VBD, dynamically attaching it to the running VM",
        "name": "plug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Insert new media into the device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "Media could not be ejected because it is not removable",
            "name": "VBD_NOT_REMOVABLE_MEDIA"
          },
          {
            "doc": "Operation could not be performed because the drive is not empty",
            "name": "VBD_NOT_EMPTY"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vbd representing the CDROM-like device",
            "name": "vbd",
            "type": "VBD ref"
          },
          {
            "doc": "The new VDI to 'insert'",
            "name": "vdi",
            "type": "VDI ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Insert new media into the device",
        "name": "insert"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Remove the media from the device and leave it empty",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator"
        ],
        "errors": [
          {
            "doc": "Media could not be ejected because it is not removable",
            "name": "VBD_NOT_REMOVABLE_MEDIA"
          },
          {
            "doc": "Operation could not be performed because the drive is empty",
            "name": "VBD_IS_EMPTY"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vbd representing the CDROM-like device",
            "name": "vbd",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the media from the device and leave it empty",
        "name": "eject"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the qos\/algorithm_params field of the given VBD.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the qos\/algorithm_params field of the given VBD.",
        "name": "add_to_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the qos\/algorithm_params field of the given VBD.",
        "name": "set_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the qos\/algorithm_type field of the given VBD.",
        "name": "set_qos_algorithm_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VBD.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VBD.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VBD.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this VBD will support hot-unplug",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the unpluggable field of the given VBD.",
        "name": "set_unpluggable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "how the VBD will appear to the guest (e.g. disk or CD)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum vbd_type"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the type field of the given VBD.",
        "name": "set_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the mode the VBD should be mounted with",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum vbd_mode"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the mode field of the given VBD.",
        "name": "set_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this VBD is bootable",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the bootable field of the given VBD.",
        "name": "set_bootable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-friendly device name e.g. 0,1,2,etc.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the userdevice field of the given VBD.",
        "name": "set_userdevice"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "metrics associated with this VBD",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "VBD_metrics ref",
          "value of the field"
        ],
        "description": "Get the metrics field of the given VBD.",
        "name": "get_metrics"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "supported QoS algorithms for this VBD",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the qos\/supported_algorithms field of the given VBD.",
        "name": "get_qos_supported_algorithms"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the qos\/algorithm_params field of the given VBD.",
        "name": "get_qos_algorithm_params"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the qos\/algorithm_type field of the given VBD.",
        "name": "get_qos_algorithm_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Device runtime properties",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the runtime_properties field of the given VBD.",
        "name": "get_runtime_properties"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "error\/success information associated with last attach-operation status (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the status_detail field of the given VBD.",
        "name": "get_status_detail"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "error\/success code associated with last attach-operation (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the status_code field of the given VBD.",
        "name": "get_status_code"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "is the device currently attached (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the currently_attached field of the given VBD.",
        "name": "get_currently_attached"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VBD.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "if true this represents an empty drive",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the empty field of the given VBD.",
        "name": "get_empty"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if a storage level lock was acquired",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the storage_lock field of the given VBD.",
        "name": "get_storage_lock"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this VBD will support hot-unplug",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the unpluggable field of the given VBD.",
        "name": "get_unpluggable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "how the VBD will appear to the guest (e.g. disk or CD)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "enum vbd_type",
          "value of the field"
        ],
        "description": "Get the type field of the given VBD.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the mode the VBD should be mounted with",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "enum vbd_mode",
          "value of the field"
        ],
        "description": "Get the mode field of the given VBD.",
        "name": "get_mode"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "true if this VBD is bootable",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the bootable field of the given VBD.",
        "name": "get_bootable"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "user-friendly device name e.g. 0,1,2,etc.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the userdevice field of the given VBD.",
        "name": "get_userdevice"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "device seen by the guest e.g. hda1",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device field of the given VBD.",
        "name": "get_device"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the virtual disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the VDI field of the given VBD.",
        "name": "get_VDI"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given VBD.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "(string -> enum vbd_operations) map",
          "value of the field"
        ],
        "description": "Get the current_operations field of the given VBD.",
        "name": "get_current_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "enum vbd_operations set",
          "value of the field"
        ],
        "description": "Get the allowed_operations field of the given VBD.",
        "name": "get_allowed_operations"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VBD.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VBD instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VBD record"
          }
        ],
        "result": [
          "VBD ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VBD instance, and return its handle.\nThe constructor args are: VM*, VDI*, userdevice*, bootable*, mode*, type*, unpluggable, empty*, other_config*, qos_algorithm_type*, qos_algorithm_params* (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VBD ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VBD instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD ref"
          }
        ],
        "result": [
          "VBD record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VBD.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vbd_operations set",
        "description": "list of the operations allowed in this state. This list is advisory only and the server state may have changed by the time this field is read by a client.",
        "name": "allowed_operations"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> enum vbd_operations) map",
        "description": "links each of the running tasks using this object (by reference) to a current_operation enum which describes the nature of the task.",
        "name": "current_operations"
      },
      {
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "the virtual machine",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "the virtual disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "the virtual disk",
        "name": "VDI"
      },
      {
        "lifecycle": [
          {
            "description": "device seen by the guest e.g. hda1",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "device seen by the guest e.g. hda1",
        "name": "device"
      },
      {
        "lifecycle": [
          {
            "description": "user-friendly device name e.g. 0,1,2,etc.",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "user-friendly device name e.g. 0,1,2,etc.",
        "name": "userdevice"
      },
      {
        "lifecycle": [
          {
            "description": "true if this VBD is bootable",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "true if this VBD is bootable",
        "name": "bootable"
      },
      {
        "lifecycle": [
          {
            "description": "the mode the VBD should be mounted with",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum vbd_mode",
        "description": "the mode the VBD should be mounted with",
        "name": "mode"
      },
      {
        "lifecycle": [
          {
            "description": "how the VBD will appear to the guest (e.g. disk or CD)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum vbd_type",
        "description": "how the VBD will appear to the guest (e.g. disk or CD)",
        "name": "type"
      },
      {
        "default": "true",
        "lifecycle": [
          {
            "description": "true if this VBD will support hot-unplug",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "true if this VBD will support hot-unplug",
        "name": "unpluggable"
      },
      {
        "lifecycle": [
          {
            "description": "true if a storage level lock was acquired",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if a storage level lock was acquired",
        "name": "storage_lock"
      },
      {
        "lifecycle": [
          {
            "description": "if true this represents an empty drive",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "if true this represents an empty drive",
        "name": "empty"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "is the device currently attached (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "is the device currently attached (erased on reboot)",
        "name": "currently_attached"
      },
      {
        "lifecycle": [
          {
            "description": "error\/success code associated with last attach-operation (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "error\/success code associated with last attach-operation (erased on reboot)",
        "name": "status_code"
      },
      {
        "lifecycle": [
          {
            "description": "error\/success information associated with last attach-operation status (erased on reboot)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "error\/success information associated with last attach-operation status (erased on reboot)",
        "name": "status_detail"
      },
      {
        "lifecycle": [
          {
            "description": "Device runtime properties",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "Device runtime properties",
        "name": "runtime_properties"
      },
      {
        "lifecycle": [
          {
            "description": "QoS algorithm to use",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "QoS algorithm to use",
        "name": "qos_algorithm_type"
      },
      {
        "lifecycle": [
          {
            "description": "parameters for chosen QoS algorithm",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "parameters for chosen QoS algorithm",
        "name": "qos_algorithm_params"
      },
      {
        "lifecycle": [
          {
            "description": "supported QoS algorithms for this VBD",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "supported QoS algorithms for this VBD",
        "name": "qos_supported_algorithms"
      },
      {
        "lifecycle": [
          {
            "description": "metrics associated with this VBD",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VBD_metrics ref",
        "description": "metrics associated with this VBD",
        "name": "metrics"
      }
    ],
    "description": "A virtual block device",
    "name": "VBD"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "The metrics associated with a virtual block device",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VBD_metrics ref -> VBD_metrics record) map",
          "records of all objects"
        ],
        "description": "Return a map of VBD_metrics references to VBD_metrics records for all VBD_metrics instances known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VBD_metrics ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VBD_metrics instances known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VBD_metrics.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VBD_metrics.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VBD_metrics.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VBD_metrics.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given VBD_metrics.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/write_kbs field of the given VBD_metrics.",
        "name": "get_io_write_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "float",
          "value of the field"
        ],
        "description": "Get the io\/read_kbs field of the given VBD_metrics.",
        "name": "get_io_read_kbs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VBD_metrics.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VBD_metrics ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VBD_metrics instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The metrics associated with a virtual block device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VBD_metrics ref"
          }
        ],
        "result": [
          "VBD_metrics record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VBD_metrics.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "Read bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Read bandwidth (KiB\/s)",
        "name": "io_read_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Write bandwidth (KiB\/s)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "Write bandwidth (KiB\/s)",
        "name": "io_write_kbs"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which this information was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which this information was last updated",
        "name": "last_updated"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The metrics associated with a virtual block device",
    "name": "VBD_metrics"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "The physical block devices through which hosts access SRs",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(PBD ref -> PBD record) map",
          "records of all objects"
        ],
        "description": "Return a map of PBD references to PBD records for all PBDs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "PBD ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the PBDs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Sets the PBD's device_config field",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PBD to modify",
            "name": "self",
            "type": "PBD ref"
          },
          {
            "doc": "The new value of the PBD's device_config",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Sets the PBD's device_config field",
        "name": "set_device_config"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PBD to deactivate",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Deactivate the specified PBD, causing the referenced SR to be detached and nolonger scanned",
        "name": "unplug"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Activate the specified PBD, causing the referenced SR to be attached and scanned",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "The SR could not be connected because the driver was not recognised.",
            "name": "SR_UNKNOWN_DRIVER"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PBD to activate",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Activate the specified PBD, causing the referenced SR to be attached and scanned",
        "name": "plug"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given PBD.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given PBD.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given PBD.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given PBD.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "is the SR currently attached on this host?",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the currently_attached field of the given PBD.",
        "name": "get_currently_attached"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a config string to string map that is provided to the host's SR-backend-driver",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the device_config field of the given PBD.",
        "name": "get_device_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the storage repository that the pbd realises",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "SR ref",
          "value of the field"
        ],
        "description": "Get the SR field of the given PBD.",
        "name": "get_SR"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "physical machine on which the pbd is available",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given PBD.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given PBD.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified PBD instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "PBD record"
          }
        ],
        "result": [
          "PBD ref",
          "reference to the newly created object"
        ],
        "description": "Create a new PBD instance, and return its handle.\nThe constructor args are: host*, SR*, device_config*, other_config (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "PBD ref",
          "reference to the object"
        ],
        "description": "Get a reference to the PBD instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The physical block devices through which hosts access SRs",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PBD ref"
          }
        ],
        "result": [
          "PBD record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given PBD.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "physical machine on which the pbd is available",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "physical machine on which the pbd is available",
        "name": "host"
      },
      {
        "lifecycle": [
          {
            "description": "the storage repository that the pbd realises",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "SR ref",
        "description": "the storage repository that the pbd realises",
        "name": "SR"
      },
      {
        "lifecycle": [
          {
            "description": "a config string to string map that is provided to the host's SR-backend-driver",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(string -> string) map",
        "description": "a config string to string map that is provided to the host's SR-backend-driver",
        "name": "device_config"
      },
      {
        "lifecycle": [
          {
            "description": "is the SR currently attached on this host?",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "is the SR currently attached on this host?",
        "name": "currently_attached"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "The physical block devices through which hosts access SRs",
    "name": "PBD"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A VM crashdump",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VM crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(crashdump ref -> crashdump record) map",
          "records of all objects"
        ],
        "description": "Return a map of crashdump references to crashdump records for all crashdumps known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VM crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "crashdump ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the crashdumps known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy the specified crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The crashdump to destroy",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified crashdump",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given crashdump.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given crashdump.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given crashdump.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given crashdump.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the virtual disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "VDI ref",
          "value of the field"
        ],
        "description": "Get the VDI field of the given crashdump.",
        "name": "get_VDI"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given crashdump.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given crashdump.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VM crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "crashdump ref",
          "reference to the object"
        ],
        "description": "Get a reference to the crashdump instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A VM crashdump",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "crashdump ref"
          }
        ],
        "result": [
          "crashdump record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given crashdump.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "the virtual machine",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "the virtual disk",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VDI ref",
        "description": "the virtual disk",
        "name": "VDI"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "miami",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A VM crashdump",
    "name": "crashdump"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A virtual TPM device",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the domain where the backend is located",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VTPM ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the backend field of the given VTPM.",
        "name": "get_backend"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VTPM ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given VTPM.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VTPM ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VTPM.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual TPM device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VTPM ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified VTPM instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual TPM device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "VTPM record"
          }
        ],
        "result": [
          "VTPM ref",
          "reference to the newly created object"
        ],
        "description": "Create a new VTPM instance, and return its handle.\nThe constructor args are: VM*, backend* (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual TPM device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VTPM ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VTPM instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A virtual TPM device",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VTPM ref"
          }
        ],
        "result": [
          "VTPM record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VTPM.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "the virtual machine",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "the virtual machine",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "the domain where the backend is located",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "the domain where the backend is located",
        "name": "backend"
      }
    ],
    "description": "A virtual TPM device",
    "name": "VTPM"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A console",
        "release": "rio",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "VT100 terminal",
            "name": "vt100"
          },
          {
            "doc": "Remote FrameBuffer protocol (as used in VNC)",
            "name": "rfb"
          },
          {
            "doc": "Remote Desktop Protocol",
            "name": "rdp"
          }
        ],
        "name": "console_protocol"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(console ref -> console record) map",
          "records of all objects"
        ],
        "description": "Return a map of console references to console records for all consoles known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "console ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the consoles known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given console.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given console.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given console.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given console.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "VM to which this console is attached",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given console.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "URI for the console service",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the location field of the given console.",
        "name": "get_location"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the protocol used by this console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "enum console_protocol",
          "value of the field"
        ],
        "description": "Get the protocol field of the given console.",
        "name": "get_protocol"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given console.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified console instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "console record"
          }
        ],
        "result": [
          "console ref",
          "reference to the newly created object"
        ],
        "description": "Create a new console instance, and return its handle.\nThe constructor args are: other_config* (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "console ref",
          "reference to the object"
        ],
        "description": "Get a reference to the console instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "console ref"
          }
        ],
        "result": [
          "console record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given console.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "the protocol used by this console",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum console_protocol",
        "description": "the protocol used by this console",
        "name": "protocol"
      },
      {
        "lifecycle": [
          {
            "description": "URI for the console service",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "URI for the console service",
        "name": "location"
      },
      {
        "lifecycle": [
          {
            "description": "VM to which this console is attached",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "VM to which this console is attached",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A console",
    "name": "console"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A user of the system",
        "release": "rio",
        "transition": "published"
      },
      {
        "description": "Deprecated in favor of subject",
        "release": "george",
        "transition": "deprecated"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given user.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given user.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given user.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "full name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the fullname field of the given user.",
        "name": "set_fullname"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given user.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "full name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the fullname field of the given user.",
        "name": "get_fullname"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "short name (e.g. userid)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the short_name field of the given user.",
        "name": "get_short_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given user.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user of the system",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favor of subject",
            "release": "george",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified user instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user of the system",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favor of subject",
            "release": "george",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "user record"
          }
        ],
        "result": [
          "user ref",
          "reference to the newly created object"
        ],
        "description": "Create a new user instance, and return its handle.\nThe constructor args are: short_name*, fullname*, other_config (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user of the system",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favor of subject",
            "release": "george",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "user ref",
          "reference to the object"
        ],
        "description": "Get a reference to the user instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A user of the system",
            "release": "rio",
            "transition": "published"
          },
          {
            "description": "Deprecated in favor of subject",
            "release": "george",
            "transition": "deprecated"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "user ref"
          }
        ],
        "result": [
          "user record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given user.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "short name (e.g. userid)",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "short name (e.g. userid)",
        "name": "short_name"
      },
      {
        "lifecycle": [
          {
            "description": "full name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "full name",
        "name": "fullname"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "additional configuration",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A user of the system",
    "name": "user"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "Data sources for logging in RRDs",
        "release": "orlando",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [],
    "fields": [
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "true if the data source is being logged",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if the data source is being logged",
        "name": "enabled"
      },
      {
        "lifecycle": [
          {
            "description": "true if the data source is enabled by default. Non-default data sources cannot be disabled",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "true if the data source is enabled by default. Non-default data sources cannot be disabled",
        "name": "standard"
      },
      {
        "lifecycle": [
          {
            "description": "the units of the value",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "the units of the value",
        "name": "units"
      },
      {
        "lifecycle": [
          {
            "description": "the minimum value of the data source",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "the minimum value of the data source",
        "name": "min"
      },
      {
        "lifecycle": [
          {
            "description": "the maximum value of the data source",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "the maximum value of the data source",
        "name": "max"
      },
      {
        "lifecycle": [
          {
            "description": "current value of the data source",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "float",
        "description": "current value of the data source",
        "name": "value"
      }
    ],
    "description": "Data sources for logging in RRDs",
    "name": "data_source"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A placeholder for a binary blob",
        "release": "orlando",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(blob ref -> blob record) map",
          "records of all objects"
        ],
        "description": "Return a map of blob references to blob records for all blobs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "blob ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the blobs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The reference of the blob to destroy",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The mime-type of the blob. Defaults to 'application\/octet-stream' if the empty string is supplied",
            "name": "mime_type",
            "type": "string"
          },
          {
            "doc": "True if the blob should be publicly available",
            "name": "public",
            "type": "bool"
          }
        ],
        "result": [
          "blob ref",
          "The reference to the created blob"
        ],
        "description": "Create a placeholder for a binary blob",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the blob is publicly accessible",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "bool"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the public field of the given blob.",
        "name": "set_public"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given blob.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given blob.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The mime type associated with this object. Defaults to 'application\/octet-stream' if the empty string is supplied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the mime_type field of the given blob.",
        "name": "get_mime_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Time at which the data in the blob was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "datetime",
          "value of the field"
        ],
        "description": "Get the last_updated field of the given blob.",
        "name": "get_last_updated"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "True if the blob is publicly accessible",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the public field of the given blob.",
        "name": "get_public"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Size of the binary data, in bytes",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the size field of the given blob.",
        "name": "get_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given blob.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given blob.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given blob.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "blob ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the blob instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "blob ref",
          "reference to the object"
        ],
        "description": "Get a reference to the blob instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A placeholder for a binary blob",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "blob ref"
          }
        ],
        "result": [
          "blob record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given blob.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a human-readable name",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "a notes field containing human-readable description",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "Size of the binary data, in bytes",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Size of the binary data, in bytes",
        "name": "size"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "True if the blob is publicly accessible",
            "release": "tampa",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "bool",
        "description": "True if the blob is publicly accessible",
        "name": "public"
      },
      {
        "lifecycle": [
          {
            "description": "Time at which the data in the blob was last updated",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "Time at which the data in the blob was last updated",
        "name": "last_updated"
      },
      {
        "lifecycle": [
          {
            "description": "The mime type associated with this object. Defaults to 'application\/octet-stream' if the empty string is supplied",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The mime type associated with this object. Defaults to 'application\/octet-stream' if the empty string is supplied",
        "name": "mime_type"
      }
    ],
    "description": "A placeholder for a binary blob",
    "name": "blob"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "An message for the attention of the administrator",
        "release": "orlando",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "VM",
            "name": "VM"
          },
          {
            "doc": "Host",
            "name": "Host"
          },
          {
            "doc": "SR",
            "name": "SR"
          },
          {
            "doc": "Pool",
            "name": "Pool"
          },
          {
            "doc": "VMPP",
            "name": "VMPP"
          }
        ],
        "name": "cls"
      }
    ],
    "messages": [
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The expression to match (not currently used)",
            "name": "expr",
            "type": "string"
          }
        ],
        "result": [
          "(message ref -> message record) map",
          "The messages"
        ],
        "description": "",
        "name": "get_all_records_where"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(message ref -> message record) map",
          "The messages"
        ],
        "description": "",
        "name": "get_all_records"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The uuid of the message",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "message ref",
          "The message reference"
        ],
        "description": "",
        "name": "get_by_uuid"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The reference to the message",
            "name": "self",
            "type": "message ref"
          }
        ],
        "result": [
          "message record",
          "The message record"
        ],
        "description": "",
        "name": "get_record"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The cutoff time",
            "name": "since",
            "type": "datetime"
          }
        ],
        "result": [
          "(message ref -> message record) map",
          "The relevant messages"
        ],
        "description": "",
        "name": "get_since"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "message ref set",
          "The references to the messages"
        ],
        "description": "",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The class of object",
            "name": "cls",
            "type": "enum cls"
          },
          {
            "doc": "The uuid of the object",
            "name": "obj_uuid",
            "type": "string"
          },
          {
            "doc": "The cutoff time",
            "name": "since",
            "type": "datetime"
          }
        ],
        "result": [
          "(message ref -> message record) map",
          "The relevant messages"
        ],
        "description": "",
        "name": "get"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The reference of the message to destroy",
            "name": "self",
            "type": "message ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "orlando",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The name of the message",
            "name": "name",
            "type": "string"
          },
          {
            "doc": "The priority of the message",
            "name": "priority",
            "type": "int"
          },
          {
            "doc": "The class of object this message is associated with",
            "name": "cls",
            "type": "enum cls"
          },
          {
            "doc": "The uuid of the object this message is associated with",
            "name": "obj_uuid",
            "type": "string"
          },
          {
            "doc": "The body of the message",
            "name": "body",
            "type": "string"
          }
        ],
        "result": [
          "message ref",
          "The reference of the created message"
        ],
        "description": "",
        "name": "create"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "The name of the message",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The name of the message",
        "name": "name"
      },
      {
        "lifecycle": [
          {
            "description": "The message priority, 0 being low priority",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "The message priority, 0 being low priority",
        "name": "priority"
      },
      {
        "lifecycle": [
          {
            "description": "The class of the object this message is associated with",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum cls",
        "description": "The class of the object this message is associated with",
        "name": "cls"
      },
      {
        "lifecycle": [
          {
            "description": "The uuid of the object this message is associated with",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The uuid of the object this message is associated with",
        "name": "obj_uuid"
      },
      {
        "lifecycle": [
          {
            "description": "The time at which the message was created",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "datetime",
        "description": "The time at which the message was created",
        "name": "timestamp"
      },
      {
        "lifecycle": [
          {
            "description": "The body of the message",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "The body of the message",
        "name": "body"
      }
    ],
    "description": "An message for the attention of the administrator",
    "name": "message"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "A secret",
        "release": "midnight-ride",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(secret ref -> secret record) map",
          "records of all objects"
        ],
        "description": "Return a map of secret references to secret records for all secrets known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "secret ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the secrets known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "other_config",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given secret.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "other_config",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given secret.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "other_config",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given secret.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the secret",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the value field of the given secret.",
        "name": "set_value"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "other_config",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given secret.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "the secret",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the value field of the given secret.",
        "name": "get_value"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given secret.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy the specified secret instance.",
        "name": "destroy"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "All constructor arguments",
            "name": "args",
            "type": "secret record"
          }
        ],
        "result": [
          "secret ref",
          "reference to the newly created object"
        ],
        "description": "Create a new secret instance, and return its handle.\nThe constructor args are: value*, other_config (* = non-optional).",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "secret ref",
          "reference to the object"
        ],
        "description": "Get a reference to the secret instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A secret",
            "release": "midnight-ride",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "secret ref"
          }
        ],
        "result": [
          "secret record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given secret.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "the secret",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "the secret",
        "name": "value"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "other_config",
            "release": "rio",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "other_config",
        "name": "other_config"
      }
    ],
    "description": "A secret",
    "name": "secret"
  },
  {
    "tag": "networking",
    "lifecycle": [
      {
        "description": "A tunnel for network traffic",
        "release": "cowley",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A tunnel for network traffic",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(tunnel ref -> tunnel record) map",
          "records of all objects"
        ],
        "description": "Return a map of tunnel references to tunnel records for all tunnels known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A tunnel for network traffic",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "tunnel ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the tunnels known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Destroy a tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "tunnel to destroy",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Destroy a tunnel",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "Create a tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [
          {
            "doc": "This operation needs the OpenVSwitch networking backend to be enabled on all hosts in the pool.",
            "name": "OPENVSWITCH_NOT_ACTIVE"
          },
          {
            "doc": "The tunnel transport PIF has no IP configuration set.",
            "name": "TRANSPORT_PIF_NOT_CONFIGURED"
          },
          {
            "doc": "You tried to create a VLAN or tunnel on top of a tunnel access PIF - use the underlying transport PIF instead.",
            "name": "IS_TUNNEL_ACCESS_PIF"
          }
        ],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "PIF which receives the tagged traffic",
            "name": "transport_PIF",
            "type": "PIF ref"
          },
          {
            "doc": "Network to receive the tunnelled traffic",
            "name": "network",
            "type": "network ref"
          }
        ],
        "result": [
          "tunnel ref",
          "The reference of the created tunnel object"
        ],
        "description": "Create a tunnel",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given tunnel.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given tunnel.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given tunnel.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Status information about the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the status field of the given tunnel.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_status"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Status information about the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the status field of the given tunnel.",
        "name": "add_to_status"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Status information about the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the status field of the given tunnel.",
        "name": "set_status"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given tunnel.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Status information about the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the status field of the given tunnel.",
        "name": "get_status"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The interface used by the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the transport_PIF field of the given tunnel.",
        "name": "get_transport_PIF"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "The interface through which the tunnel is accessed",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "PIF ref",
          "value of the field"
        ],
        "description": "Get the access_PIF field of the given tunnel.",
        "name": "get_access_PIF"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given tunnel.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A tunnel for network traffic",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "tunnel ref",
          "reference to the object"
        ],
        "description": "Get a reference to the tunnel instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "A tunnel for network traffic",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "tunnel ref"
          }
        ],
        "result": [
          "tunnel record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given tunnel.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "Unique identifier\/object reference",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "The interface through which the tunnel is accessed",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "The interface through which the tunnel is accessed",
        "name": "access_PIF"
      },
      {
        "default": "Null",
        "lifecycle": [
          {
            "description": "The interface used by the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PIF ref",
        "description": "The interface used by the tunnel",
        "name": "transport_PIF"
      },
      {
        "default": "{\"active\" -> \"false\"}",
        "lifecycle": [
          {
            "description": "Status information about the tunnel",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Status information about the tunnel",
        "name": "status"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "Additional configuration",
            "release": "cowley",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      }
    ],
    "description": "A tunnel for network traffic",
    "name": "tunnel"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(PCI ref -> PCI record) map",
          "records of all objects"
        ],
        "description": "Return a map of PCI references to PCI records for all PCIs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "PCI ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the PCIs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given PCI.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given PCI.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given PCI.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "clearwater-whetstone",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the subsystem_device_name field of the given PCI.",
        "name": "get_subsystem_device_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "clearwater-whetstone",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the subsystem_vendor_name field of the given PCI.",
        "name": "get_subsystem_vendor_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given PCI.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "PCI ref set",
          "value of the field"
        ],
        "description": "Get the dependencies field of the given PCI.",
        "name": "get_dependencies"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the pci_id field of the given PCI.",
        "name": "get_pci_id"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given PCI.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device_name field of the given PCI.",
        "name": "get_device_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor_name field of the given PCI.",
        "name": "get_vendor_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the class_name field of the given PCI.",
        "name": "get_class_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given PCI.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "PCI ref",
          "reference to the object"
        ],
        "description": "Get a reference to the PCI instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PCI ref"
          }
        ],
        "result": [
          "PCI record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given PCI.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "PCI class name",
        "name": "class_name"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Vendor name",
        "name": "vendor_name"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Device name",
        "name": "device_name"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "Physical machine that owns the PCI device",
        "name": "host"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "PCI ID of the physical device",
        "name": "pci_id"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PCI ref set",
        "description": "List of dependent PCI devices",
        "name": "dependencies"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "clearwater-whetstone",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Subsystem vendor name",
        "name": "subsystem_vendor_name"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "clearwater-whetstone",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Subsystem device name",
        "name": "subsystem_device_name"
      }
    ],
    "description": "A PCI device",
    "name": "PCI"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "dom0 can access this device as normal",
            "name": "enabled"
          },
          {
            "doc": "On host reboot dom0 will be blocked from accessing this device",
            "name": "disable_on_reboot"
          },
          {
            "doc": "dom0 cannot access this device",
            "name": "disabled"
          },
          {
            "doc": "On host reboot dom0 will be allowed to access this device",
            "name": "enable_on_reboot"
          }
        ],
        "name": "pgpu_dom0_access"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(PGPU ref -> PGPU record) map",
          "records of all objects"
        ],
        "description": "Return a map of PGPU references to PGPU records for all PGPUs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "PGPU ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the PGPUs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU to which dom0 will be denied access",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "enum pgpu_dom0_access",
          "The accessibility of this PGPU from dom0"
        ],
        "description": "",
        "name": "disable_dom0_access"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU to which dom0 will be granted access",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "enum pgpu_dom0_access",
          "The accessibility of this PGPU from dom0"
        ],
        "description": "",
        "name": "enable_dom0_access"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU to query",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "The VGPU type for which we want to find the number of VGPUs which can still be started on this PGPU",
            "name": "vgpu_type",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "The number of VGPUs of the specified type which can still be started on this PGPU"
        ],
        "description": "",
        "name": "get_remaining_capacity"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU to move to a new group",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "The group to which the PGPU will be moved",
            "name": "value",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_GPU_group"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU on which we are enabling a set of VGPU types",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "The VGPU types to enable",
            "name": "value",
            "type": "VGPU_type ref set"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "set_enabled_VGPU_types"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU from which we are removing an enabled VGPU type",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "The VGPU type to disable",
            "name": "value",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "remove_enabled_VGPU_types"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The PGPU to which we are adding an enabled VGPU type",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "The VGPU type to enable",
            "name": "value",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "add_enabled_VGPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given PGPU.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given PGPU.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given PGPU.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the is_system_display_device field of the given PGPU.",
        "name": "get_is_system_display_device"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "enum pgpu_dom0_access",
          "value of the field"
        ],
        "description": "Get the dom0_access field of the given PGPU.",
        "name": "get_dom0_access"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "(VGPU_type ref -> int) map",
          "value of the field"
        ],
        "description": "Get the supported_VGPU_max_capacities field of the given PGPU.",
        "name": "get_supported_VGPU_max_capacities"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "VGPU ref set",
          "value of the field"
        ],
        "description": "Get the resident_VGPUs field of the given PGPU.",
        "name": "get_resident_VGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "VGPU_type ref set",
          "value of the field"
        ],
        "description": "Get the enabled_VGPU_types field of the given PGPU.",
        "name": "get_enabled_VGPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "VGPU_type ref set",
          "value of the field"
        ],
        "description": "Get the supported_VGPU_types field of the given PGPU.",
        "name": "get_supported_VGPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given PGPU.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "host ref",
          "value of the field"
        ],
        "description": "Get the host field of the given PGPU.",
        "name": "get_host"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "GPU_group ref",
          "value of the field"
        ],
        "description": "Get the GPU_group field of the given PGPU.",
        "name": "get_GPU_group"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "PCI ref",
          "value of the field"
        ],
        "description": "Get the PCI field of the given PGPU.",
        "name": "get_PCI"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given PGPU.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "PGPU ref",
          "reference to the object"
        ],
        "description": "Get a reference to the PGPU instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "PGPU ref"
          }
        ],
        "result": [
          "PGPU record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given PGPU.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PCI ref",
        "description": "Link to underlying PCI device",
        "name": "PCI"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "GPU_group ref",
        "description": "GPU group the pGPU is contained in",
        "name": "GPU_group"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "host ref",
        "description": "Host that own the GPU",
        "name": "host"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU_type ref set",
        "description": "List of VGPU types supported by the underlying hardware",
        "name": "supported_VGPU_types"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU_type ref set",
        "description": "List of VGPU types which have been enabled for this PGPU",
        "name": "enabled_VGPU_types"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU ref set",
        "description": "List of VGPUs running on this PGPU",
        "name": "resident_VGPUs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "(VGPU_type ref -> int) map",
        "description": "A map relating each VGPU type supported on this GPU to the maximum number of VGPUs of that type which can run simultaneously on this GPU",
        "name": "supported_VGPU_max_capacities"
      },
      {
        "default": "enabled",
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum pgpu_dom0_access",
        "description": "The accessibility of this device from dom0",
        "name": "dom0_access"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "",
            "release": "cream",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Is this device the system display device",
        "name": "is_system_display_device"
      }
    ],
    "description": "A physical GPU (pGPU)",
    "name": "PGPU"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "vGPUs of a given type are allocated evenly across supporting pGPUs.",
            "name": "breadth_first"
          },
          {
            "doc": "vGPUs of a given type are allocated on supporting pGPUs until they are full.",
            "name": "depth_first"
          }
        ],
        "name": "allocation_algorithm"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(GPU_group ref -> GPU_group record) map",
          "records of all objects"
        ],
        "description": "Return a map of GPU_group references to GPU_group records for all GPU_groups known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "GPU_group ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the GPU_groups known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The GPU group to query",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "The VGPU_type for which the remaining capacity will be calculated",
            "name": "vgpu_type",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "The number of VGPUs of the given type which can still be started on the PGPUs in the group"
        ],
        "description": "",
        "name": "get_remaining_capacity"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vGPU to destroy",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "",
            "name": "name_label",
            "type": "string"
          },
          {
            "doc": "",
            "name": "name_description",
            "type": "string"
          },
          {
            "doc": "",
            "name": "other_config",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "GPU_group ref",
          ""
        ],
        "description": "",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "enum allocation_algorithm"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the allocation_algorithm field of the given GPU_group.",
        "name": "set_allocation_algorithm"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given GPU_group.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given GPU_group.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given GPU_group.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/description field of the given GPU_group.",
        "name": "set_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the name\/label field of the given GPU_group.",
        "name": "set_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "VGPU_type ref set",
          "value of the field"
        ],
        "description": "Get the enabled_VGPU_types field of the given GPU_group.",
        "name": "get_enabled_VGPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "VGPU_type ref set",
          "value of the field"
        ],
        "description": "Get the supported_VGPU_types field of the given GPU_group.",
        "name": "get_supported_VGPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "enum allocation_algorithm",
          "value of the field"
        ],
        "description": "Get the allocation_algorithm field of the given GPU_group.",
        "name": "get_allocation_algorithm"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given GPU_group.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "string set",
          "value of the field"
        ],
        "description": "Get the GPU_types field of the given GPU_group.",
        "name": "get_GPU_types"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "VGPU ref set",
          "value of the field"
        ],
        "description": "Get the VGPUs field of the given GPU_group.",
        "name": "get_VGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "PGPU ref set",
          "value of the field"
        ],
        "description": "Get the PGPUs field of the given GPU_group.",
        "name": "get_PGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/description field of the given GPU_group.",
        "name": "get_name_description"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the name\/label field of the given GPU_group.",
        "name": "get_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given GPU_group.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "label of object to return",
            "name": "label",
            "type": "string"
          }
        ],
        "result": [
          "GPU_group ref set",
          "references to objects with matching names"
        ],
        "description": "Get all the GPU_group instances with the given label.",
        "name": "get_by_name_label"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "GPU_group ref",
          "reference to the object"
        ],
        "description": "Get a reference to the GPU_group instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "GPU_group ref"
          }
        ],
        "result": [
          "GPU_group record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given GPU_group.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a human-readable name",
        "name": "name_label"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "string",
        "description": "a notes field containing human-readable description",
        "name": "name_description"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PGPU ref set",
        "description": "List of pGPUs in the group",
        "name": "PGPUs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU ref set",
        "description": "List of vGPUs using the group",
        "name": "VGPUs"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string set",
        "description": "List of GPU types (vendor+device ID) that can be in this group",
        "name": "GPU_types"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      },
      {
        "default": "depth_first",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "enum allocation_algorithm",
        "description": "Current allocation of vGPUs to pGPUs for this group",
        "name": "allocation_algorithm"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU_type ref set",
        "description": "vGPU types supported on at least one of the pGPUs in this group",
        "name": "supported_VGPU_types"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU_type ref set",
        "description": "vGPU types supported on at least one of the pGPUs in this group",
        "name": "enabled_VGPU_types"
      }
    ],
    "description": "A group of compatible GPUs across the resource pool",
    "name": "GPU_group"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "boston",
        "transition": "published"
      }
    ],
    "enums": [],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VGPU ref -> VGPU record) map",
          "records of all objects"
        ],
        "description": "Return a map of VGPU references to VGPU records for all VGPUs known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VGPU ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VGPUs known to the system.",
        "name": "get_all"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "The vGPU to destroy",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "void"
        ],
        "description": "",
        "name": "destroy"
      },
      {
        "implicit": false,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "",
            "name": "VM",
            "type": "VM ref"
          },
          {
            "doc": "",
            "name": "GPU_group",
            "type": "GPU_group ref"
          },
          {
            "doc": "",
            "name": "device",
            "type": "string"
          },
          {
            "doc": "",
            "name": "other_config",
            "type": "(string -> string) map"
          },
          {
            "doc": "",
            "name": "type",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "VGPU ref",
          "reference to the newly created object"
        ],
        "description": "",
        "name": "create"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          },
          {
            "doc": "Key to remove",
            "name": "key",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Remove the given key and its corresponding value from the other_config field of the given VGPU.  If the key is not in that Map, then do nothing.",
        "name": "remove_from_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          },
          {
            "doc": "Key to add",
            "name": "key",
            "type": "string"
          },
          {
            "doc": "Value to add",
            "name": "value",
            "type": "string"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Add the given key-value pair to the other_config field of the given VGPU.",
        "name": "add_to_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          },
          {
            "doc": "New value to set",
            "name": "value",
            "type": "(string -> string) map"
          }
        ],
        "result": [
          "void"
        ],
        "description": "Set the other_config field of the given VGPU.",
        "name": "set_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "PGPU ref",
          "value of the field"
        ],
        "description": "Get the resident_on field of the given VGPU.",
        "name": "get_resident_on"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "VGPU_type ref",
          "value of the field"
        ],
        "description": "Get the type field of the given VGPU.",
        "name": "get_type"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "(string -> string) map",
          "value of the field"
        ],
        "description": "Get the other_config field of the given VGPU.",
        "name": "get_other_config"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the currently_attached field of the given VGPU.",
        "name": "get_currently_attached"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the device field of the given VGPU.",
        "name": "get_device"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "GPU_group ref",
          "value of the field"
        ],
        "description": "Get the GPU_group field of the given VGPU.",
        "name": "get_GPU_group"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "VM ref",
          "value of the field"
        ],
        "description": "Get the VM field of the given VGPU.",
        "name": "get_VM"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VGPU.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VGPU ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VGPU instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU ref"
          }
        ],
        "result": [
          "VGPU record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VGPU.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VM ref",
        "description": "VM that owns the vGPU",
        "name": "VM"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "GPU_group ref",
        "description": "GPU group used by the vGPU",
        "name": "GPU_group"
      },
      {
        "default": "\"0\"",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Order in which the devices are plugged into the VM",
        "name": "device"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Reflects whether the virtual device is currently connected to a physical device",
        "name": "currently_attached"
      },
      {
        "default": "{}",
        "lifecycle": [
          {
            "description": "",
            "release": "boston",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read\/write",
        "type": "(string -> string) map",
        "description": "Additional configuration",
        "name": "other_config"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU_type ref",
        "description": "Preset type for this VGPU",
        "name": "type"
      },
      {
        "default": "OpaqueRef:NULL",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PGPU ref",
        "description": "The PGPU on which this VGPU is running",
        "name": "resident_on"
      }
    ],
    "description": "A virtual GPU (vGPU)",
    "name": "VGPU"
  },
  {
    "tag": "",
    "lifecycle": [
      {
        "description": "",
        "release": "vgpu-tech-preview",
        "transition": "published"
      }
    ],
    "enums": [
      {
        "values": [
          {
            "doc": "Pass through an entire physical GPU to a guest",
            "name": "passthrough"
          },
          {
            "doc": "vGPU using NVIDIA hardware",
            "name": "nvidia"
          },
          {
            "doc": "vGPU using Intel GVT-g",
            "name": "gvt_g"
          }
        ],
        "name": "vgpu_type_implementation"
      }
    ],
    "messages": [
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "(VGPU_type ref -> VGPU_type record) map",
          "records of all objects"
        ],
        "description": "Return a map of VGPU_type references to VGPU_type records for all VGPU_types known to the system.",
        "name": "get_all_records"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          }
        ],
        "result": [
          "VGPU_type ref set",
          "references to all objects"
        ],
        "description": "Return a list of all the VGPU_types known to the system.",
        "name": "get_all"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "bool",
          "value of the field"
        ],
        "description": "Get the experimental field of the given VGPU_type.",
        "name": "get_experimental"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the identifier field of the given VGPU_type.",
        "name": "get_identifier"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "enum vgpu_type_implementation",
          "value of the field"
        ],
        "description": "Get the implementation field of the given VGPU_type.",
        "name": "get_implementation"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "GPU_group ref set",
          "value of the field"
        ],
        "description": "Get the enabled_on_GPU_groups field of the given VGPU_type.",
        "name": "get_enabled_on_GPU_groups"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "GPU_group ref set",
          "value of the field"
        ],
        "description": "Get the supported_on_GPU_groups field of the given VGPU_type.",
        "name": "get_supported_on_GPU_groups"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "VGPU ref set",
          "value of the field"
        ],
        "description": "Get the VGPUs field of the given VGPU_type.",
        "name": "get_VGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "PGPU ref set",
          "value of the field"
        ],
        "description": "Get the enabled_on_PGPUs field of the given VGPU_type.",
        "name": "get_enabled_on_PGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "PGPU ref set",
          "value of the field"
        ],
        "description": "Get the supported_on_PGPUs field of the given VGPU_type.",
        "name": "get_supported_on_PGPUs"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the max_resolution_y field of the given VGPU_type.",
        "name": "get_max_resolution_y"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the max_resolution_x field of the given VGPU_type.",
        "name": "get_max_resolution_x"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the max_heads field of the given VGPU_type.",
        "name": "get_max_heads"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "int",
          "value of the field"
        ],
        "description": "Get the framebuffer_size field of the given VGPU_type.",
        "name": "get_framebuffer_size"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the model_name field of the given VGPU_type.",
        "name": "get_model_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the vendor_name field of the given VGPU_type.",
        "name": "get_vendor_name"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "string",
          "value of the field"
        ],
        "description": "Get the uuid field of the given VGPU_type.",
        "name": "get_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "UUID of object to return",
            "name": "uuid",
            "type": "string"
          }
        ],
        "result": [
          "VGPU_type ref",
          "reference to the object"
        ],
        "description": "Get a reference to the VGPU_type instance with the specified UUID.",
        "name": "get_by_uuid"
      },
      {
        "implicit": true,
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "roles": [
          "pool-admin",
          "pool-operator",
          "vm-power-admin",
          "vm-admin",
          "vm-operator",
          "read-only"
        ],
        "errors": [],
        "params": [
          {
            "doc": "Reference to a valid session",
            "name": "session_id",
            "type": "session ref"
          },
          {
            "doc": "reference to the object",
            "name": "self",
            "type": "VGPU_type ref"
          }
        ],
        "result": [
          "VGPU_type record",
          "all fields from the object"
        ],
        "description": "Get a record containing the current state of the given VGPU_type.",
        "name": "get_record"
      }
    ],
    "fields": [
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Unique identifier\/object reference",
        "name": "uuid"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Name of VGPU vendor",
        "name": "vendor_name"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Model name associated with the VGPU type",
        "name": "model_name"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Framebuffer size of the VGPU type, in bytes",
        "name": "framebuffer_size"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Maximum number of displays supported by the VGPU type",
        "name": "max_heads"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Maximum resolution (width) supported by the VGPU type",
        "name": "max_resolution_x"
      },
      {
        "default": "0",
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "int",
        "description": "Maximum resolution (height) supported by the VGPU type",
        "name": "max_resolution_y"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PGPU ref set",
        "description": "List of PGPUs that support this VGPU type",
        "name": "supported_on_PGPUs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "PGPU ref set",
        "description": "List of PGPUs that have this VGPU type enabled",
        "name": "enabled_on_PGPUs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-tech-preview",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "VGPU ref set",
        "description": "List of VGPUs of this type",
        "name": "VGPUs"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "GPU_group ref set",
        "description": "List of GPU groups in which at least one PGPU supports this VGPU type",
        "name": "supported_on_GPU_groups"
      },
      {
        "lifecycle": [
          {
            "description": "",
            "release": "vgpu-productisation",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "GPU_group ref set",
        "description": "List of GPU groups in which at least one have this VGPU type enabled",
        "name": "enabled_on_GPU_groups"
      },
      {
        "default": "passthrough",
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "enum vgpu_type_implementation",
        "description": "The internal implementation of this VGPU type",
        "name": "implementation"
      },
      {
        "default": "\"\"",
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "string",
        "description": "Key used to identify VGPU types and avoid creating duplicates - this field is used internally and not intended for interpretation by API clients",
        "name": "identifier"
      },
      {
        "default": "false",
        "lifecycle": [
          {
            "description": "",
            "release": "dundee",
            "transition": "published"
          }
        ],
        "tag": "",
        "qualifier": "read only",
        "type": "bool",
        "description": "Indicates whether VGPUs of this type should be considered experimental",
        "name": "experimental"
      }
    ],
    "description": "A type of virtual GPU",
    "name": "VGPU_type"
  }
]
